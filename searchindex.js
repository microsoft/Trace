Search.setIndex({"alltitles": {"A Reinforcement Learning Agent": [[468, "a-reinforcement-learning-agent"]], "Adding constraints": [[474, "adding-constraints"]], "Agent Architecture": [[469, "agent-architecture"]], "Backpropagation": [[474, "backpropagation"]], "Basic back-propagation and gradient descent with PyTorch": [[471, "basic-back-propagation-and-gradient-descent-with-pytorch"]], "Basics": [[470, "basics"]], "Batch Optimization": [[473, "batch-optimization"]], "Batching Non-Commutative Feedbacks": [[473, "batching-non-commutative-feedbacks"]], "BigBench-Hard": [[462, "bigbench-hard"]], "Broadcasting": [[470, "broadcasting"]], "Building Custom Optimizer": [[471, "building-custom-optimizer"]], "Coder-Verifier Framework using Trace": [[467, "coder-verifier-framework-using-trace"]], "Creating the initial policy": [[460, "creating-the-initial-policy"]], "Define An Agent Using Trace": [[468, "define-an-agent-using-trace"]], "Define Chat Function": [[461, "define-chat-function"]], "Define Game Components": [[461, "define-game-components"]], "Define a Policy class with multiple trainable functions": [[460, "define-a-policy-class-with-multiple-trainable-functions"]], "Define a Traced Class": [[462, "define-a-traced-class"]], "Define the Evaluation Function": [[462, "define-the-evaluation-function"]], "Define the Optimization Process": [[468, "define-the-optimization-process"]], "Define the end_game function": [[461, "define-the-end-game-function"]], "Define the optimizer": [[462, "define-the-optimizer"]], "Developer Installation": [[466, "developer-installation"]], "Difference to Libraries like AutoGen, AG2, OpenAI Swarm, Llama Stack": [[464, "difference-to-libraries-like-autogen-ag2-openai-swarm-llama-stack"]], "Difference to Libraries like TextGrad": [[464, "difference-to-libraries-like-textgrad"]], "Emergent Pro-Social Behaviors": [[469, "emergent-pro-social-behaviors"]], "Environment Setup": [[460, "environment-setup"], [463, "environment-setup"]], "Error Handling": [[472, "error-handling"]], "Example of Full Optimization Loop": [[474, "example-of-full-optimization-loop"]], "Example of hyper-parameter optimization for ML models": [[474, "example-of-hyper-parameter-optimization-for-ml-models"]], "Example of optimizing functions": [[474, "example-of-optimizing-functions"]], "Example of optimizing strings": [[474, "example-of-optimizing-strings"]], "Execute the Optimization Process": [[463, "execute-the-optimization-process"]], "FAQ": [[464, "faq"]], "Helper Function": [[462, "helper-function"]], "Helper Functions to rollout and evaluate the policy": [[460, "helper-functions-to-rollout-and-evaluate-the-policy"]], "Installation Command": [[466, null]], "Introduction": [[460, "introduction"], [461, "introduction"], [462, "introduction"], [463, "introduction"]], "Meta-World": [[463, "meta-world"]], "Multi-Agent Synchronous Optimization": [[469, "multi-agent-synchronous-optimization"]], "Multi-Agent: Negotiation Arena": [[461, "multi-agent-negotiation-arena"]], "Node and MessageNode": [[470, "node-and-messagenode"]], "Nodes and Python Data Structure": [[470, "nodes-and-python-data-structure"]], "Operations on Nodes": [[470, "operations-on-nodes"]], "Optimization": [[474, "optimization"]], "Optimize Prompts": [[461, "optimize-prompts"]], "Optimize using Trace": [[463, "optimize-using-trace"]], "Optimize with Feedback": [[467, "optimize-with-feedback"]], "Putting it all together": [[460, "putting-it-all-together"], [462, "putting-it-all-together"]], "Recording of Agent Behavior": [[469, "recording-of-agent-behavior"]], "Results": [[469, "results"]], "Rollout Function": [[463, "rollout-function"]], "Save and Load the Optimized Function": [[467, "save-and-load-the-optimized-function"]], "Set up the objective in Trace": [[471, "set-up-the-objective-in-trace"]], "Setup": [[461, "setup"], [462, "setup"]], "Setup and Installation": [[460, "setup-and-installation"], [463, "setup-and-installation"]], "Single Agent: Battleship": [[460, "single-agent-battleship"]], "Start with a Normal Python Program": [[467, "start-with-a-normal-python-program"]], "The Game of BattleShip": [[468, "the-game-of-battleship"]], "The Optimized Function is Runnable": [[467, "the-optimized-function-is-runnable"]], "Trace this Program": [[467, "trace-this-program"]], "Use Bundle to Writing Custom Node Operators": [[470, "use-bundle-to-writing-custom-node-operators"]], "Using bundle to wrap helper functions": [[461, "using-bundle-to-wrap-helper-functions"]], "Version 1 Trace Implementation based on Optimizer": [[471, "version-1-trace-implementation-based-on-optimizer"]], "Version 2 Trace Implementation based on Propagator + Optimizer": [[471, "version-2-trace-implementation-based-on-propagator-optimizer"]], "Visualize Graph": [[470, "visualize-graph"]], "Visualize Trace Graph of an Action": [[468, "visualize-trace-graph-of-an-action"]], "What Did the Agent Learn?": [[468, "what-did-the-agent-learn"]], "What\u2019s Next?": [[467, "what-s-next"], [469, "what-s-next"]], "Wrap the environment into a BattleshipBoard class": [[460, "wrap-the-environment-into-a-battleshipboard-class"]], "opto": [[1, "module-opto"]], "opto.optimizers": [[2, "module-opto.optimizers"]], "opto.optimizers.buffers": [[3, "module-opto.optimizers.buffers"]], "opto.optimizers.buffers.FIFOBuffer": [[4, "opto-optimizers-buffers-fifobuffer"]], "opto.optimizers.buffers.FIFOBuffer.add": [[5, "opto-optimizers-buffers-fifobuffer-add"]], "opto.optimizers.opro": [[6, "module-opto.optimizers.opro"]], "opto.optimizers.opro.OPRO": [[7, "opto-optimizers-opro-opro"]], "opto.optimizers.opro.OPRO.backward": [[8, "opto-optimizers-opro-opro-backward"]], "opto.optimizers.opro.OPRO.call_llm": [[9, "opto-optimizers-opro-opro-call-llm"]], "opto.optimizers.opro.OPRO.construct_prompt": [[10, "opto-optimizers-opro-opro-construct-prompt"]], "opto.optimizers.opro.OPRO.construct_update_dict": [[11, "opto-optimizers-opro-opro-construct-update-dict"]], "opto.optimizers.opro.OPRO.default_objective": [[12, "opto-optimizers-opro-opro-default-objective"]], "opto.optimizers.opro.OPRO.default_prompt_symbols": [[13, "opto-optimizers-opro-opro-default-prompt-symbols"]], "opto.optimizers.opro.OPRO.default_propagator": [[14, "opto-optimizers-opro-opro-default-propagator"]], "opto.optimizers.opro.OPRO.example_problem_template": [[15, "opto-optimizers-opro-opro-example-problem-template"]], "opto.optimizers.opro.OPRO.example_prompt": [[16, "opto-optimizers-opro-opro-example-prompt"]], "opto.optimizers.opro.OPRO.extract_llm_suggestion": [[17, "opto-optimizers-opro-opro-extract-llm-suggestion"]], "opto.optimizers.opro.OPRO.final_prompt": [[18, "opto-optimizers-opro-opro-final-prompt"]], "opto.optimizers.opro.OPRO.output_format_prompt": [[19, "opto-optimizers-opro-opro-output-format-prompt"]], "opto.optimizers.opro.OPRO.problem_instance": [[20, "opto-optimizers-opro-opro-problem-instance"]], "opto.optimizers.opro.OPRO.propagator": [[21, "opto-optimizers-opro-opro-propagator"]], "opto.optimizers.opro.OPRO.propose": [[22, "opto-optimizers-opro-opro-propose"]], "opto.optimizers.opro.OPRO.replace_symbols": [[23, "opto-optimizers-opro-opro-replace-symbols"]], "opto.optimizers.opro.OPRO.repr_node_constraint": [[24, "opto-optimizers-opro-opro-repr-node-constraint"]], "opto.optimizers.opro.OPRO.repr_node_value": [[25, "opto-optimizers-opro-opro-repr-node-value"]], "opto.optimizers.opro.OPRO.representation_prompt": [[26, "opto-optimizers-opro-opro-representation-prompt"]], "opto.optimizers.opro.OPRO.step": [[27, "opto-optimizers-opro-opro-step"]], "opto.optimizers.opro.OPRO.summarize": [[28, "opto-optimizers-opro-opro-summarize"]], "opto.optimizers.opro.OPRO.trace_graph": [[29, "opto-optimizers-opro-opro-trace-graph"]], "opto.optimizers.opro.OPRO.update": [[30, "opto-optimizers-opro-opro-update"]], "opto.optimizers.opro.OPRO.user_prompt_template": [[31, "opto-optimizers-opro-opro-user-prompt-template"]], "opto.optimizers.opro.OPRO.zero_feedback": [[32, "opto-optimizers-opro-opro-zero-feedback"]], "opto.optimizers.optimizer": [[33, "module-opto.optimizers.optimizer"]], "opto.optimizers.optimizer.AbstractOptimizer": [[34, "opto-optimizers-optimizer-abstractoptimizer"]], "opto.optimizers.optimizer.AbstractOptimizer.propagator": [[35, "opto-optimizers-optimizer-abstractoptimizer-propagator"]], "opto.optimizers.optimizer.AbstractOptimizer.step": [[36, "opto-optimizers-optimizer-abstractoptimizer-step"]], "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback": [[37, "opto-optimizers-optimizer-abstractoptimizer-zero-feedback"]], "opto.optimizers.optimizer.Optimizer": [[38, "opto-optimizers-optimizer-optimizer"]], "opto.optimizers.optimizer.Optimizer.backward": [[39, "opto-optimizers-optimizer-optimizer-backward"]], "opto.optimizers.optimizer.Optimizer.default_propagator": [[40, "opto-optimizers-optimizer-optimizer-default-propagator"]], "opto.optimizers.optimizer.Optimizer.propagator": [[41, "opto-optimizers-optimizer-optimizer-propagator"]], "opto.optimizers.optimizer.Optimizer.propose": [[42, "opto-optimizers-optimizer-optimizer-propose"]], "opto.optimizers.optimizer.Optimizer.step": [[43, "opto-optimizers-optimizer-optimizer-step"]], "opto.optimizers.optimizer.Optimizer.trace_graph": [[44, "opto-optimizers-optimizer-optimizer-trace-graph"]], "opto.optimizers.optimizer.Optimizer.update": [[45, "opto-optimizers-optimizer-optimizer-update"]], "opto.optimizers.optimizer.Optimizer.zero_feedback": [[46, "opto-optimizers-optimizer-optimizer-zero-feedback"]], "opto.optimizers.optoprime": [[47, "module-opto.optimizers.optoprime"]], "opto.optimizers.optoprime.FunctionFeedback": [[48, "opto-optimizers-optoprime-functionfeedback"]], "opto.optimizers.optoprime.FunctionFeedback.documentation": [[49, "opto-optimizers-optoprime-functionfeedback-documentation"]], "opto.optimizers.optoprime.FunctionFeedback.graph": [[50, "opto-optimizers-optoprime-functionfeedback-graph"]], "opto.optimizers.optoprime.FunctionFeedback.others": [[51, "opto-optimizers-optoprime-functionfeedback-others"]], "opto.optimizers.optoprime.FunctionFeedback.output": [[52, "opto-optimizers-optoprime-functionfeedback-output"]], "opto.optimizers.optoprime.FunctionFeedback.roots": [[53, "opto-optimizers-optoprime-functionfeedback-roots"]], "opto.optimizers.optoprime.FunctionFeedback.user_feedback": [[54, "opto-optimizers-optoprime-functionfeedback-user-feedback"]], "opto.optimizers.optoprime.OptoPrime": [[55, "opto-optimizers-optoprime-optoprime"]], "opto.optimizers.optoprime.OptoPrime.backward": [[56, "opto-optimizers-optoprime-optoprime-backward"]], "opto.optimizers.optoprime.OptoPrime.call_llm": [[57, "opto-optimizers-optoprime-optoprime-call-llm"]], "opto.optimizers.optoprime.OptoPrime.construct_prompt": [[58, "opto-optimizers-optoprime-optoprime-construct-prompt"]], "opto.optimizers.optoprime.OptoPrime.construct_update_dict": [[59, "opto-optimizers-optoprime-optoprime-construct-update-dict"]], "opto.optimizers.optoprime.OptoPrime.default_objective": [[60, "opto-optimizers-optoprime-optoprime-default-objective"]], "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols": [[61, "opto-optimizers-optoprime-optoprime-default-prompt-symbols"]], "opto.optimizers.optoprime.OptoPrime.default_propagator": [[62, "opto-optimizers-optoprime-optoprime-default-propagator"]], "opto.optimizers.optoprime.OptoPrime.example_problem_template": [[63, "opto-optimizers-optoprime-optoprime-example-problem-template"]], "opto.optimizers.optoprime.OptoPrime.example_prompt": [[64, "opto-optimizers-optoprime-optoprime-example-prompt"]], "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion": [[65, "opto-optimizers-optoprime-optoprime-extract-llm-suggestion"]], "opto.optimizers.optoprime.OptoPrime.final_prompt": [[66, "opto-optimizers-optoprime-optoprime-final-prompt"]], "opto.optimizers.optoprime.OptoPrime.output_format_prompt": [[67, "opto-optimizers-optoprime-optoprime-output-format-prompt"]], "opto.optimizers.optoprime.OptoPrime.problem_instance": [[68, "opto-optimizers-optoprime-optoprime-problem-instance"]], "opto.optimizers.optoprime.OptoPrime.propagator": [[69, "opto-optimizers-optoprime-optoprime-propagator"]], "opto.optimizers.optoprime.OptoPrime.propose": [[70, "opto-optimizers-optoprime-optoprime-propose"]], "opto.optimizers.optoprime.OptoPrime.replace_symbols": [[71, "opto-optimizers-optoprime-optoprime-replace-symbols"]], "opto.optimizers.optoprime.OptoPrime.repr_node_constraint": [[72, "opto-optimizers-optoprime-optoprime-repr-node-constraint"]], "opto.optimizers.optoprime.OptoPrime.repr_node_value": [[73, "opto-optimizers-optoprime-optoprime-repr-node-value"]], "opto.optimizers.optoprime.OptoPrime.representation_prompt": [[74, "opto-optimizers-optoprime-optoprime-representation-prompt"]], "opto.optimizers.optoprime.OptoPrime.step": [[75, "opto-optimizers-optoprime-optoprime-step"]], "opto.optimizers.optoprime.OptoPrime.summarize": [[76, "opto-optimizers-optoprime-optoprime-summarize"]], "opto.optimizers.optoprime.OptoPrime.trace_graph": [[77, "opto-optimizers-optoprime-optoprime-trace-graph"]], "opto.optimizers.optoprime.OptoPrime.update": [[78, "opto-optimizers-optoprime-optoprime-update"]], "opto.optimizers.optoprime.OptoPrime.user_prompt_template": [[79, "opto-optimizers-optoprime-optoprime-user-prompt-template"]], "opto.optimizers.optoprime.OptoPrime.zero_feedback": [[80, "opto-optimizers-optoprime-optoprime-zero-feedback"]], "opto.optimizers.optoprime.ProblemInstance": [[81, "opto-optimizers-optoprime-probleminstance"]], "opto.optimizers.optoprime.ProblemInstance.code": [[82, "opto-optimizers-optoprime-probleminstance-code"]], "opto.optimizers.optoprime.ProblemInstance.constraints": [[83, "opto-optimizers-optoprime-probleminstance-constraints"]], "opto.optimizers.optoprime.ProblemInstance.documentation": [[84, "opto-optimizers-optoprime-probleminstance-documentation"]], "opto.optimizers.optoprime.ProblemInstance.feedback": [[85, "opto-optimizers-optoprime-probleminstance-feedback"]], "opto.optimizers.optoprime.ProblemInstance.inputs": [[86, "opto-optimizers-optoprime-probleminstance-inputs"]], "opto.optimizers.optoprime.ProblemInstance.instruction": [[87, "opto-optimizers-optoprime-probleminstance-instruction"]], "opto.optimizers.optoprime.ProblemInstance.others": [[88, "opto-optimizers-optoprime-probleminstance-others"]], "opto.optimizers.optoprime.ProblemInstance.outputs": [[89, "opto-optimizers-optoprime-probleminstance-outputs"]], "opto.optimizers.optoprime.ProblemInstance.problem_template": [[90, "opto-optimizers-optoprime-probleminstance-problem-template"]], "opto.optimizers.optoprime.ProblemInstance.variables": [[91, "opto-optimizers-optoprime-probleminstance-variables"]], "opto.optimizers.optoprime.get_fun_name": [[92, "opto-optimizers-optoprime-get-fun-name"]], "opto.optimizers.optoprime.node_to_function_feedback": [[93, "opto-optimizers-optoprime-node-to-function-feedback"]], "opto.optimizers.optoprime.repr_function_call": [[94, "opto-optimizers-optoprime-repr-function-call"]], "opto.optimizers.optoprimemulti": [[95, "module-opto.optimizers.optoprimemulti"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti": [[96, "opto-optimizers-optoprimemulti-optoprimemulti"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.backward": [[97, "opto-optimizers-optoprimemulti-optoprimemulti-backward"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.call_llm": [[98, "opto-optimizers-optoprimemulti-optoprimemulti-call-llm"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_prompt": [[99, "opto-optimizers-optoprimemulti-optoprimemulti-construct-prompt"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_update_dict": [[100, "opto-optimizers-optoprimemulti-optoprimemulti-construct-update-dict"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_objective": [[101, "opto-optimizers-optoprimemulti-optoprimemulti-default-objective"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_prompt_symbols": [[102, "opto-optimizers-optoprimemulti-optoprimemulti-default-prompt-symbols"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_propagator": [[103, "opto-optimizers-optoprimemulti-optoprimemulti-default-propagator"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.example_problem_template": [[104, "opto-optimizers-optoprimemulti-optoprimemulti-example-problem-template"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.example_prompt": [[105, "opto-optimizers-optoprimemulti-optoprimemulti-example-prompt"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.extract_llm_suggestion": [[106, "opto-optimizers-optoprimemulti-optoprimemulti-extract-llm-suggestion"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.final_prompt": [[107, "opto-optimizers-optoprimemulti-optoprimemulti-final-prompt"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.generate_candidates": [[108, "opto-optimizers-optoprimemulti-optoprimemulti-generate-candidates"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.output_format_prompt": [[109, "opto-optimizers-optoprimemulti-optoprimemulti-output-format-prompt"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.problem_instance": [[110, "opto-optimizers-optoprimemulti-optoprimemulti-problem-instance"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.propagator": [[111, "opto-optimizers-optoprimemulti-optoprimemulti-propagator"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.propose": [[112, "opto-optimizers-optoprimemulti-optoprimemulti-propose"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.replace_symbols": [[113, "opto-optimizers-optoprimemulti-optoprimemulti-replace-symbols"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_constraint": [[114, "opto-optimizers-optoprimemulti-optoprimemulti-repr-node-constraint"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_value": [[115, "opto-optimizers-optoprimemulti-optoprimemulti-repr-node-value"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.representation_prompt": [[116, "opto-optimizers-optoprimemulti-optoprimemulti-representation-prompt"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.select_candidate": [[117, "opto-optimizers-optoprimemulti-optoprimemulti-select-candidate"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.step": [[118, "opto-optimizers-optoprimemulti-optoprimemulti-step"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.summarize": [[119, "opto-optimizers-optoprimemulti-optoprimemulti-summarize"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.trace_graph": [[120, "opto-optimizers-optoprimemulti-optoprimemulti-trace-graph"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.update": [[121, "opto-optimizers-optoprimemulti-optoprimemulti-update"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.user_prompt_template": [[122, "opto-optimizers-optoprimemulti-optoprimemulti-user-prompt-template"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti.zero_feedback": [[123, "opto-optimizers-optoprimemulti-optoprimemulti-zero-feedback"]], "opto.optimizers.textgrad": [[124, "module-opto.optimizers.textgrad"]], "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE": [[125, "opto-optimizers-textgrad-gradient-multipart-template"]], "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION": [[126, "opto-optimizers-textgrad-gradient-of-results-instruction"]], "opto.optimizers.textgrad.GradientInfo": [[127, "opto-optimizers-textgrad-gradientinfo"]], "opto.optimizers.textgrad.GradientInfo.gradient": [[128, "opto-optimizers-textgrad-gradientinfo-gradient"]], "opto.optimizers.textgrad.GradientInfo.gradient_context": [[129, "opto-optimizers-textgrad-gradientinfo-gradient-context"]], "opto.optimizers.textgrad.TextGrad": [[130, "opto-optimizers-textgrad-textgrad"]], "opto.optimizers.textgrad.TextGrad.backward": [[131, "opto-optimizers-textgrad-textgrad-backward"]], "opto.optimizers.textgrad.TextGrad.call_llm": [[132, "opto-optimizers-textgrad-textgrad-call-llm"]], "opto.optimizers.textgrad.TextGrad.default_propagator": [[133, "opto-optimizers-textgrad-textgrad-default-propagator"]], "opto.optimizers.textgrad.TextGrad.propagator": [[134, "opto-optimizers-textgrad-textgrad-propagator"]], "opto.optimizers.textgrad.TextGrad.propose": [[135, "opto-optimizers-textgrad-textgrad-propose"]], "opto.optimizers.textgrad.TextGrad.step": [[136, "opto-optimizers-textgrad-textgrad-step"]], "opto.optimizers.textgrad.TextGrad.trace_graph": [[137, "opto-optimizers-textgrad-textgrad-trace-graph"]], "opto.optimizers.textgrad.TextGrad.update": [[138, "opto-optimizers-textgrad-textgrad-update"]], "opto.optimizers.textgrad.TextGrad.zero_feedback": [[139, "opto-optimizers-textgrad-textgrad-zero-feedback"]], "opto.optimizers.textgrad.construct_reduce_prompt": [[140, "opto-optimizers-textgrad-construct-reduce-prompt"]], "opto.optimizers.textgrad.construct_tgd_prompt": [[141, "opto-optimizers-textgrad-construct-tgd-prompt"]], "opto.optimizers.textgrad.get_short_value": [[142, "opto-optimizers-textgrad-get-short-value"]], "opto.optimizers.textgrad.rm_node_attrs": [[143, "opto-optimizers-textgrad-rm-node-attrs"]], "opto.optimizers.utils": [[144, "module-opto.optimizers.utils"]], "opto.optimizers.utils.print_color": [[145, "opto-optimizers-utils-print-color"]], "opto.trace": [[146, "module-opto.trace"]], "opto.trace.broadcast": [[147, "module-opto.trace.broadcast"]], "opto.trace.broadcast.apply_op": [[148, "opto-trace-broadcast-apply-op"]], "opto.trace.broadcast.recursive_conversion": [[149, "opto-trace-broadcast-recursive-conversion"]], "opto.trace.bundle": [[150, "module-opto.trace.bundle"]], "opto.trace.containers": [[151, "module-opto.trace.containers"]], "opto.trace.containers.Map": [[152, "opto-trace-containers-map"]], "opto.trace.containers.Map.clear": [[153, "opto-trace-containers-map-clear"]], "opto.trace.containers.Map.copy": [[154, "opto-trace-containers-map-copy"]], "opto.trace.containers.Map.fromkeys": [[155, "opto-trace-containers-map-fromkeys"]], "opto.trace.containers.Map.get": [[156, "opto-trace-containers-map-get"]], "opto.trace.containers.Map.items": [[157, "opto-trace-containers-map-items"]], "opto.trace.containers.Map.keys": [[158, "opto-trace-containers-map-keys"]], "opto.trace.containers.Map.parameters": [[159, "opto-trace-containers-map-parameters"]], "opto.trace.containers.Map.parameters_dict": [[160, "opto-trace-containers-map-parameters-dict"]], "opto.trace.containers.Map.pop": [[161, "opto-trace-containers-map-pop"]], "opto.trace.containers.Map.popitem": [[162, "opto-trace-containers-map-popitem"]], "opto.trace.containers.Map.setdefault": [[163, "opto-trace-containers-map-setdefault"]], "opto.trace.containers.Map.update": [[164, "opto-trace-containers-map-update"]], "opto.trace.containers.Map.values": [[165, "opto-trace-containers-map-values"]], "opto.trace.containers.NodeContainer": [[166, "opto-trace-containers-nodecontainer"]], "opto.trace.containers.ParameterContainer": [[167, "opto-trace-containers-parametercontainer"]], "opto.trace.containers.ParameterContainer.parameters": [[168, "opto-trace-containers-parametercontainer-parameters"]], "opto.trace.containers.ParameterContainer.parameters_dict": [[169, "opto-trace-containers-parametercontainer-parameters-dict"]], "opto.trace.containers.Seq": [[170, "opto-trace-containers-seq"]], "opto.trace.containers.Seq.append": [[171, "opto-trace-containers-seq-append"]], "opto.trace.containers.Seq.clear": [[172, "opto-trace-containers-seq-clear"]], "opto.trace.containers.Seq.copy": [[173, "opto-trace-containers-seq-copy"]], "opto.trace.containers.Seq.count": [[174, "opto-trace-containers-seq-count"]], "opto.trace.containers.Seq.extend": [[175, "opto-trace-containers-seq-extend"]], "opto.trace.containers.Seq.index": [[176, "opto-trace-containers-seq-index"]], "opto.trace.containers.Seq.insert": [[177, "opto-trace-containers-seq-insert"]], "opto.trace.containers.Seq.parameters": [[178, "opto-trace-containers-seq-parameters"]], "opto.trace.containers.Seq.parameters_dict": [[179, "opto-trace-containers-seq-parameters-dict"]], "opto.trace.containers.Seq.pop": [[180, "opto-trace-containers-seq-pop"]], "opto.trace.containers.Seq.remove": [[181, "opto-trace-containers-seq-remove"]], "opto.trace.containers.Seq.reverse": [[182, "opto-trace-containers-seq-reverse"]], "opto.trace.containers.Seq.sort": [[183, "opto-trace-containers-seq-sort"]], "opto.trace.containers.trainable_method": [[184, "opto-trace-containers-trainable-method"]], "opto.trace.errors": [[185, "module-opto.trace.errors"]], "opto.trace.errors.ExecutionError": [[186, "opto-trace-errors-executionerror"]], "opto.trace.errors.TraceMissingInputsError": [[187, "opto-trace-errors-tracemissinginputserror"]], "opto.trace.iterators": [[188, "module-opto.trace.iterators"]], "opto.trace.iterators.DictIterable": [[189, "opto-trace-iterators-dictiterable"]], "opto.trace.iterators.SeqIterable": [[190, "opto-trace-iterators-seqiterable"]], "opto.trace.iterators.iterate": [[191, "opto-trace-iterators-iterate"]], "opto.trace.modules": [[192, "module-opto.trace.modules"]], "opto.trace.modules.Module": [[193, "opto-trace-modules-module"]], "opto.trace.modules.Module.forward": [[194, "opto-trace-modules-module-forward"]], "opto.trace.modules.Module.load": [[195, "opto-trace-modules-module-load"]], "opto.trace.modules.Module.parameters": [[196, "opto-trace-modules-module-parameters"]], "opto.trace.modules.Module.parameters_dict": [[197, "opto-trace-modules-module-parameters-dict"]], "opto.trace.modules.Module.save": [[198, "opto-trace-modules-module-save"]], "opto.trace.modules.model": [[199, "opto-trace-modules-model"]], "opto.trace.nodes": [[200, "module-opto.trace.nodes"]], "opto.trace.nodes.AbstractNode": [[201, "opto-trace-nodes-abstractnode"]], "opto.trace.nodes.AbstractNode.children": [[202, "opto-trace-nodes-abstractnode-children"]], "opto.trace.nodes.AbstractNode.data": [[203, "opto-trace-nodes-abstractnode-data"]], "opto.trace.nodes.AbstractNode.gt": [[204, "opto-trace-nodes-abstractnode-gt"]], "opto.trace.nodes.AbstractNode.id": [[205, "opto-trace-nodes-abstractnode-id"]], "opto.trace.nodes.AbstractNode.is_leaf": [[206, "opto-trace-nodes-abstractnode-is-leaf"]], "opto.trace.nodes.AbstractNode.is_root": [[207, "opto-trace-nodes-abstractnode-is-root"]], "opto.trace.nodes.AbstractNode.level": [[208, "opto-trace-nodes-abstractnode-level"]], "opto.trace.nodes.AbstractNode.lt": [[209, "opto-trace-nodes-abstractnode-lt"]], "opto.trace.nodes.AbstractNode.name": [[210, "opto-trace-nodes-abstractnode-name"]], "opto.trace.nodes.AbstractNode.parents": [[211, "opto-trace-nodes-abstractnode-parents"]], "opto.trace.nodes.AbstractNode.py_name": [[212, "opto-trace-nodes-abstractnode-py-name"]], "opto.trace.nodes.ExceptionNode": [[213, "opto-trace-nodes-exceptionnode"]], "opto.trace.nodes.ExceptionNode.append": [[214, "opto-trace-nodes-exceptionnode-append"]], "opto.trace.nodes.ExceptionNode.backward": [[215, "opto-trace-nodes-exceptionnode-backward"]], "opto.trace.nodes.ExceptionNode.call": [[216, "opto-trace-nodes-exceptionnode-call"]], "opto.trace.nodes.ExceptionNode.capitalize": [[217, "opto-trace-nodes-exceptionnode-capitalize"]], "opto.trace.nodes.ExceptionNode.children": [[218, "opto-trace-nodes-exceptionnode-children"]], "opto.trace.nodes.ExceptionNode.clone": [[219, "opto-trace-nodes-exceptionnode-clone"]], "opto.trace.nodes.ExceptionNode.create_feedback": [[220, "opto-trace-nodes-exceptionnode-create-feedback"]], "opto.trace.nodes.ExceptionNode.data": [[221, "opto-trace-nodes-exceptionnode-data"]], "opto.trace.nodes.ExceptionNode.description": [[222, "opto-trace-nodes-exceptionnode-description"]], "opto.trace.nodes.ExceptionNode.detach": [[223, "opto-trace-nodes-exceptionnode-detach"]], "opto.trace.nodes.ExceptionNode.eq": [[224, "opto-trace-nodes-exceptionnode-eq"]], "opto.trace.nodes.ExceptionNode.expandable_dependencies": [[225, "opto-trace-nodes-exceptionnode-expandable-dependencies"]], "opto.trace.nodes.ExceptionNode.feedback": [[226, "opto-trace-nodes-exceptionnode-feedback"]], "opto.trace.nodes.ExceptionNode.format": [[227, "opto-trace-nodes-exceptionnode-format"]], "opto.trace.nodes.ExceptionNode.getattr": [[228, "opto-trace-nodes-exceptionnode-getattr"]], "opto.trace.nodes.ExceptionNode.gt": [[229, "opto-trace-nodes-exceptionnode-gt"]], "opto.trace.nodes.ExceptionNode.hidden_dependencies": [[230, "opto-trace-nodes-exceptionnode-hidden-dependencies"]], "opto.trace.nodes.ExceptionNode.id": [[231, "opto-trace-nodes-exceptionnode-id"]], "opto.trace.nodes.ExceptionNode.info": [[232, "opto-trace-nodes-exceptionnode-info"]], "opto.trace.nodes.ExceptionNode.inputs": [[233, "opto-trace-nodes-exceptionnode-inputs"]], "opto.trace.nodes.ExceptionNode.is_leaf": [[234, "opto-trace-nodes-exceptionnode-is-leaf"]], "opto.trace.nodes.ExceptionNode.is_root": [[235, "opto-trace-nodes-exceptionnode-is-root"]], "opto.trace.nodes.ExceptionNode.items": [[236, "opto-trace-nodes-exceptionnode-items"]], "opto.trace.nodes.ExceptionNode.join": [[237, "opto-trace-nodes-exceptionnode-join"]], "opto.trace.nodes.ExceptionNode.keys": [[238, "opto-trace-nodes-exceptionnode-keys"]], "opto.trace.nodes.ExceptionNode.len": [[239, "opto-trace-nodes-exceptionnode-len"]], "opto.trace.nodes.ExceptionNode.level": [[240, "opto-trace-nodes-exceptionnode-level"]], "opto.trace.nodes.ExceptionNode.lower": [[241, "opto-trace-nodes-exceptionnode-lower"]], "opto.trace.nodes.ExceptionNode.lt": [[242, "opto-trace-nodes-exceptionnode-lt"]], "opto.trace.nodes.ExceptionNode.name": [[243, "opto-trace-nodes-exceptionnode-name"]], "opto.trace.nodes.ExceptionNode.neq": [[244, "opto-trace-nodes-exceptionnode-neq"]], "opto.trace.nodes.ExceptionNode.parameter_dependencies": [[245, "opto-trace-nodes-exceptionnode-parameter-dependencies"]], "opto.trace.nodes.ExceptionNode.parents": [[246, "opto-trace-nodes-exceptionnode-parents"]], "opto.trace.nodes.ExceptionNode.pop": [[247, "opto-trace-nodes-exceptionnode-pop"]], "opto.trace.nodes.ExceptionNode.py_name": [[248, "opto-trace-nodes-exceptionnode-py-name"]], "opto.trace.nodes.ExceptionNode.replace": [[249, "opto-trace-nodes-exceptionnode-replace"]], "opto.trace.nodes.ExceptionNode.split": [[250, "opto-trace-nodes-exceptionnode-split"]], "opto.trace.nodes.ExceptionNode.strip": [[251, "opto-trace-nodes-exceptionnode-strip"]], "opto.trace.nodes.ExceptionNode.swapcase": [[252, "opto-trace-nodes-exceptionnode-swapcase"]], "opto.trace.nodes.ExceptionNode.title": [[253, "opto-trace-nodes-exceptionnode-title"]], "opto.trace.nodes.ExceptionNode.type": [[254, "opto-trace-nodes-exceptionnode-type"]], "opto.trace.nodes.ExceptionNode.upper": [[255, "opto-trace-nodes-exceptionnode-upper"]], "opto.trace.nodes.ExceptionNode.values": [[256, "opto-trace-nodes-exceptionnode-values"]], "opto.trace.nodes.ExceptionNode.zero_feedback": [[257, "opto-trace-nodes-exceptionnode-zero-feedback"]], "opto.trace.nodes.Graph": [[258, "opto-trace-nodes-graph"]], "opto.trace.nodes.Graph.TRACE": [[259, "opto-trace-nodes-graph-trace"]], "opto.trace.nodes.Graph.clear": [[260, "opto-trace-nodes-graph-clear"]], "opto.trace.nodes.Graph.get": [[261, "opto-trace-nodes-graph-get"]], "opto.trace.nodes.Graph.register": [[262, "opto-trace-nodes-graph-register"]], "opto.trace.nodes.Graph.roots": [[263, "opto-trace-nodes-graph-roots"]], "opto.trace.nodes.MessageNode": [[264, "opto-trace-nodes-messagenode"]], "opto.trace.nodes.MessageNode.append": [[265, "opto-trace-nodes-messagenode-append"]], "opto.trace.nodes.MessageNode.backward": [[266, "opto-trace-nodes-messagenode-backward"]], "opto.trace.nodes.MessageNode.call": [[267, "opto-trace-nodes-messagenode-call"]], "opto.trace.nodes.MessageNode.capitalize": [[268, "opto-trace-nodes-messagenode-capitalize"]], "opto.trace.nodes.MessageNode.children": [[269, "opto-trace-nodes-messagenode-children"]], "opto.trace.nodes.MessageNode.clone": [[270, "opto-trace-nodes-messagenode-clone"]], "opto.trace.nodes.MessageNode.data": [[271, "opto-trace-nodes-messagenode-data"]], "opto.trace.nodes.MessageNode.description": [[272, "opto-trace-nodes-messagenode-description"]], "opto.trace.nodes.MessageNode.detach": [[273, "opto-trace-nodes-messagenode-detach"]], "opto.trace.nodes.MessageNode.eq": [[274, "opto-trace-nodes-messagenode-eq"]], "opto.trace.nodes.MessageNode.expandable_dependencies": [[275, "opto-trace-nodes-messagenode-expandable-dependencies"]], "opto.trace.nodes.MessageNode.feedback": [[276, "opto-trace-nodes-messagenode-feedback"]], "opto.trace.nodes.MessageNode.format": [[277, "opto-trace-nodes-messagenode-format"]], "opto.trace.nodes.MessageNode.getattr": [[278, "opto-trace-nodes-messagenode-getattr"]], "opto.trace.nodes.MessageNode.gt": [[279, "opto-trace-nodes-messagenode-gt"]], "opto.trace.nodes.MessageNode.hidden_dependencies": [[280, "opto-trace-nodes-messagenode-hidden-dependencies"]], "opto.trace.nodes.MessageNode.id": [[281, "opto-trace-nodes-messagenode-id"]], "opto.trace.nodes.MessageNode.info": [[282, "opto-trace-nodes-messagenode-info"]], "opto.trace.nodes.MessageNode.inputs": [[283, "opto-trace-nodes-messagenode-inputs"]], "opto.trace.nodes.MessageNode.is_leaf": [[284, "opto-trace-nodes-messagenode-is-leaf"]], "opto.trace.nodes.MessageNode.is_root": [[285, "opto-trace-nodes-messagenode-is-root"]], "opto.trace.nodes.MessageNode.items": [[286, "opto-trace-nodes-messagenode-items"]], "opto.trace.nodes.MessageNode.join": [[287, "opto-trace-nodes-messagenode-join"]], "opto.trace.nodes.MessageNode.keys": [[288, "opto-trace-nodes-messagenode-keys"]], "opto.trace.nodes.MessageNode.len": [[289, "opto-trace-nodes-messagenode-len"]], "opto.trace.nodes.MessageNode.level": [[290, "opto-trace-nodes-messagenode-level"]], "opto.trace.nodes.MessageNode.lower": [[291, "opto-trace-nodes-messagenode-lower"]], "opto.trace.nodes.MessageNode.lt": [[292, "opto-trace-nodes-messagenode-lt"]], "opto.trace.nodes.MessageNode.name": [[293, "opto-trace-nodes-messagenode-name"]], "opto.trace.nodes.MessageNode.neq": [[294, "opto-trace-nodes-messagenode-neq"]], "opto.trace.nodes.MessageNode.parameter_dependencies": [[295, "opto-trace-nodes-messagenode-parameter-dependencies"]], "opto.trace.nodes.MessageNode.parents": [[296, "opto-trace-nodes-messagenode-parents"]], "opto.trace.nodes.MessageNode.pop": [[297, "opto-trace-nodes-messagenode-pop"]], "opto.trace.nodes.MessageNode.py_name": [[298, "opto-trace-nodes-messagenode-py-name"]], "opto.trace.nodes.MessageNode.replace": [[299, "opto-trace-nodes-messagenode-replace"]], "opto.trace.nodes.MessageNode.split": [[300, "opto-trace-nodes-messagenode-split"]], "opto.trace.nodes.MessageNode.strip": [[301, "opto-trace-nodes-messagenode-strip"]], "opto.trace.nodes.MessageNode.swapcase": [[302, "opto-trace-nodes-messagenode-swapcase"]], "opto.trace.nodes.MessageNode.title": [[303, "opto-trace-nodes-messagenode-title"]], "opto.trace.nodes.MessageNode.type": [[304, "opto-trace-nodes-messagenode-type"]], "opto.trace.nodes.MessageNode.upper": [[305, "opto-trace-nodes-messagenode-upper"]], "opto.trace.nodes.MessageNode.values": [[306, "opto-trace-nodes-messagenode-values"]], "opto.trace.nodes.MessageNode.zero_feedback": [[307, "opto-trace-nodes-messagenode-zero-feedback"]], "opto.trace.nodes.Node": [[308, "opto-trace-nodes-node"]], "opto.trace.nodes.Node.append": [[309, "opto-trace-nodes-node-append"]], "opto.trace.nodes.Node.backward": [[310, "opto-trace-nodes-node-backward"]], "opto.trace.nodes.Node.call": [[311, "opto-trace-nodes-node-call"]], "opto.trace.nodes.Node.capitalize": [[312, "opto-trace-nodes-node-capitalize"]], "opto.trace.nodes.Node.children": [[313, "opto-trace-nodes-node-children"]], "opto.trace.nodes.Node.clone": [[314, "opto-trace-nodes-node-clone"]], "opto.trace.nodes.Node.data": [[315, "opto-trace-nodes-node-data"]], "opto.trace.nodes.Node.description": [[316, "opto-trace-nodes-node-description"]], "opto.trace.nodes.Node.detach": [[317, "opto-trace-nodes-node-detach"]], "opto.trace.nodes.Node.eq": [[318, "opto-trace-nodes-node-eq"]], "opto.trace.nodes.Node.expandable_dependencies": [[319, "opto-trace-nodes-node-expandable-dependencies"]], "opto.trace.nodes.Node.feedback": [[320, "opto-trace-nodes-node-feedback"]], "opto.trace.nodes.Node.format": [[321, "opto-trace-nodes-node-format"]], "opto.trace.nodes.Node.getattr": [[322, "opto-trace-nodes-node-getattr"]], "opto.trace.nodes.Node.gt": [[323, "opto-trace-nodes-node-gt"]], "opto.trace.nodes.Node.id": [[324, "opto-trace-nodes-node-id"]], "opto.trace.nodes.Node.info": [[325, "opto-trace-nodes-node-info"]], "opto.trace.nodes.Node.is_leaf": [[326, "opto-trace-nodes-node-is-leaf"]], "opto.trace.nodes.Node.is_root": [[327, "opto-trace-nodes-node-is-root"]], "opto.trace.nodes.Node.items": [[328, "opto-trace-nodes-node-items"]], "opto.trace.nodes.Node.join": [[329, "opto-trace-nodes-node-join"]], "opto.trace.nodes.Node.keys": [[330, "opto-trace-nodes-node-keys"]], "opto.trace.nodes.Node.len": [[331, "opto-trace-nodes-node-len"]], "opto.trace.nodes.Node.level": [[332, "opto-trace-nodes-node-level"]], "opto.trace.nodes.Node.lower": [[333, "opto-trace-nodes-node-lower"]], "opto.trace.nodes.Node.lt": [[334, "opto-trace-nodes-node-lt"]], "opto.trace.nodes.Node.name": [[335, "opto-trace-nodes-node-name"]], "opto.trace.nodes.Node.neq": [[336, "opto-trace-nodes-node-neq"]], "opto.trace.nodes.Node.parameter_dependencies": [[337, "opto-trace-nodes-node-parameter-dependencies"]], "opto.trace.nodes.Node.parents": [[338, "opto-trace-nodes-node-parents"]], "opto.trace.nodes.Node.pop": [[339, "opto-trace-nodes-node-pop"]], "opto.trace.nodes.Node.py_name": [[340, "opto-trace-nodes-node-py-name"]], "opto.trace.nodes.Node.replace": [[341, "opto-trace-nodes-node-replace"]], "opto.trace.nodes.Node.split": [[342, "opto-trace-nodes-node-split"]], "opto.trace.nodes.Node.strip": [[343, "opto-trace-nodes-node-strip"]], "opto.trace.nodes.Node.swapcase": [[344, "opto-trace-nodes-node-swapcase"]], "opto.trace.nodes.Node.title": [[345, "opto-trace-nodes-node-title"]], "opto.trace.nodes.Node.type": [[346, "opto-trace-nodes-node-type"]], "opto.trace.nodes.Node.upper": [[347, "opto-trace-nodes-node-upper"]], "opto.trace.nodes.Node.values": [[348, "opto-trace-nodes-node-values"]], "opto.trace.nodes.Node.zero_feedback": [[349, "opto-trace-nodes-node-zero-feedback"]], "opto.trace.nodes.NodeVizStyleGuide": [[350, "opto-trace-nodes-nodevizstyleguide"]], "opto.trace.nodes.NodeVizStyleGuide.get_attrs": [[351, "opto-trace-nodes-nodevizstyleguide-get-attrs"]], "opto.trace.nodes.NodeVizStyleGuide.get_color": [[352, "opto-trace-nodes-nodevizstyleguide-get-color"]], "opto.trace.nodes.NodeVizStyleGuide.get_label": [[353, "opto-trace-nodes-nodevizstyleguide-get-label"]], "opto.trace.nodes.NodeVizStyleGuide.get_node_shape": [[354, "opto-trace-nodes-nodevizstyleguide-get-node-shape"]], "opto.trace.nodes.NodeVizStyleGuide.get_style": [[355, "opto-trace-nodes-nodevizstyleguide-get-style"]], "opto.trace.nodes.NodeVizStyleGuideColorful": [[356, "opto-trace-nodes-nodevizstyleguidecolorful"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs": [[357, "opto-trace-nodes-nodevizstyleguidecolorful-get-attrs"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color": [[358, "opto-trace-nodes-nodevizstyleguidecolorful-get-border-color"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_color": [[359, "opto-trace-nodes-nodevizstyleguidecolorful-get-color"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_label": [[360, "opto-trace-nodes-nodevizstyleguidecolorful-get-label"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape": [[361, "opto-trace-nodes-nodevizstyleguidecolorful-get-node-shape"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_style": [[362, "opto-trace-nodes-nodevizstyleguidecolorful-get-style"]], "opto.trace.nodes.ParameterNode": [[363, "opto-trace-nodes-parameternode"]], "opto.trace.nodes.ParameterNode.append": [[364, "opto-trace-nodes-parameternode-append"]], "opto.trace.nodes.ParameterNode.backward": [[365, "opto-trace-nodes-parameternode-backward"]], "opto.trace.nodes.ParameterNode.call": [[366, "opto-trace-nodes-parameternode-call"]], "opto.trace.nodes.ParameterNode.capitalize": [[367, "opto-trace-nodes-parameternode-capitalize"]], "opto.trace.nodes.ParameterNode.children": [[368, "opto-trace-nodes-parameternode-children"]], "opto.trace.nodes.ParameterNode.clone": [[369, "opto-trace-nodes-parameternode-clone"]], "opto.trace.nodes.ParameterNode.data": [[370, "opto-trace-nodes-parameternode-data"]], "opto.trace.nodes.ParameterNode.description": [[371, "opto-trace-nodes-parameternode-description"]], "opto.trace.nodes.ParameterNode.detach": [[372, "opto-trace-nodes-parameternode-detach"]], "opto.trace.nodes.ParameterNode.eq": [[373, "opto-trace-nodes-parameternode-eq"]], "opto.trace.nodes.ParameterNode.expandable_dependencies": [[374, "opto-trace-nodes-parameternode-expandable-dependencies"]], "opto.trace.nodes.ParameterNode.feedback": [[375, "opto-trace-nodes-parameternode-feedback"]], "opto.trace.nodes.ParameterNode.format": [[376, "opto-trace-nodes-parameternode-format"]], "opto.trace.nodes.ParameterNode.getattr": [[377, "opto-trace-nodes-parameternode-getattr"]], "opto.trace.nodes.ParameterNode.gt": [[378, "opto-trace-nodes-parameternode-gt"]], "opto.trace.nodes.ParameterNode.id": [[379, "opto-trace-nodes-parameternode-id"]], "opto.trace.nodes.ParameterNode.info": [[380, "opto-trace-nodes-parameternode-info"]], "opto.trace.nodes.ParameterNode.is_leaf": [[381, "opto-trace-nodes-parameternode-is-leaf"]], "opto.trace.nodes.ParameterNode.is_root": [[382, "opto-trace-nodes-parameternode-is-root"]], "opto.trace.nodes.ParameterNode.items": [[383, "opto-trace-nodes-parameternode-items"]], "opto.trace.nodes.ParameterNode.join": [[384, "opto-trace-nodes-parameternode-join"]], "opto.trace.nodes.ParameterNode.keys": [[385, "opto-trace-nodes-parameternode-keys"]], "opto.trace.nodes.ParameterNode.len": [[386, "opto-trace-nodes-parameternode-len"]], "opto.trace.nodes.ParameterNode.level": [[387, "opto-trace-nodes-parameternode-level"]], "opto.trace.nodes.ParameterNode.lower": [[388, "opto-trace-nodes-parameternode-lower"]], "opto.trace.nodes.ParameterNode.lt": [[389, "opto-trace-nodes-parameternode-lt"]], "opto.trace.nodes.ParameterNode.name": [[390, "opto-trace-nodes-parameternode-name"]], "opto.trace.nodes.ParameterNode.neq": [[391, "opto-trace-nodes-parameternode-neq"]], "opto.trace.nodes.ParameterNode.parameter_dependencies": [[392, "opto-trace-nodes-parameternode-parameter-dependencies"]], "opto.trace.nodes.ParameterNode.parents": [[393, "opto-trace-nodes-parameternode-parents"]], "opto.trace.nodes.ParameterNode.pop": [[394, "opto-trace-nodes-parameternode-pop"]], "opto.trace.nodes.ParameterNode.py_name": [[395, "opto-trace-nodes-parameternode-py-name"]], "opto.trace.nodes.ParameterNode.replace": [[396, "opto-trace-nodes-parameternode-replace"]], "opto.trace.nodes.ParameterNode.split": [[397, "opto-trace-nodes-parameternode-split"]], "opto.trace.nodes.ParameterNode.strip": [[398, "opto-trace-nodes-parameternode-strip"]], "opto.trace.nodes.ParameterNode.swapcase": [[399, "opto-trace-nodes-parameternode-swapcase"]], "opto.trace.nodes.ParameterNode.title": [[400, "opto-trace-nodes-parameternode-title"]], "opto.trace.nodes.ParameterNode.type": [[401, "opto-trace-nodes-parameternode-type"]], "opto.trace.nodes.ParameterNode.upper": [[402, "opto-trace-nodes-parameternode-upper"]], "opto.trace.nodes.ParameterNode.values": [[403, "opto-trace-nodes-parameternode-values"]], "opto.trace.nodes.ParameterNode.zero_feedback": [[404, "opto-trace-nodes-parameternode-zero-feedback"]], "opto.trace.nodes.get_op_name": [[405, "opto-trace-nodes-get-op-name"]], "opto.trace.nodes.node": [[406, "opto-trace-nodes-node"]], "opto.trace.operators": [[407, "module-opto.trace.operators"]], "opto.trace.operators.identity": [[408, "opto-trace-operators-identity"]], "opto.trace.propagators": [[409, "module-opto.trace.propagators"]], "opto.trace.propagators.graph_propagator": [[410, "module-opto.trace.propagators.graph_propagator"]], "opto.trace.propagators.graph_propagator.GraphPropagator": [[411, "opto-trace-propagators-graph-propagator-graphpropagator"]], "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate": [[412, "opto-trace-propagators-graph-propagator-graphpropagator-aggregate"]], "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback": [[413, "opto-trace-propagators-graph-propagator-graphpropagator-init-feedback"]], "opto.trace.propagators.graph_propagator.GraphPropagator.propagate": [[414, "opto-trace-propagators-graph-propagator-graphpropagator-propagate"]], "opto.trace.propagators.graph_propagator.GraphPropagator.register": [[415, "opto-trace-propagators-graph-propagator-graphpropagator-register"]], "opto.trace.propagators.graph_propagator.TraceGraph": [[416, "opto-trace-propagators-graph-propagator-tracegraph"]], "opto.trace.propagators.graph_propagator.TraceGraph.empty": [[417, "opto-trace-propagators-graph-propagator-tracegraph-empty"]], "opto.trace.propagators.graph_propagator.TraceGraph.expand": [[418, "opto-trace-propagators-graph-propagator-tracegraph-expand"]], "opto.trace.propagators.graph_propagator.TraceGraph.graph": [[419, "opto-trace-propagators-graph-propagator-tracegraph-graph"]], "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback": [[420, "opto-trace-propagators-graph-propagator-tracegraph-user-feedback"]], "opto.trace.propagators.graph_propagator.TraceGraph.visualize": [[421, "opto-trace-propagators-graph-propagator-tracegraph-visualize"]], "opto.trace.propagators.propagators": [[422, "module-opto.trace.propagators.propagators"]], "opto.trace.propagators.propagators.AbstractFeedback": [[423, "opto-trace-propagators-propagators-abstractfeedback"]], "opto.trace.propagators.propagators.AbstractPropagator": [[424, "opto-trace-propagators-propagators-abstractpropagator"]], "opto.trace.propagators.propagators.AbstractPropagator.propagate": [[425, "opto-trace-propagators-propagators-abstractpropagator-propagate"]], "opto.trace.propagators.propagators.Propagator": [[426, "opto-trace-propagators-propagators-propagator"]], "opto.trace.propagators.propagators.Propagator.init_feedback": [[427, "opto-trace-propagators-propagators-propagator-init-feedback"]], "opto.trace.propagators.propagators.Propagator.propagate": [[428, "opto-trace-propagators-propagators-propagator-propagate"]], "opto.trace.propagators.propagators.Propagator.register": [[429, "opto-trace-propagators-propagators-propagator-register"]], "opto.trace.propagators.propagators.SumPropagator": [[430, "opto-trace-propagators-propagators-sumpropagator"]], "opto.trace.propagators.propagators.SumPropagator.init_feedback": [[431, "opto-trace-propagators-propagators-sumpropagator-init-feedback"]], "opto.trace.propagators.propagators.SumPropagator.propagate": [[432, "opto-trace-propagators-propagators-sumpropagator-propagate"]], "opto.trace.propagators.propagators.SumPropagator.register": [[433, "opto-trace-propagators-propagators-sumpropagator-register"]], "opto.trace.stop_tracing": [[434, "opto-trace-stop-tracing"]], "opto.trace.utils": [[435, "module-opto.trace.utils"]], "opto.trace.utils.contain": [[436, "opto-trace-utils-contain"]], "opto.trace.utils.escape_json_nested_quotes": [[437, "opto-trace-utils-escape-json-nested-quotes"]], "opto.trace.utils.for_all_methods": [[438, "opto-trace-utils-for-all-methods"]], "opto.trace.utils.parse_eqs_to_dict": [[439, "opto-trace-utils-parse-eqs-to-dict"]], "opto.trace.utils.remove_non_ascii": [[440, "opto-trace-utils-remove-non-ascii"]], "opto.trace.utils.render_opt_step": [[441, "opto-trace-utils-render-opt-step"]], "opto.trace.utils.sum_feedback": [[442, "opto-trace-utils-sum-feedback"]], "opto.trace.utils.test_json_quote_escaper": [[443, "opto-trace-utils-test-json-quote-escaper"]], "opto.utils": [[444, "module-opto.utils"]], "opto.utils.llm": [[445, "module-opto.utils.llm"]], "opto.utils.llm.AbstractModel": [[446, "opto-utils-llm-abstractmodel"]], "opto.utils.llm.AbstractModel.model": [[447, "opto-utils-llm-abstractmodel-model"]], "opto.utils.llm.AutoGenLLM": [[448, "opto-utils-llm-autogenllm"]], "opto.utils.llm.AutoGenLLM.create": [[449, "opto-utils-llm-autogenllm-create"]], "opto.utils.llm.AutoGenLLM.model": [[450, "opto-utils-llm-autogenllm-model"]], "opto.utils.llm.CustomLLM": [[451, "opto-utils-llm-customllm"]], "opto.utils.llm.CustomLLM.create": [[452, "opto-utils-llm-customllm-create"]], "opto.utils.llm.CustomLLM.model": [[453, "opto-utils-llm-customllm-model"]], "opto.utils.llm.LLM": [[454, "opto-utils-llm-llm"]], "opto.utils.llm.LLM.model": [[455, "opto-utils-llm-llm-model"]], "opto.utils.llm.LiteLLM": [[456, "opto-utils-llm-litellm"]], "opto.utils.llm.LiteLLM.model": [[457, "opto-utils-llm-litellm-model"]], "opto.utils.llm.auto_construct_oai_config_list_from_env": [[458, "opto-utils-llm-auto-construct-oai-config-list-from-env"]], "opto.version": [[459, "module-opto.version"]], "\u26a1\ufe0f First: 5-Minute Basics": [[467, "first-5-minute-basics"]], "\ud83c\udf10  Installation": [[466, "installation"]], "\ud83c\udfaf Trace": [[465, "trace"]], "\ud83c\udfe0 VirtualHome": [[469, "virtualhome"]], "\ud83d\ude80 Next: Adaptive Agent": [[468, "next-adaptive-agent"]], "\ud83e\udd2f Finally: Emergent Behaviors": [[469, "finally-emergent-behaviors"]]}, "docnames": ["api", "api/opto", "api/opto.optimizers", "api/opto.optimizers.buffers", "api/opto.optimizers.buffers.FIFOBuffer", "api/opto.optimizers.buffers.FIFOBuffer.add", "api/opto.optimizers.opro", "api/opto.optimizers.opro.OPRO", "api/opto.optimizers.opro.OPRO.backward", "api/opto.optimizers.opro.OPRO.call_llm", "api/opto.optimizers.opro.OPRO.construct_prompt", "api/opto.optimizers.opro.OPRO.construct_update_dict", "api/opto.optimizers.opro.OPRO.default_objective", "api/opto.optimizers.opro.OPRO.default_prompt_symbols", "api/opto.optimizers.opro.OPRO.default_propagator", "api/opto.optimizers.opro.OPRO.example_problem_template", "api/opto.optimizers.opro.OPRO.example_prompt", "api/opto.optimizers.opro.OPRO.extract_llm_suggestion", "api/opto.optimizers.opro.OPRO.final_prompt", "api/opto.optimizers.opro.OPRO.output_format_prompt", "api/opto.optimizers.opro.OPRO.problem_instance", "api/opto.optimizers.opro.OPRO.propagator", "api/opto.optimizers.opro.OPRO.propose", "api/opto.optimizers.opro.OPRO.replace_symbols", "api/opto.optimizers.opro.OPRO.repr_node_constraint", "api/opto.optimizers.opro.OPRO.repr_node_value", "api/opto.optimizers.opro.OPRO.representation_prompt", "api/opto.optimizers.opro.OPRO.step", "api/opto.optimizers.opro.OPRO.summarize", "api/opto.optimizers.opro.OPRO.trace_graph", "api/opto.optimizers.opro.OPRO.update", "api/opto.optimizers.opro.OPRO.user_prompt_template", "api/opto.optimizers.opro.OPRO.zero_feedback", "api/opto.optimizers.optimizer", "api/opto.optimizers.optimizer.AbstractOptimizer", "api/opto.optimizers.optimizer.AbstractOptimizer.propagator", "api/opto.optimizers.optimizer.AbstractOptimizer.step", "api/opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", "api/opto.optimizers.optimizer.Optimizer", "api/opto.optimizers.optimizer.Optimizer.backward", "api/opto.optimizers.optimizer.Optimizer.default_propagator", "api/opto.optimizers.optimizer.Optimizer.propagator", "api/opto.optimizers.optimizer.Optimizer.propose", "api/opto.optimizers.optimizer.Optimizer.step", "api/opto.optimizers.optimizer.Optimizer.trace_graph", "api/opto.optimizers.optimizer.Optimizer.update", "api/opto.optimizers.optimizer.Optimizer.zero_feedback", "api/opto.optimizers.optoprime", "api/opto.optimizers.optoprime.FunctionFeedback", "api/opto.optimizers.optoprime.FunctionFeedback.documentation", "api/opto.optimizers.optoprime.FunctionFeedback.graph", "api/opto.optimizers.optoprime.FunctionFeedback.others", "api/opto.optimizers.optoprime.FunctionFeedback.output", "api/opto.optimizers.optoprime.FunctionFeedback.roots", "api/opto.optimizers.optoprime.FunctionFeedback.user_feedback", "api/opto.optimizers.optoprime.OptoPrime", "api/opto.optimizers.optoprime.OptoPrime.backward", "api/opto.optimizers.optoprime.OptoPrime.call_llm", "api/opto.optimizers.optoprime.OptoPrime.construct_prompt", "api/opto.optimizers.optoprime.OptoPrime.construct_update_dict", "api/opto.optimizers.optoprime.OptoPrime.default_objective", "api/opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", "api/opto.optimizers.optoprime.OptoPrime.default_propagator", "api/opto.optimizers.optoprime.OptoPrime.example_problem_template", "api/opto.optimizers.optoprime.OptoPrime.example_prompt", "api/opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", "api/opto.optimizers.optoprime.OptoPrime.final_prompt", "api/opto.optimizers.optoprime.OptoPrime.output_format_prompt", "api/opto.optimizers.optoprime.OptoPrime.problem_instance", "api/opto.optimizers.optoprime.OptoPrime.propagator", "api/opto.optimizers.optoprime.OptoPrime.propose", "api/opto.optimizers.optoprime.OptoPrime.replace_symbols", "api/opto.optimizers.optoprime.OptoPrime.repr_node_constraint", "api/opto.optimizers.optoprime.OptoPrime.repr_node_value", "api/opto.optimizers.optoprime.OptoPrime.representation_prompt", "api/opto.optimizers.optoprime.OptoPrime.step", "api/opto.optimizers.optoprime.OptoPrime.summarize", "api/opto.optimizers.optoprime.OptoPrime.trace_graph", "api/opto.optimizers.optoprime.OptoPrime.update", "api/opto.optimizers.optoprime.OptoPrime.user_prompt_template", "api/opto.optimizers.optoprime.OptoPrime.zero_feedback", "api/opto.optimizers.optoprime.ProblemInstance", "api/opto.optimizers.optoprime.ProblemInstance.code", "api/opto.optimizers.optoprime.ProblemInstance.constraints", "api/opto.optimizers.optoprime.ProblemInstance.documentation", "api/opto.optimizers.optoprime.ProblemInstance.feedback", "api/opto.optimizers.optoprime.ProblemInstance.inputs", "api/opto.optimizers.optoprime.ProblemInstance.instruction", "api/opto.optimizers.optoprime.ProblemInstance.others", "api/opto.optimizers.optoprime.ProblemInstance.outputs", "api/opto.optimizers.optoprime.ProblemInstance.problem_template", "api/opto.optimizers.optoprime.ProblemInstance.variables", "api/opto.optimizers.optoprime.get_fun_name", "api/opto.optimizers.optoprime.node_to_function_feedback", "api/opto.optimizers.optoprime.repr_function_call", "api/opto.optimizers.optoprimemulti", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.backward", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.call_llm", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_prompt", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_update_dict", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.default_objective", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.default_prompt_symbols", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.default_propagator", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.example_problem_template", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.example_prompt", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.extract_llm_suggestion", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.final_prompt", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.generate_candidates", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.output_format_prompt", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.problem_instance", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.propagator", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.propose", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.replace_symbols", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_constraint", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_value", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.representation_prompt", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.select_candidate", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.step", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.summarize", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.trace_graph", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.update", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.user_prompt_template", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.zero_feedback", "api/opto.optimizers.textgrad", "api/opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", "api/opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", "api/opto.optimizers.textgrad.GradientInfo", "api/opto.optimizers.textgrad.GradientInfo.gradient", "api/opto.optimizers.textgrad.GradientInfo.gradient_context", "api/opto.optimizers.textgrad.TextGrad", "api/opto.optimizers.textgrad.TextGrad.backward", "api/opto.optimizers.textgrad.TextGrad.call_llm", "api/opto.optimizers.textgrad.TextGrad.default_propagator", "api/opto.optimizers.textgrad.TextGrad.propagator", "api/opto.optimizers.textgrad.TextGrad.propose", "api/opto.optimizers.textgrad.TextGrad.step", "api/opto.optimizers.textgrad.TextGrad.trace_graph", "api/opto.optimizers.textgrad.TextGrad.update", "api/opto.optimizers.textgrad.TextGrad.zero_feedback", "api/opto.optimizers.textgrad.construct_reduce_prompt", "api/opto.optimizers.textgrad.construct_tgd_prompt", "api/opto.optimizers.textgrad.get_short_value", "api/opto.optimizers.textgrad.rm_node_attrs", "api/opto.optimizers.utils", "api/opto.optimizers.utils.print_color", "api/opto.trace", "api/opto.trace.broadcast", "api/opto.trace.broadcast.apply_op", "api/opto.trace.broadcast.recursive_conversion", "api/opto.trace.bundle", "api/opto.trace.containers", "api/opto.trace.containers.Map", "api/opto.trace.containers.Map.clear", "api/opto.trace.containers.Map.copy", "api/opto.trace.containers.Map.fromkeys", "api/opto.trace.containers.Map.get", "api/opto.trace.containers.Map.items", "api/opto.trace.containers.Map.keys", "api/opto.trace.containers.Map.parameters", "api/opto.trace.containers.Map.parameters_dict", "api/opto.trace.containers.Map.pop", "api/opto.trace.containers.Map.popitem", "api/opto.trace.containers.Map.setdefault", "api/opto.trace.containers.Map.update", "api/opto.trace.containers.Map.values", "api/opto.trace.containers.NodeContainer", "api/opto.trace.containers.ParameterContainer", "api/opto.trace.containers.ParameterContainer.parameters", "api/opto.trace.containers.ParameterContainer.parameters_dict", "api/opto.trace.containers.Seq", "api/opto.trace.containers.Seq.append", "api/opto.trace.containers.Seq.clear", "api/opto.trace.containers.Seq.copy", "api/opto.trace.containers.Seq.count", "api/opto.trace.containers.Seq.extend", "api/opto.trace.containers.Seq.index", "api/opto.trace.containers.Seq.insert", "api/opto.trace.containers.Seq.parameters", "api/opto.trace.containers.Seq.parameters_dict", "api/opto.trace.containers.Seq.pop", "api/opto.trace.containers.Seq.remove", "api/opto.trace.containers.Seq.reverse", "api/opto.trace.containers.Seq.sort", "api/opto.trace.containers.trainable_method", "api/opto.trace.errors", "api/opto.trace.errors.ExecutionError", "api/opto.trace.errors.TraceMissingInputsError", "api/opto.trace.iterators", "api/opto.trace.iterators.DictIterable", "api/opto.trace.iterators.SeqIterable", "api/opto.trace.iterators.iterate", "api/opto.trace.modules", "api/opto.trace.modules.Module", "api/opto.trace.modules.Module.forward", "api/opto.trace.modules.Module.load", "api/opto.trace.modules.Module.parameters", "api/opto.trace.modules.Module.parameters_dict", "api/opto.trace.modules.Module.save", "api/opto.trace.modules.model", "api/opto.trace.nodes", "api/opto.trace.nodes.AbstractNode", "api/opto.trace.nodes.AbstractNode.children", "api/opto.trace.nodes.AbstractNode.data", "api/opto.trace.nodes.AbstractNode.gt", "api/opto.trace.nodes.AbstractNode.id", "api/opto.trace.nodes.AbstractNode.is_leaf", "api/opto.trace.nodes.AbstractNode.is_root", "api/opto.trace.nodes.AbstractNode.level", "api/opto.trace.nodes.AbstractNode.lt", "api/opto.trace.nodes.AbstractNode.name", "api/opto.trace.nodes.AbstractNode.parents", "api/opto.trace.nodes.AbstractNode.py_name", "api/opto.trace.nodes.ExceptionNode", "api/opto.trace.nodes.ExceptionNode.append", "api/opto.trace.nodes.ExceptionNode.backward", "api/opto.trace.nodes.ExceptionNode.call", "api/opto.trace.nodes.ExceptionNode.capitalize", "api/opto.trace.nodes.ExceptionNode.children", "api/opto.trace.nodes.ExceptionNode.clone", "api/opto.trace.nodes.ExceptionNode.create_feedback", "api/opto.trace.nodes.ExceptionNode.data", "api/opto.trace.nodes.ExceptionNode.description", "api/opto.trace.nodes.ExceptionNode.detach", "api/opto.trace.nodes.ExceptionNode.eq", "api/opto.trace.nodes.ExceptionNode.expandable_dependencies", "api/opto.trace.nodes.ExceptionNode.feedback", "api/opto.trace.nodes.ExceptionNode.format", "api/opto.trace.nodes.ExceptionNode.getattr", "api/opto.trace.nodes.ExceptionNode.gt", "api/opto.trace.nodes.ExceptionNode.hidden_dependencies", "api/opto.trace.nodes.ExceptionNode.id", "api/opto.trace.nodes.ExceptionNode.info", "api/opto.trace.nodes.ExceptionNode.inputs", "api/opto.trace.nodes.ExceptionNode.is_leaf", "api/opto.trace.nodes.ExceptionNode.is_root", "api/opto.trace.nodes.ExceptionNode.items", "api/opto.trace.nodes.ExceptionNode.join", "api/opto.trace.nodes.ExceptionNode.keys", "api/opto.trace.nodes.ExceptionNode.len", "api/opto.trace.nodes.ExceptionNode.level", "api/opto.trace.nodes.ExceptionNode.lower", "api/opto.trace.nodes.ExceptionNode.lt", "api/opto.trace.nodes.ExceptionNode.name", "api/opto.trace.nodes.ExceptionNode.neq", "api/opto.trace.nodes.ExceptionNode.parameter_dependencies", "api/opto.trace.nodes.ExceptionNode.parents", "api/opto.trace.nodes.ExceptionNode.pop", "api/opto.trace.nodes.ExceptionNode.py_name", "api/opto.trace.nodes.ExceptionNode.replace", "api/opto.trace.nodes.ExceptionNode.split", "api/opto.trace.nodes.ExceptionNode.strip", "api/opto.trace.nodes.ExceptionNode.swapcase", "api/opto.trace.nodes.ExceptionNode.title", "api/opto.trace.nodes.ExceptionNode.type", "api/opto.trace.nodes.ExceptionNode.upper", "api/opto.trace.nodes.ExceptionNode.values", "api/opto.trace.nodes.ExceptionNode.zero_feedback", "api/opto.trace.nodes.Graph", "api/opto.trace.nodes.Graph.TRACE", "api/opto.trace.nodes.Graph.clear", "api/opto.trace.nodes.Graph.get", "api/opto.trace.nodes.Graph.register", "api/opto.trace.nodes.Graph.roots", "api/opto.trace.nodes.MessageNode", "api/opto.trace.nodes.MessageNode.append", "api/opto.trace.nodes.MessageNode.backward", "api/opto.trace.nodes.MessageNode.call", "api/opto.trace.nodes.MessageNode.capitalize", "api/opto.trace.nodes.MessageNode.children", "api/opto.trace.nodes.MessageNode.clone", "api/opto.trace.nodes.MessageNode.data", "api/opto.trace.nodes.MessageNode.description", "api/opto.trace.nodes.MessageNode.detach", "api/opto.trace.nodes.MessageNode.eq", "api/opto.trace.nodes.MessageNode.expandable_dependencies", "api/opto.trace.nodes.MessageNode.feedback", "api/opto.trace.nodes.MessageNode.format", "api/opto.trace.nodes.MessageNode.getattr", "api/opto.trace.nodes.MessageNode.gt", "api/opto.trace.nodes.MessageNode.hidden_dependencies", "api/opto.trace.nodes.MessageNode.id", "api/opto.trace.nodes.MessageNode.info", "api/opto.trace.nodes.MessageNode.inputs", "api/opto.trace.nodes.MessageNode.is_leaf", "api/opto.trace.nodes.MessageNode.is_root", "api/opto.trace.nodes.MessageNode.items", "api/opto.trace.nodes.MessageNode.join", "api/opto.trace.nodes.MessageNode.keys", "api/opto.trace.nodes.MessageNode.len", "api/opto.trace.nodes.MessageNode.level", "api/opto.trace.nodes.MessageNode.lower", "api/opto.trace.nodes.MessageNode.lt", "api/opto.trace.nodes.MessageNode.name", "api/opto.trace.nodes.MessageNode.neq", "api/opto.trace.nodes.MessageNode.parameter_dependencies", "api/opto.trace.nodes.MessageNode.parents", "api/opto.trace.nodes.MessageNode.pop", "api/opto.trace.nodes.MessageNode.py_name", "api/opto.trace.nodes.MessageNode.replace", "api/opto.trace.nodes.MessageNode.split", "api/opto.trace.nodes.MessageNode.strip", "api/opto.trace.nodes.MessageNode.swapcase", "api/opto.trace.nodes.MessageNode.title", "api/opto.trace.nodes.MessageNode.type", "api/opto.trace.nodes.MessageNode.upper", "api/opto.trace.nodes.MessageNode.values", "api/opto.trace.nodes.MessageNode.zero_feedback", "api/opto.trace.nodes.Node", "api/opto.trace.nodes.Node.append", "api/opto.trace.nodes.Node.backward", "api/opto.trace.nodes.Node.call", "api/opto.trace.nodes.Node.capitalize", "api/opto.trace.nodes.Node.children", "api/opto.trace.nodes.Node.clone", "api/opto.trace.nodes.Node.data", "api/opto.trace.nodes.Node.description", "api/opto.trace.nodes.Node.detach", "api/opto.trace.nodes.Node.eq", "api/opto.trace.nodes.Node.expandable_dependencies", "api/opto.trace.nodes.Node.feedback", "api/opto.trace.nodes.Node.format", "api/opto.trace.nodes.Node.getattr", "api/opto.trace.nodes.Node.gt", "api/opto.trace.nodes.Node.id", "api/opto.trace.nodes.Node.info", "api/opto.trace.nodes.Node.is_leaf", "api/opto.trace.nodes.Node.is_root", "api/opto.trace.nodes.Node.items", "api/opto.trace.nodes.Node.join", "api/opto.trace.nodes.Node.keys", "api/opto.trace.nodes.Node.len", "api/opto.trace.nodes.Node.level", "api/opto.trace.nodes.Node.lower", "api/opto.trace.nodes.Node.lt", "api/opto.trace.nodes.Node.name", "api/opto.trace.nodes.Node.neq", "api/opto.trace.nodes.Node.parameter_dependencies", "api/opto.trace.nodes.Node.parents", "api/opto.trace.nodes.Node.pop", "api/opto.trace.nodes.Node.py_name", "api/opto.trace.nodes.Node.replace", "api/opto.trace.nodes.Node.split", "api/opto.trace.nodes.Node.strip", "api/opto.trace.nodes.Node.swapcase", "api/opto.trace.nodes.Node.title", "api/opto.trace.nodes.Node.type", "api/opto.trace.nodes.Node.upper", "api/opto.trace.nodes.Node.values", "api/opto.trace.nodes.Node.zero_feedback", "api/opto.trace.nodes.NodeVizStyleGuide", "api/opto.trace.nodes.NodeVizStyleGuide.get_attrs", "api/opto.trace.nodes.NodeVizStyleGuide.get_color", "api/opto.trace.nodes.NodeVizStyleGuide.get_label", "api/opto.trace.nodes.NodeVizStyleGuide.get_node_shape", "api/opto.trace.nodes.NodeVizStyleGuide.get_style", "api/opto.trace.nodes.NodeVizStyleGuideColorful", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_color", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_label", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_style", "api/opto.trace.nodes.ParameterNode", "api/opto.trace.nodes.ParameterNode.append", "api/opto.trace.nodes.ParameterNode.backward", "api/opto.trace.nodes.ParameterNode.call", "api/opto.trace.nodes.ParameterNode.capitalize", "api/opto.trace.nodes.ParameterNode.children", "api/opto.trace.nodes.ParameterNode.clone", "api/opto.trace.nodes.ParameterNode.data", "api/opto.trace.nodes.ParameterNode.description", "api/opto.trace.nodes.ParameterNode.detach", "api/opto.trace.nodes.ParameterNode.eq", "api/opto.trace.nodes.ParameterNode.expandable_dependencies", "api/opto.trace.nodes.ParameterNode.feedback", "api/opto.trace.nodes.ParameterNode.format", "api/opto.trace.nodes.ParameterNode.getattr", "api/opto.trace.nodes.ParameterNode.gt", "api/opto.trace.nodes.ParameterNode.id", "api/opto.trace.nodes.ParameterNode.info", "api/opto.trace.nodes.ParameterNode.is_leaf", "api/opto.trace.nodes.ParameterNode.is_root", "api/opto.trace.nodes.ParameterNode.items", "api/opto.trace.nodes.ParameterNode.join", "api/opto.trace.nodes.ParameterNode.keys", "api/opto.trace.nodes.ParameterNode.len", "api/opto.trace.nodes.ParameterNode.level", "api/opto.trace.nodes.ParameterNode.lower", "api/opto.trace.nodes.ParameterNode.lt", "api/opto.trace.nodes.ParameterNode.name", "api/opto.trace.nodes.ParameterNode.neq", "api/opto.trace.nodes.ParameterNode.parameter_dependencies", "api/opto.trace.nodes.ParameterNode.parents", "api/opto.trace.nodes.ParameterNode.pop", "api/opto.trace.nodes.ParameterNode.py_name", "api/opto.trace.nodes.ParameterNode.replace", "api/opto.trace.nodes.ParameterNode.split", "api/opto.trace.nodes.ParameterNode.strip", "api/opto.trace.nodes.ParameterNode.swapcase", "api/opto.trace.nodes.ParameterNode.title", "api/opto.trace.nodes.ParameterNode.type", "api/opto.trace.nodes.ParameterNode.upper", "api/opto.trace.nodes.ParameterNode.values", "api/opto.trace.nodes.ParameterNode.zero_feedback", "api/opto.trace.nodes.get_op_name", "api/opto.trace.nodes.node-function", "api/opto.trace.operators", "api/opto.trace.operators.identity", "api/opto.trace.propagators", "api/opto.trace.propagators.graph_propagator", "api/opto.trace.propagators.graph_propagator.GraphPropagator", "api/opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", "api/opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", "api/opto.trace.propagators.graph_propagator.GraphPropagator.propagate", "api/opto.trace.propagators.graph_propagator.GraphPropagator.register", "api/opto.trace.propagators.graph_propagator.TraceGraph", "api/opto.trace.propagators.graph_propagator.TraceGraph.empty", "api/opto.trace.propagators.graph_propagator.TraceGraph.expand", "api/opto.trace.propagators.graph_propagator.TraceGraph.graph", "api/opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", "api/opto.trace.propagators.graph_propagator.TraceGraph.visualize", "api/opto.trace.propagators.propagators", "api/opto.trace.propagators.propagators.AbstractFeedback", "api/opto.trace.propagators.propagators.AbstractPropagator", "api/opto.trace.propagators.propagators.AbstractPropagator.propagate", "api/opto.trace.propagators.propagators.Propagator", "api/opto.trace.propagators.propagators.Propagator.init_feedback", "api/opto.trace.propagators.propagators.Propagator.propagate", "api/opto.trace.propagators.propagators.Propagator.register", "api/opto.trace.propagators.propagators.SumPropagator", "api/opto.trace.propagators.propagators.SumPropagator.init_feedback", "api/opto.trace.propagators.propagators.SumPropagator.propagate", "api/opto.trace.propagators.propagators.SumPropagator.register", "api/opto.trace.stop_tracing", "api/opto.trace.utils", "api/opto.trace.utils.contain", "api/opto.trace.utils.escape_json_nested_quotes", "api/opto.trace.utils.for_all_methods", "api/opto.trace.utils.parse_eqs_to_dict", "api/opto.trace.utils.remove_non_ascii", "api/opto.trace.utils.render_opt_step", "api/opto.trace.utils.sum_feedback", "api/opto.trace.utils.test_json_quote_escaper", "api/opto.utils", "api/opto.utils.llm", "api/opto.utils.llm.AbstractModel", "api/opto.utils.llm.AbstractModel.model", "api/opto.utils.llm.AutoGenLLM", "api/opto.utils.llm.AutoGenLLM.create", "api/opto.utils.llm.AutoGenLLM.model", "api/opto.utils.llm.CustomLLM", "api/opto.utils.llm.CustomLLM.create", "api/opto.utils.llm.CustomLLM.model", "api/opto.utils.llm.LLM", "api/opto.utils.llm.LLM.model", "api/opto.utils.llm.LiteLLM", "api/opto.utils.llm.LiteLLM.model", "api/opto.utils.llm.auto_construct_oai_config_list_from_env", "api/opto.version", "examples/game/battleship", "examples/game/negotiation_arena", "examples/nlp/bigbench_hard", "examples/robotics/metaworld", "faq/faq", "intro", "quickstart/installation", "quickstart/quick_start", "quickstart/quick_start_2", "quickstart/virtualhome", "tutorials/basic_tutorial", "tutorials/custom_optimizers", "tutorials/error_handling_tutorial", "tutorials/minibatch", "tutorials/optimization_tutorial"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "api/opto.rst", "api/opto.optimizers.rst", "api/opto.optimizers.buffers.rst", "api/opto.optimizers.buffers.FIFOBuffer.rst", "api/opto.optimizers.buffers.FIFOBuffer.add.rst", "api/opto.optimizers.opro.rst", "api/opto.optimizers.opro.OPRO.rst", "api/opto.optimizers.opro.OPRO.backward.rst", "api/opto.optimizers.opro.OPRO.call_llm.rst", "api/opto.optimizers.opro.OPRO.construct_prompt.rst", "api/opto.optimizers.opro.OPRO.construct_update_dict.rst", "api/opto.optimizers.opro.OPRO.default_objective.rst", "api/opto.optimizers.opro.OPRO.default_prompt_symbols.rst", "api/opto.optimizers.opro.OPRO.default_propagator.rst", "api/opto.optimizers.opro.OPRO.example_problem_template.rst", "api/opto.optimizers.opro.OPRO.example_prompt.rst", "api/opto.optimizers.opro.OPRO.extract_llm_suggestion.rst", "api/opto.optimizers.opro.OPRO.final_prompt.rst", "api/opto.optimizers.opro.OPRO.output_format_prompt.rst", "api/opto.optimizers.opro.OPRO.problem_instance.rst", "api/opto.optimizers.opro.OPRO.propagator.rst", "api/opto.optimizers.opro.OPRO.propose.rst", "api/opto.optimizers.opro.OPRO.replace_symbols.rst", "api/opto.optimizers.opro.OPRO.repr_node_constraint.rst", "api/opto.optimizers.opro.OPRO.repr_node_value.rst", "api/opto.optimizers.opro.OPRO.representation_prompt.rst", "api/opto.optimizers.opro.OPRO.step.rst", "api/opto.optimizers.opro.OPRO.summarize.rst", "api/opto.optimizers.opro.OPRO.trace_graph.rst", "api/opto.optimizers.opro.OPRO.update.rst", "api/opto.optimizers.opro.OPRO.user_prompt_template.rst", "api/opto.optimizers.opro.OPRO.zero_feedback.rst", "api/opto.optimizers.optimizer.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.propagator.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.step.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.zero_feedback.rst", "api/opto.optimizers.optimizer.Optimizer.rst", "api/opto.optimizers.optimizer.Optimizer.backward.rst", "api/opto.optimizers.optimizer.Optimizer.default_propagator.rst", "api/opto.optimizers.optimizer.Optimizer.propagator.rst", "api/opto.optimizers.optimizer.Optimizer.propose.rst", "api/opto.optimizers.optimizer.Optimizer.step.rst", "api/opto.optimizers.optimizer.Optimizer.trace_graph.rst", "api/opto.optimizers.optimizer.Optimizer.update.rst", "api/opto.optimizers.optimizer.Optimizer.zero_feedback.rst", "api/opto.optimizers.optoprime.rst", "api/opto.optimizers.optoprime.FunctionFeedback.rst", "api/opto.optimizers.optoprime.FunctionFeedback.documentation.rst", "api/opto.optimizers.optoprime.FunctionFeedback.graph.rst", "api/opto.optimizers.optoprime.FunctionFeedback.others.rst", "api/opto.optimizers.optoprime.FunctionFeedback.output.rst", "api/opto.optimizers.optoprime.FunctionFeedback.roots.rst", "api/opto.optimizers.optoprime.FunctionFeedback.user_feedback.rst", "api/opto.optimizers.optoprime.OptoPrime.rst", "api/opto.optimizers.optoprime.OptoPrime.backward.rst", "api/opto.optimizers.optoprime.OptoPrime.call_llm.rst", "api/opto.optimizers.optoprime.OptoPrime.construct_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.construct_update_dict.rst", "api/opto.optimizers.optoprime.OptoPrime.default_objective.rst", "api/opto.optimizers.optoprime.OptoPrime.default_prompt_symbols.rst", "api/opto.optimizers.optoprime.OptoPrime.default_propagator.rst", "api/opto.optimizers.optoprime.OptoPrime.example_problem_template.rst", "api/opto.optimizers.optoprime.OptoPrime.example_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion.rst", "api/opto.optimizers.optoprime.OptoPrime.final_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.output_format_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.problem_instance.rst", "api/opto.optimizers.optoprime.OptoPrime.propagator.rst", "api/opto.optimizers.optoprime.OptoPrime.propose.rst", "api/opto.optimizers.optoprime.OptoPrime.replace_symbols.rst", "api/opto.optimizers.optoprime.OptoPrime.repr_node_constraint.rst", "api/opto.optimizers.optoprime.OptoPrime.repr_node_value.rst", "api/opto.optimizers.optoprime.OptoPrime.representation_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.step.rst", "api/opto.optimizers.optoprime.OptoPrime.summarize.rst", "api/opto.optimizers.optoprime.OptoPrime.trace_graph.rst", "api/opto.optimizers.optoprime.OptoPrime.update.rst", "api/opto.optimizers.optoprime.OptoPrime.user_prompt_template.rst", "api/opto.optimizers.optoprime.OptoPrime.zero_feedback.rst", "api/opto.optimizers.optoprime.ProblemInstance.rst", "api/opto.optimizers.optoprime.ProblemInstance.code.rst", "api/opto.optimizers.optoprime.ProblemInstance.constraints.rst", "api/opto.optimizers.optoprime.ProblemInstance.documentation.rst", "api/opto.optimizers.optoprime.ProblemInstance.feedback.rst", "api/opto.optimizers.optoprime.ProblemInstance.inputs.rst", "api/opto.optimizers.optoprime.ProblemInstance.instruction.rst", "api/opto.optimizers.optoprime.ProblemInstance.others.rst", "api/opto.optimizers.optoprime.ProblemInstance.outputs.rst", "api/opto.optimizers.optoprime.ProblemInstance.problem_template.rst", "api/opto.optimizers.optoprime.ProblemInstance.variables.rst", "api/opto.optimizers.optoprime.get_fun_name.rst", "api/opto.optimizers.optoprime.node_to_function_feedback.rst", "api/opto.optimizers.optoprime.repr_function_call.rst", "api/opto.optimizers.optoprimemulti.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.backward.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.call_llm.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_prompt.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_update_dict.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.default_objective.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.default_prompt_symbols.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.default_propagator.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.example_problem_template.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.example_prompt.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.extract_llm_suggestion.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.final_prompt.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.generate_candidates.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.output_format_prompt.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.problem_instance.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.propagator.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.propose.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.replace_symbols.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_constraint.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_value.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.representation_prompt.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.select_candidate.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.step.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.summarize.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.trace_graph.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.update.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.user_prompt_template.rst", "api/opto.optimizers.optoprimemulti.OptoPrimeMulti.zero_feedback.rst", "api/opto.optimizers.textgrad.rst", "api/opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE.rst", "api/opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION.rst", "api/opto.optimizers.textgrad.GradientInfo.rst", "api/opto.optimizers.textgrad.GradientInfo.gradient.rst", "api/opto.optimizers.textgrad.GradientInfo.gradient_context.rst", "api/opto.optimizers.textgrad.TextGrad.rst", "api/opto.optimizers.textgrad.TextGrad.backward.rst", "api/opto.optimizers.textgrad.TextGrad.call_llm.rst", "api/opto.optimizers.textgrad.TextGrad.default_propagator.rst", "api/opto.optimizers.textgrad.TextGrad.propagator.rst", "api/opto.optimizers.textgrad.TextGrad.propose.rst", "api/opto.optimizers.textgrad.TextGrad.step.rst", "api/opto.optimizers.textgrad.TextGrad.trace_graph.rst", "api/opto.optimizers.textgrad.TextGrad.update.rst", "api/opto.optimizers.textgrad.TextGrad.zero_feedback.rst", "api/opto.optimizers.textgrad.construct_reduce_prompt.rst", "api/opto.optimizers.textgrad.construct_tgd_prompt.rst", "api/opto.optimizers.textgrad.get_short_value.rst", "api/opto.optimizers.textgrad.rm_node_attrs.rst", "api/opto.optimizers.utils.rst", "api/opto.optimizers.utils.print_color.rst", "api/opto.trace.rst", "api/opto.trace.broadcast.rst", "api/opto.trace.broadcast.apply_op.rst", "api/opto.trace.broadcast.recursive_conversion.rst", "api/opto.trace.bundle.rst", "api/opto.trace.containers.rst", "api/opto.trace.containers.Map.rst", "api/opto.trace.containers.Map.clear.rst", "api/opto.trace.containers.Map.copy.rst", "api/opto.trace.containers.Map.fromkeys.rst", "api/opto.trace.containers.Map.get.rst", "api/opto.trace.containers.Map.items.rst", "api/opto.trace.containers.Map.keys.rst", "api/opto.trace.containers.Map.parameters.rst", "api/opto.trace.containers.Map.parameters_dict.rst", "api/opto.trace.containers.Map.pop.rst", "api/opto.trace.containers.Map.popitem.rst", "api/opto.trace.containers.Map.setdefault.rst", "api/opto.trace.containers.Map.update.rst", "api/opto.trace.containers.Map.values.rst", "api/opto.trace.containers.NodeContainer.rst", "api/opto.trace.containers.ParameterContainer.rst", "api/opto.trace.containers.ParameterContainer.parameters.rst", "api/opto.trace.containers.ParameterContainer.parameters_dict.rst", "api/opto.trace.containers.Seq.rst", "api/opto.trace.containers.Seq.append.rst", "api/opto.trace.containers.Seq.clear.rst", "api/opto.trace.containers.Seq.copy.rst", "api/opto.trace.containers.Seq.count.rst", "api/opto.trace.containers.Seq.extend.rst", "api/opto.trace.containers.Seq.index.rst", "api/opto.trace.containers.Seq.insert.rst", "api/opto.trace.containers.Seq.parameters.rst", "api/opto.trace.containers.Seq.parameters_dict.rst", "api/opto.trace.containers.Seq.pop.rst", "api/opto.trace.containers.Seq.remove.rst", "api/opto.trace.containers.Seq.reverse.rst", "api/opto.trace.containers.Seq.sort.rst", "api/opto.trace.containers.trainable_method.rst", "api/opto.trace.errors.rst", "api/opto.trace.errors.ExecutionError.rst", "api/opto.trace.errors.TraceMissingInputsError.rst", "api/opto.trace.iterators.rst", "api/opto.trace.iterators.DictIterable.rst", "api/opto.trace.iterators.SeqIterable.rst", "api/opto.trace.iterators.iterate.rst", "api/opto.trace.modules.rst", "api/opto.trace.modules.Module.rst", "api/opto.trace.modules.Module.forward.rst", "api/opto.trace.modules.Module.load.rst", "api/opto.trace.modules.Module.parameters.rst", "api/opto.trace.modules.Module.parameters_dict.rst", "api/opto.trace.modules.Module.save.rst", "api/opto.trace.modules.model.rst", "api/opto.trace.nodes.rst", "api/opto.trace.nodes.AbstractNode.rst", "api/opto.trace.nodes.AbstractNode.children.rst", "api/opto.trace.nodes.AbstractNode.data.rst", "api/opto.trace.nodes.AbstractNode.gt.rst", "api/opto.trace.nodes.AbstractNode.id.rst", "api/opto.trace.nodes.AbstractNode.is_leaf.rst", "api/opto.trace.nodes.AbstractNode.is_root.rst", "api/opto.trace.nodes.AbstractNode.level.rst", "api/opto.trace.nodes.AbstractNode.lt.rst", "api/opto.trace.nodes.AbstractNode.name.rst", "api/opto.trace.nodes.AbstractNode.parents.rst", "api/opto.trace.nodes.AbstractNode.py_name.rst", "api/opto.trace.nodes.ExceptionNode.rst", "api/opto.trace.nodes.ExceptionNode.append.rst", "api/opto.trace.nodes.ExceptionNode.backward.rst", "api/opto.trace.nodes.ExceptionNode.call.rst", "api/opto.trace.nodes.ExceptionNode.capitalize.rst", "api/opto.trace.nodes.ExceptionNode.children.rst", "api/opto.trace.nodes.ExceptionNode.clone.rst", "api/opto.trace.nodes.ExceptionNode.create_feedback.rst", "api/opto.trace.nodes.ExceptionNode.data.rst", "api/opto.trace.nodes.ExceptionNode.description.rst", "api/opto.trace.nodes.ExceptionNode.detach.rst", "api/opto.trace.nodes.ExceptionNode.eq.rst", "api/opto.trace.nodes.ExceptionNode.expandable_dependencies.rst", "api/opto.trace.nodes.ExceptionNode.feedback.rst", "api/opto.trace.nodes.ExceptionNode.format.rst", "api/opto.trace.nodes.ExceptionNode.getattr.rst", "api/opto.trace.nodes.ExceptionNode.gt.rst", "api/opto.trace.nodes.ExceptionNode.hidden_dependencies.rst", "api/opto.trace.nodes.ExceptionNode.id.rst", "api/opto.trace.nodes.ExceptionNode.info.rst", "api/opto.trace.nodes.ExceptionNode.inputs.rst", "api/opto.trace.nodes.ExceptionNode.is_leaf.rst", "api/opto.trace.nodes.ExceptionNode.is_root.rst", "api/opto.trace.nodes.ExceptionNode.items.rst", "api/opto.trace.nodes.ExceptionNode.join.rst", "api/opto.trace.nodes.ExceptionNode.keys.rst", "api/opto.trace.nodes.ExceptionNode.len.rst", "api/opto.trace.nodes.ExceptionNode.level.rst", "api/opto.trace.nodes.ExceptionNode.lower.rst", "api/opto.trace.nodes.ExceptionNode.lt.rst", "api/opto.trace.nodes.ExceptionNode.name.rst", "api/opto.trace.nodes.ExceptionNode.neq.rst", "api/opto.trace.nodes.ExceptionNode.parameter_dependencies.rst", "api/opto.trace.nodes.ExceptionNode.parents.rst", "api/opto.trace.nodes.ExceptionNode.pop.rst", "api/opto.trace.nodes.ExceptionNode.py_name.rst", "api/opto.trace.nodes.ExceptionNode.replace.rst", "api/opto.trace.nodes.ExceptionNode.split.rst", "api/opto.trace.nodes.ExceptionNode.strip.rst", "api/opto.trace.nodes.ExceptionNode.swapcase.rst", "api/opto.trace.nodes.ExceptionNode.title.rst", "api/opto.trace.nodes.ExceptionNode.type.rst", "api/opto.trace.nodes.ExceptionNode.upper.rst", "api/opto.trace.nodes.ExceptionNode.values.rst", "api/opto.trace.nodes.ExceptionNode.zero_feedback.rst", "api/opto.trace.nodes.Graph.rst", "api/opto.trace.nodes.Graph.TRACE.rst", "api/opto.trace.nodes.Graph.clear.rst", "api/opto.trace.nodes.Graph.get.rst", "api/opto.trace.nodes.Graph.register.rst", "api/opto.trace.nodes.Graph.roots.rst", "api/opto.trace.nodes.MessageNode.rst", "api/opto.trace.nodes.MessageNode.append.rst", "api/opto.trace.nodes.MessageNode.backward.rst", "api/opto.trace.nodes.MessageNode.call.rst", "api/opto.trace.nodes.MessageNode.capitalize.rst", "api/opto.trace.nodes.MessageNode.children.rst", "api/opto.trace.nodes.MessageNode.clone.rst", "api/opto.trace.nodes.MessageNode.data.rst", "api/opto.trace.nodes.MessageNode.description.rst", "api/opto.trace.nodes.MessageNode.detach.rst", "api/opto.trace.nodes.MessageNode.eq.rst", "api/opto.trace.nodes.MessageNode.expandable_dependencies.rst", "api/opto.trace.nodes.MessageNode.feedback.rst", "api/opto.trace.nodes.MessageNode.format.rst", "api/opto.trace.nodes.MessageNode.getattr.rst", "api/opto.trace.nodes.MessageNode.gt.rst", "api/opto.trace.nodes.MessageNode.hidden_dependencies.rst", "api/opto.trace.nodes.MessageNode.id.rst", "api/opto.trace.nodes.MessageNode.info.rst", "api/opto.trace.nodes.MessageNode.inputs.rst", "api/opto.trace.nodes.MessageNode.is_leaf.rst", "api/opto.trace.nodes.MessageNode.is_root.rst", "api/opto.trace.nodes.MessageNode.items.rst", "api/opto.trace.nodes.MessageNode.join.rst", "api/opto.trace.nodes.MessageNode.keys.rst", "api/opto.trace.nodes.MessageNode.len.rst", "api/opto.trace.nodes.MessageNode.level.rst", "api/opto.trace.nodes.MessageNode.lower.rst", "api/opto.trace.nodes.MessageNode.lt.rst", "api/opto.trace.nodes.MessageNode.name.rst", "api/opto.trace.nodes.MessageNode.neq.rst", "api/opto.trace.nodes.MessageNode.parameter_dependencies.rst", "api/opto.trace.nodes.MessageNode.parents.rst", "api/opto.trace.nodes.MessageNode.pop.rst", "api/opto.trace.nodes.MessageNode.py_name.rst", "api/opto.trace.nodes.MessageNode.replace.rst", "api/opto.trace.nodes.MessageNode.split.rst", "api/opto.trace.nodes.MessageNode.strip.rst", "api/opto.trace.nodes.MessageNode.swapcase.rst", "api/opto.trace.nodes.MessageNode.title.rst", "api/opto.trace.nodes.MessageNode.type.rst", "api/opto.trace.nodes.MessageNode.upper.rst", "api/opto.trace.nodes.MessageNode.values.rst", "api/opto.trace.nodes.MessageNode.zero_feedback.rst", "api/opto.trace.nodes.Node.rst", "api/opto.trace.nodes.Node.append.rst", "api/opto.trace.nodes.Node.backward.rst", "api/opto.trace.nodes.Node.call.rst", "api/opto.trace.nodes.Node.capitalize.rst", "api/opto.trace.nodes.Node.children.rst", "api/opto.trace.nodes.Node.clone.rst", "api/opto.trace.nodes.Node.data.rst", "api/opto.trace.nodes.Node.description.rst", "api/opto.trace.nodes.Node.detach.rst", "api/opto.trace.nodes.Node.eq.rst", "api/opto.trace.nodes.Node.expandable_dependencies.rst", "api/opto.trace.nodes.Node.feedback.rst", "api/opto.trace.nodes.Node.format.rst", "api/opto.trace.nodes.Node.getattr.rst", "api/opto.trace.nodes.Node.gt.rst", "api/opto.trace.nodes.Node.id.rst", "api/opto.trace.nodes.Node.info.rst", "api/opto.trace.nodes.Node.is_leaf.rst", "api/opto.trace.nodes.Node.is_root.rst", "api/opto.trace.nodes.Node.items.rst", "api/opto.trace.nodes.Node.join.rst", "api/opto.trace.nodes.Node.keys.rst", "api/opto.trace.nodes.Node.len.rst", "api/opto.trace.nodes.Node.level.rst", "api/opto.trace.nodes.Node.lower.rst", "api/opto.trace.nodes.Node.lt.rst", "api/opto.trace.nodes.Node.name.rst", "api/opto.trace.nodes.Node.neq.rst", "api/opto.trace.nodes.Node.parameter_dependencies.rst", "api/opto.trace.nodes.Node.parents.rst", "api/opto.trace.nodes.Node.pop.rst", "api/opto.trace.nodes.Node.py_name.rst", "api/opto.trace.nodes.Node.replace.rst", "api/opto.trace.nodes.Node.split.rst", "api/opto.trace.nodes.Node.strip.rst", "api/opto.trace.nodes.Node.swapcase.rst", "api/opto.trace.nodes.Node.title.rst", "api/opto.trace.nodes.Node.type.rst", "api/opto.trace.nodes.Node.upper.rst", "api/opto.trace.nodes.Node.values.rst", "api/opto.trace.nodes.Node.zero_feedback.rst", "api/opto.trace.nodes.NodeVizStyleGuide.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_attrs.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_color.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_label.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_node_shape.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_style.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_color.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_label.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_style.rst", "api/opto.trace.nodes.ParameterNode.rst", "api/opto.trace.nodes.ParameterNode.append.rst", "api/opto.trace.nodes.ParameterNode.backward.rst", "api/opto.trace.nodes.ParameterNode.call.rst", "api/opto.trace.nodes.ParameterNode.capitalize.rst", "api/opto.trace.nodes.ParameterNode.children.rst", "api/opto.trace.nodes.ParameterNode.clone.rst", "api/opto.trace.nodes.ParameterNode.data.rst", "api/opto.trace.nodes.ParameterNode.description.rst", "api/opto.trace.nodes.ParameterNode.detach.rst", "api/opto.trace.nodes.ParameterNode.eq.rst", "api/opto.trace.nodes.ParameterNode.expandable_dependencies.rst", "api/opto.trace.nodes.ParameterNode.feedback.rst", "api/opto.trace.nodes.ParameterNode.format.rst", "api/opto.trace.nodes.ParameterNode.getattr.rst", "api/opto.trace.nodes.ParameterNode.gt.rst", "api/opto.trace.nodes.ParameterNode.id.rst", "api/opto.trace.nodes.ParameterNode.info.rst", "api/opto.trace.nodes.ParameterNode.is_leaf.rst", "api/opto.trace.nodes.ParameterNode.is_root.rst", "api/opto.trace.nodes.ParameterNode.items.rst", "api/opto.trace.nodes.ParameterNode.join.rst", "api/opto.trace.nodes.ParameterNode.keys.rst", "api/opto.trace.nodes.ParameterNode.len.rst", "api/opto.trace.nodes.ParameterNode.level.rst", "api/opto.trace.nodes.ParameterNode.lower.rst", "api/opto.trace.nodes.ParameterNode.lt.rst", "api/opto.trace.nodes.ParameterNode.name.rst", "api/opto.trace.nodes.ParameterNode.neq.rst", "api/opto.trace.nodes.ParameterNode.parameter_dependencies.rst", "api/opto.trace.nodes.ParameterNode.parents.rst", "api/opto.trace.nodes.ParameterNode.pop.rst", "api/opto.trace.nodes.ParameterNode.py_name.rst", "api/opto.trace.nodes.ParameterNode.replace.rst", "api/opto.trace.nodes.ParameterNode.split.rst", "api/opto.trace.nodes.ParameterNode.strip.rst", "api/opto.trace.nodes.ParameterNode.swapcase.rst", "api/opto.trace.nodes.ParameterNode.title.rst", "api/opto.trace.nodes.ParameterNode.type.rst", "api/opto.trace.nodes.ParameterNode.upper.rst", "api/opto.trace.nodes.ParameterNode.values.rst", "api/opto.trace.nodes.ParameterNode.zero_feedback.rst", "api/opto.trace.nodes.get_op_name.rst", "api/opto.trace.nodes.node-function.rst", "api/opto.trace.operators.rst", "api/opto.trace.operators.identity.rst", "api/opto.trace.propagators.rst", "api/opto.trace.propagators.graph_propagator.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.aggregate.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.propagate.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.register.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.empty.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.expand.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.graph.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.user_feedback.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.visualize.rst", "api/opto.trace.propagators.propagators.rst", "api/opto.trace.propagators.propagators.AbstractFeedback.rst", "api/opto.trace.propagators.propagators.AbstractPropagator.rst", "api/opto.trace.propagators.propagators.AbstractPropagator.propagate.rst", "api/opto.trace.propagators.propagators.Propagator.rst", "api/opto.trace.propagators.propagators.Propagator.init_feedback.rst", "api/opto.trace.propagators.propagators.Propagator.propagate.rst", "api/opto.trace.propagators.propagators.Propagator.register.rst", "api/opto.trace.propagators.propagators.SumPropagator.rst", "api/opto.trace.propagators.propagators.SumPropagator.init_feedback.rst", "api/opto.trace.propagators.propagators.SumPropagator.propagate.rst", "api/opto.trace.propagators.propagators.SumPropagator.register.rst", "api/opto.trace.stop_tracing.rst", "api/opto.trace.utils.rst", "api/opto.trace.utils.contain.rst", "api/opto.trace.utils.escape_json_nested_quotes.rst", "api/opto.trace.utils.for_all_methods.rst", "api/opto.trace.utils.parse_eqs_to_dict.rst", "api/opto.trace.utils.remove_non_ascii.rst", "api/opto.trace.utils.render_opt_step.rst", "api/opto.trace.utils.sum_feedback.rst", "api/opto.trace.utils.test_json_quote_escaper.rst", "api/opto.utils.rst", "api/opto.utils.llm.rst", "api/opto.utils.llm.AbstractModel.rst", "api/opto.utils.llm.AbstractModel.model.rst", "api/opto.utils.llm.AutoGenLLM.rst", "api/opto.utils.llm.AutoGenLLM.create.rst", "api/opto.utils.llm.AutoGenLLM.model.rst", "api/opto.utils.llm.CustomLLM.rst", "api/opto.utils.llm.CustomLLM.create.rst", "api/opto.utils.llm.CustomLLM.model.rst", "api/opto.utils.llm.LLM.rst", "api/opto.utils.llm.LLM.model.rst", "api/opto.utils.llm.LiteLLM.rst", "api/opto.utils.llm.LiteLLM.model.rst", "api/opto.utils.llm.auto_construct_oai_config_list_from_env.rst", "api/opto.version.rst", "examples/game/battleship.ipynb", "examples/game/negotiation_arena.ipynb", "examples/nlp/bigbench_hard.ipynb", "examples/robotics/metaworld.ipynb", "faq/faq.md", "intro.md", "quickstart/installation.md", "quickstart/quick_start.ipynb", "quickstart/quick_start_2.ipynb", "quickstart/virtualhome.md", "tutorials/basic_tutorial.ipynb", "tutorials/custom_optimizers.ipynb", "tutorials/error_handling_tutorial.ipynb", "tutorials/minibatch.ipynb", "tutorials/optimization_tutorial.ipynb"], "indexentries": {"__init__() (abstractfeedback method)": [[423, "opto.trace.propagators.propagators.AbstractFeedback.__init__", false]], "__init__() (abstractmodel method)": [[446, "opto.utils.llm.AbstractModel.__init__", false]], "__init__() (abstractnode method)": [[201, "opto.trace.nodes.AbstractNode.__init__", false]], "__init__() (abstractoptimizer method)": [[34, "opto.optimizers.optimizer.AbstractOptimizer.__init__", false]], "__init__() (abstractpropagator method)": [[424, "opto.trace.propagators.propagators.AbstractPropagator.__init__", false]], "__init__() (autogenllm method)": [[448, "opto.utils.llm.AutoGenLLM.__init__", false]], "__init__() (customllm method)": [[451, "opto.utils.llm.CustomLLM.__init__", false]], "__init__() (dictiterable method)": [[189, "opto.trace.iterators.DictIterable.__init__", false]], "__init__() (exceptionnode method)": [[213, "opto.trace.nodes.ExceptionNode.__init__", false]], "__init__() (executionerror method)": [[186, "opto.trace.errors.ExecutionError.__init__", false]], "__init__() (fifobuffer method)": [[4, "opto.optimizers.buffers.FIFOBuffer.__init__", false]], "__init__() (functionfeedback method)": [[48, "opto.optimizers.optoprime.FunctionFeedback.__init__", false]], "__init__() (gradientinfo method)": [[127, "opto.optimizers.textgrad.GradientInfo.__init__", false]], "__init__() (graph method)": [[258, "opto.trace.nodes.Graph.__init__", false]], "__init__() (graphpropagator method)": [[411, "opto.trace.propagators.graph_propagator.GraphPropagator.__init__", false]], "__init__() (litellm method)": [[456, "opto.utils.llm.LiteLLM.__init__", false]], "__init__() (map method)": [[152, "opto.trace.containers.Map.__init__", false]], "__init__() (messagenode method)": [[264, "opto.trace.nodes.MessageNode.__init__", false]], "__init__() (module method)": [[193, "opto.trace.modules.Module.__init__", false]], "__init__() (node method)": [[308, "opto.trace.nodes.Node.__init__", false]], "__init__() (nodecontainer method)": [[166, "opto.trace.containers.NodeContainer.__init__", false]], "__init__() (nodevizstyleguide method)": [[350, "opto.trace.nodes.NodeVizStyleGuide.__init__", false]], "__init__() (nodevizstyleguidecolorful method)": [[356, "opto.trace.nodes.NodeVizStyleGuideColorful.__init__", false]], "__init__() (opro method)": [[7, "opto.optimizers.opro.OPRO.__init__", false]], "__init__() (optimizer method)": [[38, "opto.optimizers.optimizer.Optimizer.__init__", false]], "__init__() (optoprime method)": [[55, "opto.optimizers.optoprime.OptoPrime.__init__", false]], "__init__() (optoprimemulti method)": [[96, "opto.optimizers.optoprimemulti.OptoPrimeMulti.__init__", false]], "__init__() (parametercontainer method)": [[167, "opto.trace.containers.ParameterContainer.__init__", false]], "__init__() (parameternode method)": [[363, "opto.trace.nodes.ParameterNode.__init__", false]], "__init__() (probleminstance method)": [[81, "opto.optimizers.optoprime.ProblemInstance.__init__", false]], "__init__() (propagator method)": [[426, "opto.trace.propagators.propagators.Propagator.__init__", false]], "__init__() (seq method)": [[170, "opto.trace.containers.Seq.__init__", false]], "__init__() (seqiterable method)": [[190, "opto.trace.iterators.SeqIterable.__init__", false]], "__init__() (stop_tracing method)": [[434, "opto.trace.stop_tracing.__init__", false]], "__init__() (sumpropagator method)": [[430, "opto.trace.propagators.propagators.SumPropagator.__init__", false]], "__init__() (textgrad method)": [[130, "opto.optimizers.textgrad.TextGrad.__init__", false]], "__init__() (tracegraph method)": [[416, "opto.trace.propagators.graph_propagator.TraceGraph.__init__", false]], "__init__() (tracemissinginputserror method)": [[187, "opto.trace.errors.TraceMissingInputsError.__init__", false]], "__new__() (abstractfeedback method)": [[423, "opto.trace.propagators.propagators.AbstractFeedback.__new__", false]], "__new__() (abstractmodel method)": [[446, "opto.utils.llm.AbstractModel.__new__", false]], "__new__() (abstractnode method)": [[201, "opto.trace.nodes.AbstractNode.__new__", false]], "__new__() (abstractoptimizer method)": [[34, "opto.optimizers.optimizer.AbstractOptimizer.__new__", false]], "__new__() (abstractpropagator method)": [[424, "opto.trace.propagators.propagators.AbstractPropagator.__new__", false]], "__new__() (autogenllm method)": [[448, "opto.utils.llm.AutoGenLLM.__new__", false]], "__new__() (customllm method)": [[451, "opto.utils.llm.CustomLLM.__new__", false]], "__new__() (dictiterable method)": [[189, "opto.trace.iterators.DictIterable.__new__", false]], "__new__() (exceptionnode method)": [[213, "opto.trace.nodes.ExceptionNode.__new__", false]], "__new__() (executionerror method)": [[186, "opto.trace.errors.ExecutionError.__new__", false]], "__new__() (fifobuffer method)": [[4, "opto.optimizers.buffers.FIFOBuffer.__new__", false]], "__new__() (functionfeedback method)": [[48, "opto.optimizers.optoprime.FunctionFeedback.__new__", false]], "__new__() (gradientinfo method)": [[127, "opto.optimizers.textgrad.GradientInfo.__new__", false]], "__new__() (graph method)": [[258, "opto.trace.nodes.Graph.__new__", false]], "__new__() (graphpropagator method)": [[411, "opto.trace.propagators.graph_propagator.GraphPropagator.__new__", false]], "__new__() (litellm method)": [[456, "opto.utils.llm.LiteLLM.__new__", false]], "__new__() (map method)": [[152, "opto.trace.containers.Map.__new__", false]], "__new__() (messagenode method)": [[264, "opto.trace.nodes.MessageNode.__new__", false]], "__new__() (module method)": [[193, "opto.trace.modules.Module.__new__", false]], "__new__() (node method)": [[308, "opto.trace.nodes.Node.__new__", false]], "__new__() (nodecontainer method)": [[166, "opto.trace.containers.NodeContainer.__new__", false]], "__new__() (nodevizstyleguide method)": [[350, "opto.trace.nodes.NodeVizStyleGuide.__new__", false]], "__new__() (nodevizstyleguidecolorful method)": [[356, "opto.trace.nodes.NodeVizStyleGuideColorful.__new__", false]], "__new__() (opro method)": [[7, "opto.optimizers.opro.OPRO.__new__", false]], "__new__() (optimizer method)": [[38, "opto.optimizers.optimizer.Optimizer.__new__", false]], "__new__() (optoprime method)": [[55, "opto.optimizers.optoprime.OptoPrime.__new__", false]], "__new__() (optoprimemulti method)": [[96, "opto.optimizers.optoprimemulti.OptoPrimeMulti.__new__", false]], "__new__() (parametercontainer method)": [[167, "opto.trace.containers.ParameterContainer.__new__", false]], "__new__() (parameternode method)": [[363, "opto.trace.nodes.ParameterNode.__new__", false]], "__new__() (probleminstance method)": [[81, "opto.optimizers.optoprime.ProblemInstance.__new__", false]], "__new__() (propagator method)": [[426, "opto.trace.propagators.propagators.Propagator.__new__", false]], "__new__() (seq method)": [[170, "opto.trace.containers.Seq.__new__", false]], "__new__() (seqiterable method)": [[190, "opto.trace.iterators.SeqIterable.__new__", false]], "__new__() (stop_tracing method)": [[434, "opto.trace.stop_tracing.__new__", false]], "__new__() (sumpropagator method)": [[430, "opto.trace.propagators.propagators.SumPropagator.__new__", false]], "__new__() (textgrad method)": [[130, "opto.optimizers.textgrad.TextGrad.__new__", false]], "__new__() (tracegraph method)": [[416, "opto.trace.propagators.graph_propagator.TraceGraph.__new__", false]], "__new__() (tracemissinginputserror method)": [[187, "opto.trace.errors.TraceMissingInputsError.__new__", false]], "_backwarded (node attribute)": [[308, "opto.trace.nodes.Node._backwarded", false]], "_constraint (node attribute)": [[308, "opto.trace.nodes.Node._constraint", false]], "_dependencies (node attribute)": [[308, "opto.trace.nodes.Node._dependencies", false]], "_description (node attribute)": [[308, "opto.trace.nodes.Node._description", false]], "_feedback (node attribute)": [[308, "opto.trace.nodes.Node._feedback", false]], "_info (node attribute)": [[308, "opto.trace.nodes.Node._info", false]], "_nodes (graph attribute)": [[258, "opto.trace.nodes.Graph._nodes", false]], "abstractfeedback (class in opto.trace.propagators.propagators)": [[423, "opto.trace.propagators.propagators.AbstractFeedback", false]], "abstractmodel (class in opto.utils.llm)": [[446, "opto.utils.llm.AbstractModel", false]], "abstractnode (class in opto.trace.nodes)": [[201, "opto.trace.nodes.AbstractNode", false]], "abstractoptimizer (class in opto.optimizers.optimizer)": [[34, "opto.optimizers.optimizer.AbstractOptimizer", false]], "abstractpropagator (class in opto.trace.propagators.propagators)": [[424, "opto.trace.propagators.propagators.AbstractPropagator", false]], "add() (fifobuffer method)": [[5, "opto.optimizers.buffers.FIFOBuffer.add", false]], "aggregate() (graphpropagator method)": [[412, "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", false]], "append() (exceptionnode method)": [[214, "opto.trace.nodes.ExceptionNode.append", false]], "append() (messagenode method)": [[265, "opto.trace.nodes.MessageNode.append", false]], "append() (node method)": [[309, "opto.trace.nodes.Node.append", false]], "append() (parameternode method)": [[364, "opto.trace.nodes.ParameterNode.append", false]], "append() (seq method)": [[171, "opto.trace.containers.Seq.append", false]], "apply_op() (in module opto.trace.broadcast)": [[148, "opto.trace.broadcast.apply_op", false]], "auto_construct_oai_config_list_from_env() (in module opto.utils.llm)": [[458, "opto.utils.llm.auto_construct_oai_config_list_from_env", false]], "autogenllm (class in opto.utils.llm)": [[448, "opto.utils.llm.AutoGenLLM", false]], "backward() (exceptionnode method)": [[215, "opto.trace.nodes.ExceptionNode.backward", false]], "backward() (messagenode method)": [[266, "opto.trace.nodes.MessageNode.backward", false]], "backward() (node method)": [[310, "opto.trace.nodes.Node.backward", false]], "backward() (opro method)": [[8, "opto.optimizers.opro.OPRO.backward", false]], "backward() (optimizer method)": [[39, "opto.optimizers.optimizer.Optimizer.backward", false]], "backward() (optoprime method)": [[56, "opto.optimizers.optoprime.OptoPrime.backward", false]], "backward() (optoprimemulti method)": [[97, "opto.optimizers.optoprimemulti.OptoPrimeMulti.backward", false]], "backward() (parameternode method)": [[365, "opto.trace.nodes.ParameterNode.backward", false]], "backward() (textgrad method)": [[131, "opto.optimizers.textgrad.TextGrad.backward", false]], "call() (exceptionnode method)": [[216, "opto.trace.nodes.ExceptionNode.call", false]], "call() (messagenode method)": [[267, "opto.trace.nodes.MessageNode.call", false]], "call() (node method)": [[311, "opto.trace.nodes.Node.call", false]], "call() (parameternode method)": [[366, "opto.trace.nodes.ParameterNode.call", false]], "call_llm() (opro method)": [[9, "opto.optimizers.opro.OPRO.call_llm", false]], "call_llm() (optoprime method)": [[57, "opto.optimizers.optoprime.OptoPrime.call_llm", false]], "call_llm() (optoprimemulti method)": [[98, "opto.optimizers.optoprimemulti.OptoPrimeMulti.call_llm", false]], "call_llm() (textgrad method)": [[132, "opto.optimizers.textgrad.TextGrad.call_llm", false]], "capitalize() (exceptionnode method)": [[217, "opto.trace.nodes.ExceptionNode.capitalize", false]], "capitalize() (messagenode method)": [[268, "opto.trace.nodes.MessageNode.capitalize", false]], "capitalize() (node method)": [[312, "opto.trace.nodes.Node.capitalize", false]], "capitalize() (parameternode method)": [[367, "opto.trace.nodes.ParameterNode.capitalize", false]], "children (abstractnode property)": [[202, "opto.trace.nodes.AbstractNode.children", false]], "children (exceptionnode property)": [[218, "opto.trace.nodes.ExceptionNode.children", false]], "children (messagenode property)": [[269, "opto.trace.nodes.MessageNode.children", false]], "children (node property)": [[313, "opto.trace.nodes.Node.children", false]], "children (parameternode property)": [[368, "opto.trace.nodes.ParameterNode.children", false]], "clear() (graph method)": [[260, "opto.trace.nodes.Graph.clear", false]], "clear() (map method)": [[153, "opto.trace.containers.Map.clear", false]], "clear() (seq method)": [[172, "opto.trace.containers.Seq.clear", false]], "clone() (exceptionnode method)": [[219, "opto.trace.nodes.ExceptionNode.clone", false]], "clone() (messagenode method)": [[270, "opto.trace.nodes.MessageNode.clone", false]], "clone() (node method)": [[314, "opto.trace.nodes.Node.clone", false]], "clone() (parameternode method)": [[369, "opto.trace.nodes.ParameterNode.clone", false]], "code (probleminstance attribute)": [[82, "opto.optimizers.optoprime.ProblemInstance.code", false]], "constraints (probleminstance attribute)": [[83, "opto.optimizers.optoprime.ProblemInstance.constraints", false]], "construct_prompt() (opro method)": [[10, "opto.optimizers.opro.OPRO.construct_prompt", false]], "construct_prompt() (optoprime method)": [[58, "opto.optimizers.optoprime.OptoPrime.construct_prompt", false]], "construct_prompt() (optoprimemulti method)": [[99, "opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_prompt", false]], "construct_reduce_prompt() (in module opto.optimizers.textgrad)": [[140, "opto.optimizers.textgrad.construct_reduce_prompt", false]], "construct_tgd_prompt() (in module opto.optimizers.textgrad)": [[141, "opto.optimizers.textgrad.construct_tgd_prompt", false]], "construct_update_dict() (opro method)": [[11, "opto.optimizers.opro.OPRO.construct_update_dict", false]], "construct_update_dict() (optoprime method)": [[59, "opto.optimizers.optoprime.OptoPrime.construct_update_dict", false]], "construct_update_dict() (optoprimemulti method)": [[100, "opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_update_dict", false]], "contain() (in module opto.trace.utils)": [[436, "opto.trace.utils.contain", false]], "copy() (map method)": [[154, "opto.trace.containers.Map.copy", false]], "copy() (seq method)": [[173, "opto.trace.containers.Seq.copy", false]], "count() (seq method)": [[174, "opto.trace.containers.Seq.count", false]], "create() (autogenllm method)": [[449, "opto.utils.llm.AutoGenLLM.create", false]], "create() (customllm method)": [[452, "opto.utils.llm.CustomLLM.create", false]], "create_feedback() (exceptionnode method)": [[220, "opto.trace.nodes.ExceptionNode.create_feedback", false]], "customllm (class in opto.utils.llm)": [[451, "opto.utils.llm.CustomLLM", false]], "data (abstractnode property)": [[203, "opto.trace.nodes.AbstractNode.data", false]], "data (exceptionnode property)": [[221, "opto.trace.nodes.ExceptionNode.data", false]], "data (messagenode property)": [[271, "opto.trace.nodes.MessageNode.data", false]], "data (node property)": [[315, "opto.trace.nodes.Node.data", false]], "data (parameternode property)": [[370, "opto.trace.nodes.ParameterNode.data", false]], "default_objective (opro attribute)": [[12, "opto.optimizers.opro.OPRO.default_objective", false]], "default_objective (optoprime attribute)": [[60, "opto.optimizers.optoprime.OptoPrime.default_objective", false]], "default_objective (optoprimemulti attribute)": [[101, "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_objective", false]], "default_prompt_symbols (opro attribute)": [[13, "opto.optimizers.opro.OPRO.default_prompt_symbols", false]], "default_prompt_symbols (optoprime attribute)": [[61, "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", false]], "default_prompt_symbols (optoprimemulti attribute)": [[102, "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_prompt_symbols", false]], "default_propagator() (opro method)": [[14, "opto.optimizers.opro.OPRO.default_propagator", false]], "default_propagator() (optimizer method)": [[40, "opto.optimizers.optimizer.Optimizer.default_propagator", false]], "default_propagator() (optoprime method)": [[62, "opto.optimizers.optoprime.OptoPrime.default_propagator", false]], "default_propagator() (optoprimemulti method)": [[103, "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_propagator", false]], "default_propagator() (textgrad method)": [[133, "opto.optimizers.textgrad.TextGrad.default_propagator", false]], "description (exceptionnode property)": [[222, "opto.trace.nodes.ExceptionNode.description", false]], "description (messagenode property)": [[272, "opto.trace.nodes.MessageNode.description", false]], "description (node property)": [[316, "opto.trace.nodes.Node.description", false]], "description (parameternode property)": [[371, "opto.trace.nodes.ParameterNode.description", false]], "detach() (exceptionnode method)": [[223, "opto.trace.nodes.ExceptionNode.detach", false]], "detach() (messagenode method)": [[273, "opto.trace.nodes.MessageNode.detach", false]], "detach() (node method)": [[317, "opto.trace.nodes.Node.detach", false]], "detach() (parameternode method)": [[372, "opto.trace.nodes.ParameterNode.detach", false]], "dictiterable (class in opto.trace.iterators)": [[189, "opto.trace.iterators.DictIterable", false]], "documentation (functionfeedback attribute)": [[49, "opto.optimizers.optoprime.FunctionFeedback.documentation", false]], "documentation (probleminstance attribute)": [[84, "opto.optimizers.optoprime.ProblemInstance.documentation", false]], "empty() (tracegraph method)": [[417, "opto.trace.propagators.graph_propagator.TraceGraph.empty", false]], "eq() (exceptionnode method)": [[224, "opto.trace.nodes.ExceptionNode.eq", false]], "eq() (messagenode method)": [[274, "opto.trace.nodes.MessageNode.eq", false]], "eq() (node method)": [[318, "opto.trace.nodes.Node.eq", false]], "eq() (parameternode method)": [[373, "opto.trace.nodes.ParameterNode.eq", false]], "escape_json_nested_quotes() (in module opto.trace.utils)": [[437, "opto.trace.utils.escape_json_nested_quotes", false]], "example_problem_template (opro attribute)": [[15, "opto.optimizers.opro.OPRO.example_problem_template", false]], "example_problem_template (optoprime attribute)": [[63, "opto.optimizers.optoprime.OptoPrime.example_problem_template", false]], "example_problem_template (optoprimemulti attribute)": [[104, "opto.optimizers.optoprimemulti.OptoPrimeMulti.example_problem_template", false]], "example_prompt (opro attribute)": [[16, "opto.optimizers.opro.OPRO.example_prompt", false]], "example_prompt (optoprime attribute)": [[64, "opto.optimizers.optoprime.OptoPrime.example_prompt", false]], "example_prompt (optoprimemulti attribute)": [[105, "opto.optimizers.optoprimemulti.OptoPrimeMulti.example_prompt", false]], "exceptionnode (class in opto.trace.nodes)": [[213, "opto.trace.nodes.ExceptionNode", false]], "executionerror": [[186, "opto.trace.errors.ExecutionError", false]], "expand() (tracegraph class method)": [[418, "opto.trace.propagators.graph_propagator.TraceGraph.expand", false]], "expandable_dependencies (exceptionnode property)": [[225, "opto.trace.nodes.ExceptionNode.expandable_dependencies", false]], "expandable_dependencies (messagenode property)": [[275, "opto.trace.nodes.MessageNode.expandable_dependencies", false]], "expandable_dependencies (node property)": [[319, "opto.trace.nodes.Node.expandable_dependencies", false]], "expandable_dependencies (parameternode property)": [[374, "opto.trace.nodes.ParameterNode.expandable_dependencies", false]], "extend() (seq method)": [[175, "opto.trace.containers.Seq.extend", false]], "extract_llm_suggestion() (opro method)": [[17, "opto.optimizers.opro.OPRO.extract_llm_suggestion", false]], "extract_llm_suggestion() (optoprime method)": [[65, "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", false]], "extract_llm_suggestion() (optoprimemulti method)": [[106, "opto.optimizers.optoprimemulti.OptoPrimeMulti.extract_llm_suggestion", false]], "feedback (exceptionnode property)": [[226, "opto.trace.nodes.ExceptionNode.feedback", false]], "feedback (messagenode property)": [[276, "opto.trace.nodes.MessageNode.feedback", false]], "feedback (node property)": [[320, "opto.trace.nodes.Node.feedback", false]], "feedback (parameternode property)": [[375, "opto.trace.nodes.ParameterNode.feedback", false]], "feedback (probleminstance attribute)": [[85, "opto.optimizers.optoprime.ProblemInstance.feedback", false]], "fifobuffer (class in opto.optimizers.buffers)": [[4, "opto.optimizers.buffers.FIFOBuffer", false]], "final_prompt (opro attribute)": [[18, "opto.optimizers.opro.OPRO.final_prompt", false]], "final_prompt (optoprime attribute)": [[66, "opto.optimizers.optoprime.OptoPrime.final_prompt", false]], "final_prompt (optoprimemulti attribute)": [[107, "opto.optimizers.optoprimemulti.OptoPrimeMulti.final_prompt", false]], "for_all_methods() (in module opto.trace.utils)": [[438, "opto.trace.utils.for_all_methods", false]], "format() (exceptionnode method)": [[227, "opto.trace.nodes.ExceptionNode.format", false]], "format() (messagenode method)": [[277, "opto.trace.nodes.MessageNode.format", false]], "format() (node method)": [[321, "opto.trace.nodes.Node.format", false]], "format() (parameternode method)": [[376, "opto.trace.nodes.ParameterNode.format", false]], "forward() (module method)": [[194, "opto.trace.modules.Module.forward", false]], "fromkeys() (map class method)": [[155, "opto.trace.containers.Map.fromkeys", false]], "functionfeedback (class in opto.optimizers.optoprime)": [[48, "opto.optimizers.optoprime.FunctionFeedback", false]], "generate_candidates() (optoprimemulti method)": [[108, "opto.optimizers.optoprimemulti.OptoPrimeMulti.generate_candidates", false]], "get() (graph method)": [[261, "opto.trace.nodes.Graph.get", false]], "get() (map method)": [[156, "opto.trace.containers.Map.get", false]], "get_attrs() (nodevizstyleguide method)": [[351, "opto.trace.nodes.NodeVizStyleGuide.get_attrs", false]], "get_attrs() (nodevizstyleguidecolorful method)": [[357, "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", false]], "get_border_color() (nodevizstyleguidecolorful method)": [[358, "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", false]], "get_color() (nodevizstyleguide method)": [[352, "opto.trace.nodes.NodeVizStyleGuide.get_color", false]], "get_color() (nodevizstyleguidecolorful method)": [[359, "opto.trace.nodes.NodeVizStyleGuideColorful.get_color", false]], "get_fun_name() (in module opto.optimizers.optoprime)": [[92, "opto.optimizers.optoprime.get_fun_name", false]], "get_label() (nodevizstyleguide method)": [[353, "opto.trace.nodes.NodeVizStyleGuide.get_label", false]], "get_label() (nodevizstyleguidecolorful method)": [[360, "opto.trace.nodes.NodeVizStyleGuideColorful.get_label", false]], "get_node_shape() (nodevizstyleguide method)": [[354, "opto.trace.nodes.NodeVizStyleGuide.get_node_shape", false]], "get_node_shape() (nodevizstyleguidecolorful method)": [[361, "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", false]], "get_op_name() (in module opto.trace.nodes)": [[405, "opto.trace.nodes.get_op_name", false]], "get_short_value() (in module opto.optimizers.textgrad)": [[142, "opto.optimizers.textgrad.get_short_value", false]], "get_style() (nodevizstyleguide method)": [[355, "opto.trace.nodes.NodeVizStyleGuide.get_style", false]], "get_style() (nodevizstyleguidecolorful method)": [[362, "opto.trace.nodes.NodeVizStyleGuideColorful.get_style", false]], "getattr() (exceptionnode method)": [[228, "opto.trace.nodes.ExceptionNode.getattr", false]], "getattr() (messagenode method)": [[278, "opto.trace.nodes.MessageNode.getattr", false]], "getattr() (node method)": [[322, "opto.trace.nodes.Node.getattr", false]], "getattr() (parameternode method)": [[377, "opto.trace.nodes.ParameterNode.getattr", false]], "gradient (gradientinfo attribute)": [[128, "opto.optimizers.textgrad.GradientInfo.gradient", false]], "gradient_context (gradientinfo attribute)": [[129, "opto.optimizers.textgrad.GradientInfo.gradient_context", false]], "gradient_multipart_template (in module opto.optimizers.textgrad)": [[125, "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", false]], "gradient_of_results_instruction (in module opto.optimizers.textgrad)": [[126, "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", false]], "gradientinfo (class in opto.optimizers.textgrad)": [[127, "opto.optimizers.textgrad.GradientInfo", false]], "graph (class in opto.trace.nodes)": [[258, "opto.trace.nodes.Graph", false]], "graph (functionfeedback attribute)": [[50, "opto.optimizers.optoprime.FunctionFeedback.graph", false]], "graph (tracegraph attribute)": [[419, "opto.trace.propagators.graph_propagator.TraceGraph.graph", false]], "graphpropagator (class in opto.trace.propagators.graph_propagator)": [[411, "opto.trace.propagators.graph_propagator.GraphPropagator", false]], "gt() (abstractnode method)": [[204, "opto.trace.nodes.AbstractNode.gt", false]], "gt() (exceptionnode method)": [[229, "opto.trace.nodes.ExceptionNode.gt", false]], "gt() (messagenode method)": [[279, "opto.trace.nodes.MessageNode.gt", false]], "gt() (node method)": [[323, "opto.trace.nodes.Node.gt", false]], "gt() (parameternode method)": [[378, "opto.trace.nodes.ParameterNode.gt", false]], "hidden_dependencies (exceptionnode property)": [[230, "opto.trace.nodes.ExceptionNode.hidden_dependencies", false]], "hidden_dependencies (messagenode property)": [[280, "opto.trace.nodes.MessageNode.hidden_dependencies", false]], "id (abstractnode property)": [[205, "opto.trace.nodes.AbstractNode.id", false]], "id (exceptionnode property)": [[231, "opto.trace.nodes.ExceptionNode.id", false]], "id (messagenode property)": [[281, "opto.trace.nodes.MessageNode.id", false]], "id (node property)": [[324, "opto.trace.nodes.Node.id", false]], "id (parameternode property)": [[379, "opto.trace.nodes.ParameterNode.id", false]], "identity() (in module opto.trace.operators)": [[408, "opto.trace.operators.identity", false]], "index() (seq method)": [[176, "opto.trace.containers.Seq.index", false]], "info (exceptionnode property)": [[232, "opto.trace.nodes.ExceptionNode.info", false]], "info (messagenode property)": [[282, "opto.trace.nodes.MessageNode.info", false]], "info (node property)": [[325, "opto.trace.nodes.Node.info", false]], "info (parameternode property)": [[380, "opto.trace.nodes.ParameterNode.info", false]], "init_feedback() (graphpropagator method)": [[413, "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", false]], "init_feedback() (propagator method)": [[427, "opto.trace.propagators.propagators.Propagator.init_feedback", false]], "init_feedback() (sumpropagator method)": [[431, "opto.trace.propagators.propagators.SumPropagator.init_feedback", false]], "inputs (exceptionnode property)": [[233, "opto.trace.nodes.ExceptionNode.inputs", false]], "inputs (messagenode property)": [[283, "opto.trace.nodes.MessageNode.inputs", false]], "inputs (probleminstance attribute)": [[86, "opto.optimizers.optoprime.ProblemInstance.inputs", false]], "insert() (seq method)": [[177, "opto.trace.containers.Seq.insert", false]], "instruction (probleminstance attribute)": [[87, "opto.optimizers.optoprime.ProblemInstance.instruction", false]], "is_leaf (abstractnode property)": [[206, "opto.trace.nodes.AbstractNode.is_leaf", false]], "is_leaf (exceptionnode property)": [[234, "opto.trace.nodes.ExceptionNode.is_leaf", false]], "is_leaf (messagenode property)": [[284, "opto.trace.nodes.MessageNode.is_leaf", false]], "is_leaf (node property)": [[326, "opto.trace.nodes.Node.is_leaf", false]], "is_leaf (parameternode property)": [[381, "opto.trace.nodes.ParameterNode.is_leaf", false]], "is_root (abstractnode property)": [[207, "opto.trace.nodes.AbstractNode.is_root", false]], "is_root (exceptionnode property)": [[235, "opto.trace.nodes.ExceptionNode.is_root", false]], "is_root (messagenode property)": [[285, "opto.trace.nodes.MessageNode.is_root", false]], "is_root (node property)": [[327, "opto.trace.nodes.Node.is_root", false]], "is_root (parameternode property)": [[382, "opto.trace.nodes.ParameterNode.is_root", false]], "items() (exceptionnode method)": [[236, "opto.trace.nodes.ExceptionNode.items", false]], "items() (map method)": [[157, "opto.trace.containers.Map.items", false]], "items() (messagenode method)": [[286, "opto.trace.nodes.MessageNode.items", false]], "items() (node method)": [[328, "opto.trace.nodes.Node.items", false]], "items() (parameternode method)": [[383, "opto.trace.nodes.ParameterNode.items", false]], "iterate() (in module opto.trace.iterators)": [[191, "opto.trace.iterators.iterate", false]], "join() (exceptionnode method)": [[237, "opto.trace.nodes.ExceptionNode.join", false]], "join() (messagenode method)": [[287, "opto.trace.nodes.MessageNode.join", false]], "join() (node method)": [[329, "opto.trace.nodes.Node.join", false]], "join() (parameternode method)": [[384, "opto.trace.nodes.ParameterNode.join", false]], "keys() (exceptionnode method)": [[238, "opto.trace.nodes.ExceptionNode.keys", false]], "keys() (map method)": [[158, "opto.trace.containers.Map.keys", false]], "keys() (messagenode method)": [[288, "opto.trace.nodes.MessageNode.keys", false]], "keys() (node method)": [[330, "opto.trace.nodes.Node.keys", false]], "keys() (parameternode method)": [[385, "opto.trace.nodes.ParameterNode.keys", false]], "len() (exceptionnode method)": [[239, "opto.trace.nodes.ExceptionNode.len", false]], "len() (messagenode method)": [[289, "opto.trace.nodes.MessageNode.len", false]], "len() (node method)": [[331, "opto.trace.nodes.Node.len", false]], "len() (parameternode method)": [[386, "opto.trace.nodes.ParameterNode.len", false]], "level (abstractnode property)": [[208, "opto.trace.nodes.AbstractNode.level", false]], "level (exceptionnode property)": [[240, "opto.trace.nodes.ExceptionNode.level", false]], "level (messagenode property)": [[290, "opto.trace.nodes.MessageNode.level", false]], "level (node property)": [[332, "opto.trace.nodes.Node.level", false]], "level (parameternode property)": [[387, "opto.trace.nodes.ParameterNode.level", false]], "litellm (class in opto.utils.llm)": [[456, "opto.utils.llm.LiteLLM", false]], "llm (in module opto.utils.llm)": [[454, "opto.utils.llm.LLM", false]], "load() (module method)": [[195, "opto.trace.modules.Module.load", false]], "lower() (exceptionnode method)": [[241, "opto.trace.nodes.ExceptionNode.lower", false]], "lower() (messagenode method)": [[291, "opto.trace.nodes.MessageNode.lower", false]], "lower() (node method)": [[333, "opto.trace.nodes.Node.lower", false]], "lower() (parameternode method)": [[388, "opto.trace.nodes.ParameterNode.lower", false]], "lt() (abstractnode method)": [[209, "opto.trace.nodes.AbstractNode.lt", false]], "lt() (exceptionnode method)": [[242, "opto.trace.nodes.ExceptionNode.lt", false]], "lt() (messagenode method)": [[292, "opto.trace.nodes.MessageNode.lt", false]], "lt() (node method)": [[334, "opto.trace.nodes.Node.lt", false]], "lt() (parameternode method)": [[389, "opto.trace.nodes.ParameterNode.lt", false]], "map (class in opto.trace.containers)": [[152, "opto.trace.containers.Map", false]], "messagenode (class in opto.trace.nodes)": [[264, "opto.trace.nodes.MessageNode", false]], "model (abstractmodel property)": [[447, "opto.utils.llm.AbstractModel.model", false]], "model (autogenllm property)": [[450, "opto.utils.llm.AutoGenLLM.model", false]], "model (customllm property)": [[453, "opto.utils.llm.CustomLLM.model", false]], "model (litellm property)": [[457, "opto.utils.llm.LiteLLM.model", false]], "model (llm property)": [[455, "opto.utils.llm.LLM.model", false]], "model() (in module opto.trace.modules)": [[199, "opto.trace.modules.model", false]], "module": [[1, "module-opto", false], [2, "module-opto.optimizers", false], [3, "module-opto.optimizers.buffers", false], [6, "module-opto.optimizers.opro", false], [33, "module-opto.optimizers.optimizer", false], [47, "module-opto.optimizers.optoprime", false], [95, "module-opto.optimizers.optoprimemulti", false], [124, "module-opto.optimizers.textgrad", false], [144, "module-opto.optimizers.utils", false], [146, "module-opto.trace", false], [147, "module-opto.trace.broadcast", false], [150, "module-opto.trace.bundle", false], [151, "module-opto.trace.containers", false], [185, "module-opto.trace.errors", false], [188, "module-opto.trace.iterators", false], [192, "module-opto.trace.modules", false], [200, "module-opto.trace.nodes", false], [407, "module-opto.trace.operators", false], [409, "module-opto.trace.propagators", false], [410, "module-opto.trace.propagators.graph_propagator", false], [422, "module-opto.trace.propagators.propagators", false], [435, "module-opto.trace.utils", false], [444, "module-opto.utils", false], [445, "module-opto.utils.llm", false], [459, "module-opto.version", false]], "module (class in opto.trace.modules)": [[193, "opto.trace.modules.Module", false]], "name (abstractnode property)": [[210, "opto.trace.nodes.AbstractNode.name", false]], "name (exceptionnode property)": [[243, "opto.trace.nodes.ExceptionNode.name", false]], "name (messagenode property)": [[293, "opto.trace.nodes.MessageNode.name", false]], "name (node property)": [[335, "opto.trace.nodes.Node.name", false]], "name (parameternode property)": [[390, "opto.trace.nodes.ParameterNode.name", false]], "neq() (exceptionnode method)": [[244, "opto.trace.nodes.ExceptionNode.neq", false]], "neq() (messagenode method)": [[294, "opto.trace.nodes.MessageNode.neq", false]], "neq() (node method)": [[336, "opto.trace.nodes.Node.neq", false]], "neq() (parameternode method)": [[391, "opto.trace.nodes.ParameterNode.neq", false]], "node (class in opto.trace.nodes)": [[308, "opto.trace.nodes.Node", false]], "node() (in module opto.trace.nodes)": [[406, "opto.trace.nodes.node", false]], "node_to_function_feedback() (in module opto.optimizers.optoprime)": [[93, "opto.optimizers.optoprime.node_to_function_feedback", false]], "nodecontainer (class in opto.trace.containers)": [[166, "opto.trace.containers.NodeContainer", false]], "nodevizstyleguide (class in opto.trace.nodes)": [[350, "opto.trace.nodes.NodeVizStyleGuide", false]], "nodevizstyleguidecolorful (class in opto.trace.nodes)": [[356, "opto.trace.nodes.NodeVizStyleGuideColorful", false]], "opro (class in opto.optimizers.opro)": [[7, "opto.optimizers.opro.OPRO", false]], "optimizer (class in opto.optimizers.optimizer)": [[38, "opto.optimizers.optimizer.Optimizer", false]], "opto": [[1, "module-opto", false]], "opto.optimizers": [[2, "module-opto.optimizers", false]], "opto.optimizers.buffers": [[3, "module-opto.optimizers.buffers", false]], "opto.optimizers.opro": [[6, "module-opto.optimizers.opro", false]], "opto.optimizers.optimizer": [[33, "module-opto.optimizers.optimizer", false]], "opto.optimizers.optoprime": [[47, "module-opto.optimizers.optoprime", false]], "opto.optimizers.optoprimemulti": [[95, "module-opto.optimizers.optoprimemulti", false]], "opto.optimizers.textgrad": [[124, "module-opto.optimizers.textgrad", false]], "opto.optimizers.utils": [[144, "module-opto.optimizers.utils", false]], "opto.trace": [[146, "module-opto.trace", false]], "opto.trace.broadcast": [[147, "module-opto.trace.broadcast", false]], "opto.trace.bundle": [[150, "module-opto.trace.bundle", false]], "opto.trace.containers": [[151, "module-opto.trace.containers", false]], "opto.trace.errors": [[185, "module-opto.trace.errors", false]], "opto.trace.iterators": [[188, "module-opto.trace.iterators", false]], "opto.trace.modules": [[192, "module-opto.trace.modules", false]], "opto.trace.nodes": [[200, "module-opto.trace.nodes", false]], "opto.trace.operators": [[407, "module-opto.trace.operators", false]], "opto.trace.propagators": [[409, "module-opto.trace.propagators", false]], "opto.trace.propagators.graph_propagator": [[410, "module-opto.trace.propagators.graph_propagator", false]], "opto.trace.propagators.propagators": [[422, "module-opto.trace.propagators.propagators", false]], "opto.trace.utils": [[435, "module-opto.trace.utils", false]], "opto.utils": [[444, "module-opto.utils", false]], "opto.utils.llm": [[445, "module-opto.utils.llm", false]], "opto.version": [[459, "module-opto.version", false]], "optoprime (class in opto.optimizers.optoprime)": [[55, "opto.optimizers.optoprime.OptoPrime", false]], "optoprimemulti (class in opto.optimizers.optoprimemulti)": [[96, "opto.optimizers.optoprimemulti.OptoPrimeMulti", false]], "others (functionfeedback attribute)": [[51, "opto.optimizers.optoprime.FunctionFeedback.others", false]], "others (probleminstance attribute)": [[88, "opto.optimizers.optoprime.ProblemInstance.others", false]], "output (functionfeedback attribute)": [[52, "opto.optimizers.optoprime.FunctionFeedback.output", false]], "output_format_prompt (opro attribute)": [[19, "opto.optimizers.opro.OPRO.output_format_prompt", false]], "output_format_prompt (optoprime attribute)": [[67, "opto.optimizers.optoprime.OptoPrime.output_format_prompt", false]], "output_format_prompt (optoprimemulti attribute)": [[109, "opto.optimizers.optoprimemulti.OptoPrimeMulti.output_format_prompt", false]], "outputs (probleminstance attribute)": [[89, "opto.optimizers.optoprime.ProblemInstance.outputs", false]], "parameter_dependencies (exceptionnode property)": [[245, "opto.trace.nodes.ExceptionNode.parameter_dependencies", false]], "parameter_dependencies (messagenode property)": [[295, "opto.trace.nodes.MessageNode.parameter_dependencies", false]], "parameter_dependencies (node property)": [[337, "opto.trace.nodes.Node.parameter_dependencies", false]], "parameter_dependencies (parameternode property)": [[392, "opto.trace.nodes.ParameterNode.parameter_dependencies", false]], "parametercontainer (class in opto.trace.containers)": [[167, "opto.trace.containers.ParameterContainer", false]], "parameternode (class in opto.trace.nodes)": [[363, "opto.trace.nodes.ParameterNode", false]], "parameters() (map method)": [[159, "opto.trace.containers.Map.parameters", false]], "parameters() (module method)": [[196, "opto.trace.modules.Module.parameters", false]], "parameters() (parametercontainer method)": [[168, "opto.trace.containers.ParameterContainer.parameters", false]], "parameters() (seq method)": [[178, "opto.trace.containers.Seq.parameters", false]], "parameters_dict() (map method)": [[160, "opto.trace.containers.Map.parameters_dict", false]], "parameters_dict() (module method)": [[197, "opto.trace.modules.Module.parameters_dict", false]], "parameters_dict() (parametercontainer method)": [[169, "opto.trace.containers.ParameterContainer.parameters_dict", false]], "parameters_dict() (seq method)": [[179, "opto.trace.containers.Seq.parameters_dict", false]], "parents (abstractnode property)": [[211, "opto.trace.nodes.AbstractNode.parents", false]], "parents (exceptionnode property)": [[246, "opto.trace.nodes.ExceptionNode.parents", false]], "parents (messagenode property)": [[296, "opto.trace.nodes.MessageNode.parents", false]], "parents (node property)": [[338, "opto.trace.nodes.Node.parents", false]], "parents (parameternode property)": [[393, "opto.trace.nodes.ParameterNode.parents", false]], "parse_eqs_to_dict() (in module opto.trace.utils)": [[439, "opto.trace.utils.parse_eqs_to_dict", false]], "pop() (exceptionnode method)": [[247, "opto.trace.nodes.ExceptionNode.pop", false]], "pop() (map method)": [[161, "opto.trace.containers.Map.pop", false]], "pop() (messagenode method)": [[297, "opto.trace.nodes.MessageNode.pop", false]], "pop() (node method)": [[339, "opto.trace.nodes.Node.pop", false]], "pop() (parameternode method)": [[394, "opto.trace.nodes.ParameterNode.pop", false]], "pop() (seq method)": [[180, "opto.trace.containers.Seq.pop", false]], "popitem() (map method)": [[162, "opto.trace.containers.Map.popitem", false]], "print_color() (in module opto.optimizers.utils)": [[145, "opto.optimizers.utils.print_color", false]], "print_limit (nodevizstyleguide attribute)": [[350, "opto.trace.nodes.NodeVizStyleGuide.print_limit", false]], "print_limit (nodevizstyleguidecolorful attribute)": [[356, "opto.trace.nodes.NodeVizStyleGuideColorful.print_limit", false]], "problem_instance() (opro method)": [[20, "opto.optimizers.opro.OPRO.problem_instance", false]], "problem_instance() (optoprime method)": [[68, "opto.optimizers.optoprime.OptoPrime.problem_instance", false]], "problem_instance() (optoprimemulti method)": [[110, "opto.optimizers.optoprimemulti.OptoPrimeMulti.problem_instance", false]], "problem_template (probleminstance attribute)": [[90, "opto.optimizers.optoprime.ProblemInstance.problem_template", false]], "probleminstance (class in opto.optimizers.optoprime)": [[81, "opto.optimizers.optoprime.ProblemInstance", false]], "propagate() (abstractpropagator method)": [[425, "opto.trace.propagators.propagators.AbstractPropagator.propagate", false]], "propagate() (graphpropagator method)": [[414, "opto.trace.propagators.graph_propagator.GraphPropagator.propagate", false]], "propagate() (propagator method)": [[428, "opto.trace.propagators.propagators.Propagator.propagate", false]], "propagate() (sumpropagator method)": [[432, "opto.trace.propagators.propagators.SumPropagator.propagate", false]], "propagator (abstractoptimizer property)": [[35, "opto.optimizers.optimizer.AbstractOptimizer.propagator", false]], "propagator (class in opto.trace.propagators.propagators)": [[426, "opto.trace.propagators.propagators.Propagator", false]], "propagator (opro property)": [[21, "opto.optimizers.opro.OPRO.propagator", false]], "propagator (optimizer property)": [[41, "opto.optimizers.optimizer.Optimizer.propagator", false]], "propagator (optoprime property)": [[69, "opto.optimizers.optoprime.OptoPrime.propagator", false]], "propagator (optoprimemulti property)": [[111, "opto.optimizers.optoprimemulti.OptoPrimeMulti.propagator", false]], "propagator (textgrad property)": [[134, "opto.optimizers.textgrad.TextGrad.propagator", false]], "propose() (opro method)": [[22, "opto.optimizers.opro.OPRO.propose", false]], "propose() (optimizer method)": [[42, "opto.optimizers.optimizer.Optimizer.propose", false]], "propose() (optoprime method)": [[70, "opto.optimizers.optoprime.OptoPrime.propose", false]], "propose() (optoprimemulti method)": [[112, "opto.optimizers.optoprimemulti.OptoPrimeMulti.propose", false]], "propose() (textgrad method)": [[135, "opto.optimizers.textgrad.TextGrad.propose", false]], "py_name (abstractnode property)": [[212, "opto.trace.nodes.AbstractNode.py_name", false]], "py_name (exceptionnode property)": [[248, "opto.trace.nodes.ExceptionNode.py_name", false]], "py_name (messagenode property)": [[298, "opto.trace.nodes.MessageNode.py_name", false]], "py_name (node property)": [[340, "opto.trace.nodes.Node.py_name", false]], "py_name (parameternode property)": [[395, "opto.trace.nodes.ParameterNode.py_name", false]], "recursive_conversion() (in module opto.trace.broadcast)": [[149, "opto.trace.broadcast.recursive_conversion", false]], "register() (graph method)": [[262, "opto.trace.nodes.Graph.register", false]], "register() (graphpropagator method)": [[415, "opto.trace.propagators.graph_propagator.GraphPropagator.register", false]], "register() (propagator method)": [[429, "opto.trace.propagators.propagators.Propagator.register", false]], "register() (sumpropagator method)": [[433, "opto.trace.propagators.propagators.SumPropagator.register", false]], "remove() (seq method)": [[181, "opto.trace.containers.Seq.remove", false]], "remove_non_ascii() (in module opto.trace.utils)": [[440, "opto.trace.utils.remove_non_ascii", false]], "render_opt_step() (in module opto.trace.utils)": [[441, "opto.trace.utils.render_opt_step", false]], "replace() (exceptionnode method)": [[249, "opto.trace.nodes.ExceptionNode.replace", false]], "replace() (messagenode method)": [[299, "opto.trace.nodes.MessageNode.replace", false]], "replace() (node method)": [[341, "opto.trace.nodes.Node.replace", false]], "replace() (parameternode method)": [[396, "opto.trace.nodes.ParameterNode.replace", false]], "replace_symbols() (opro method)": [[23, "opto.optimizers.opro.OPRO.replace_symbols", false]], "replace_symbols() (optoprime method)": [[71, "opto.optimizers.optoprime.OptoPrime.replace_symbols", false]], "replace_symbols() (optoprimemulti method)": [[113, "opto.optimizers.optoprimemulti.OptoPrimeMulti.replace_symbols", false]], "repr_function_call() (in module opto.optimizers.optoprime)": [[94, "opto.optimizers.optoprime.repr_function_call", false]], "repr_node_constraint() (opro static method)": [[24, "opto.optimizers.opro.OPRO.repr_node_constraint", false]], "repr_node_constraint() (optoprime static method)": [[72, "opto.optimizers.optoprime.OptoPrime.repr_node_constraint", false]], "repr_node_constraint() (optoprimemulti static method)": [[114, "opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_constraint", false]], "repr_node_value() (opro static method)": [[25, "opto.optimizers.opro.OPRO.repr_node_value", false]], "repr_node_value() (optoprime static method)": [[73, "opto.optimizers.optoprime.OptoPrime.repr_node_value", false]], "repr_node_value() (optoprimemulti static method)": [[115, "opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_value", false]], "representation_prompt (opro attribute)": [[26, "opto.optimizers.opro.OPRO.representation_prompt", false]], "representation_prompt (optoprime attribute)": [[74, "opto.optimizers.optoprime.OptoPrime.representation_prompt", false]], "representation_prompt (optoprimemulti attribute)": [[116, "opto.optimizers.optoprimemulti.OptoPrimeMulti.representation_prompt", false]], "reverse() (seq method)": [[182, "opto.trace.containers.Seq.reverse", false]], "rm_node_attrs() (in module opto.optimizers.textgrad)": [[143, "opto.optimizers.textgrad.rm_node_attrs", false]], "roots (functionfeedback attribute)": [[53, "opto.optimizers.optoprime.FunctionFeedback.roots", false]], "roots (graph property)": [[263, "opto.trace.nodes.Graph.roots", false]], "save() (module method)": [[198, "opto.trace.modules.Module.save", false]], "select_candidate() (optoprimemulti method)": [[117, "opto.optimizers.optoprimemulti.OptoPrimeMulti.select_candidate", false]], "seq (class in opto.trace.containers)": [[170, "opto.trace.containers.Seq", false]], "seqiterable (class in opto.trace.iterators)": [[190, "opto.trace.iterators.SeqIterable", false]], "setdefault() (map method)": [[163, "opto.trace.containers.Map.setdefault", false]], "sort() (seq method)": [[183, "opto.trace.containers.Seq.sort", false]], "split() (exceptionnode method)": [[250, "opto.trace.nodes.ExceptionNode.split", false]], "split() (messagenode method)": [[300, "opto.trace.nodes.MessageNode.split", false]], "split() (node method)": [[342, "opto.trace.nodes.Node.split", false]], "split() (parameternode method)": [[397, "opto.trace.nodes.ParameterNode.split", false]], "step() (abstractoptimizer method)": [[36, "opto.optimizers.optimizer.AbstractOptimizer.step", false]], "step() (opro method)": [[27, "opto.optimizers.opro.OPRO.step", false]], "step() (optimizer method)": [[43, "opto.optimizers.optimizer.Optimizer.step", false]], "step() (optoprime method)": [[75, "opto.optimizers.optoprime.OptoPrime.step", false]], "step() (optoprimemulti method)": [[118, "opto.optimizers.optoprimemulti.OptoPrimeMulti.step", false]], "step() (textgrad method)": [[136, "opto.optimizers.textgrad.TextGrad.step", false]], "stop_tracing (class in opto.trace)": [[434, "opto.trace.stop_tracing", false]], "strip() (exceptionnode method)": [[251, "opto.trace.nodes.ExceptionNode.strip", false]], "strip() (messagenode method)": [[301, "opto.trace.nodes.MessageNode.strip", false]], "strip() (node method)": [[343, "opto.trace.nodes.Node.strip", false]], "strip() (parameternode method)": [[398, "opto.trace.nodes.ParameterNode.strip", false]], "style (nodevizstyleguide attribute)": [[350, "opto.trace.nodes.NodeVizStyleGuide.style", false]], "style (nodevizstyleguidecolorful attribute)": [[356, "opto.trace.nodes.NodeVizStyleGuideColorful.style", false]], "sum_feedback() (in module opto.trace.utils)": [[442, "opto.trace.utils.sum_feedback", false]], "summarize() (opro method)": [[28, "opto.optimizers.opro.OPRO.summarize", false]], "summarize() (optoprime method)": [[76, "opto.optimizers.optoprime.OptoPrime.summarize", false]], "summarize() (optoprimemulti method)": [[119, "opto.optimizers.optoprimemulti.OptoPrimeMulti.summarize", false]], "sumpropagator (class in opto.trace.propagators.propagators)": [[430, "opto.trace.propagators.propagators.SumPropagator", false]], "swapcase() (exceptionnode method)": [[252, "opto.trace.nodes.ExceptionNode.swapcase", false]], "swapcase() (messagenode method)": [[302, "opto.trace.nodes.MessageNode.swapcase", false]], "swapcase() (node method)": [[344, "opto.trace.nodes.Node.swapcase", false]], "swapcase() (parameternode method)": [[399, "opto.trace.nodes.ParameterNode.swapcase", false]], "test_json_quote_escaper() (in module opto.trace.utils)": [[443, "opto.trace.utils.test_json_quote_escaper", false]], "textgrad (class in opto.optimizers.textgrad)": [[130, "opto.optimizers.textgrad.TextGrad", false]], "title() (exceptionnode method)": [[253, "opto.trace.nodes.ExceptionNode.title", false]], "title() (messagenode method)": [[303, "opto.trace.nodes.MessageNode.title", false]], "title() (node method)": [[345, "opto.trace.nodes.Node.title", false]], "title() (parameternode method)": [[400, "opto.trace.nodes.ParameterNode.title", false]], "trace (graph attribute)": [[259, "opto.trace.nodes.Graph.TRACE", false]], "trace_graph (opro property)": [[29, "opto.optimizers.opro.OPRO.trace_graph", false]], "trace_graph (optimizer property)": [[44, "opto.optimizers.optimizer.Optimizer.trace_graph", false]], "trace_graph (optoprime property)": [[77, "opto.optimizers.optoprime.OptoPrime.trace_graph", false]], "trace_graph (optoprimemulti property)": [[120, "opto.optimizers.optoprimemulti.OptoPrimeMulti.trace_graph", false]], "trace_graph (textgrad property)": [[137, "opto.optimizers.textgrad.TextGrad.trace_graph", false]], "tracegraph (class in opto.trace.propagators.graph_propagator)": [[416, "opto.trace.propagators.graph_propagator.TraceGraph", false]], "tracemissinginputserror": [[187, "opto.trace.errors.TraceMissingInputsError", false]], "trainable (node attribute)": [[308, "opto.trace.nodes.Node.trainable", false]], "trainable_method() (in module opto.trace.containers)": [[184, "opto.trace.containers.trainable_method", false]], "type (exceptionnode property)": [[254, "opto.trace.nodes.ExceptionNode.type", false]], "type (messagenode property)": [[304, "opto.trace.nodes.MessageNode.type", false]], "type (node property)": [[346, "opto.trace.nodes.Node.type", false]], "type (parameternode property)": [[401, "opto.trace.nodes.ParameterNode.type", false]], "update() (map method)": [[164, "opto.trace.containers.Map.update", false]], "update() (opro method)": [[30, "opto.optimizers.opro.OPRO.update", false]], "update() (optimizer method)": [[45, "opto.optimizers.optimizer.Optimizer.update", false]], "update() (optoprime method)": [[78, "opto.optimizers.optoprime.OptoPrime.update", false]], "update() (optoprimemulti method)": [[121, "opto.optimizers.optoprimemulti.OptoPrimeMulti.update", false]], "update() (textgrad method)": [[138, "opto.optimizers.textgrad.TextGrad.update", false]], "upper() (exceptionnode method)": [[255, "opto.trace.nodes.ExceptionNode.upper", false]], "upper() (messagenode method)": [[305, "opto.trace.nodes.MessageNode.upper", false]], "upper() (node method)": [[347, "opto.trace.nodes.Node.upper", false]], "upper() (parameternode method)": [[402, "opto.trace.nodes.ParameterNode.upper", false]], "user_feedback (functionfeedback attribute)": [[54, "opto.optimizers.optoprime.FunctionFeedback.user_feedback", false]], "user_feedback (tracegraph attribute)": [[420, "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", false]], "user_prompt_template (opro attribute)": [[31, "opto.optimizers.opro.OPRO.user_prompt_template", false]], "user_prompt_template (optoprime attribute)": [[79, "opto.optimizers.optoprime.OptoPrime.user_prompt_template", false]], "user_prompt_template (optoprimemulti attribute)": [[122, "opto.optimizers.optoprimemulti.OptoPrimeMulti.user_prompt_template", false]], "value (messagenode attribute)": [[264, "opto.trace.nodes.MessageNode.value", false]], "values() (exceptionnode method)": [[256, "opto.trace.nodes.ExceptionNode.values", false]], "values() (map method)": [[165, "opto.trace.containers.Map.values", false]], "values() (messagenode method)": [[306, "opto.trace.nodes.MessageNode.values", false]], "values() (node method)": [[348, "opto.trace.nodes.Node.values", false]], "values() (parameternode method)": [[403, "opto.trace.nodes.ParameterNode.values", false]], "variables (probleminstance attribute)": [[91, "opto.optimizers.optoprime.ProblemInstance.variables", false]], "visualize() (tracegraph method)": [[421, "opto.trace.propagators.graph_propagator.TraceGraph.visualize", false]], "zero_feedback() (abstractoptimizer method)": [[37, "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", false]], "zero_feedback() (exceptionnode method)": [[257, "opto.trace.nodes.ExceptionNode.zero_feedback", false]], "zero_feedback() (messagenode method)": [[307, "opto.trace.nodes.MessageNode.zero_feedback", false]], "zero_feedback() (node method)": [[349, "opto.trace.nodes.Node.zero_feedback", false]], "zero_feedback() (opro method)": [[32, "opto.optimizers.opro.OPRO.zero_feedback", false]], "zero_feedback() (optimizer method)": [[46, "opto.optimizers.optimizer.Optimizer.zero_feedback", false]], "zero_feedback() (optoprime method)": [[80, "opto.optimizers.optoprime.OptoPrime.zero_feedback", false]], "zero_feedback() (optoprimemulti method)": [[123, "opto.optimizers.optoprimemulti.OptoPrimeMulti.zero_feedback", false]], "zero_feedback() (parameternode method)": [[404, "opto.trace.nodes.ParameterNode.zero_feedback", false]], "zero_feedback() (textgrad method)": [[139, "opto.optimizers.textgrad.TextGrad.zero_feedback", false]]}, "objects": {"": [[1, 0, 0, "-", "opto"]], "opto": [[2, 0, 0, "-", "optimizers"], [146, 0, 0, "-", "trace"], [444, 0, 0, "-", "utils"], [459, 0, 0, "-", "version"]], "opto.optimizers": [[3, 0, 0, "-", "buffers"], [6, 0, 0, "-", "opro"], [33, 0, 0, "-", "optimizer"], [47, 0, 0, "-", "optoprime"], [95, 0, 0, "-", "optoprimemulti"], [124, 0, 0, "-", "textgrad"], [144, 0, 0, "-", "utils"]], "opto.optimizers.buffers": [[4, 1, 1, "", "FIFOBuffer"]], "opto.optimizers.buffers.FIFOBuffer": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__new__"], [5, 2, 1, "", "add"]], "opto.optimizers.opro": [[7, 1, 1, "", "OPRO"]], "opto.optimizers.opro.OPRO": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [8, 2, 1, "", "backward"], [9, 2, 1, "", "call_llm"], [10, 2, 1, "", "construct_prompt"], [11, 2, 1, "", "construct_update_dict"], [12, 3, 1, "", "default_objective"], [13, 3, 1, "", "default_prompt_symbols"], [14, 2, 1, "", "default_propagator"], [15, 3, 1, "", "example_problem_template"], [16, 3, 1, "", "example_prompt"], [17, 2, 1, "", "extract_llm_suggestion"], [18, 3, 1, "", "final_prompt"], [19, 3, 1, "", "output_format_prompt"], [20, 2, 1, "", "problem_instance"], [21, 4, 1, "", "propagator"], [22, 2, 1, "", "propose"], [23, 2, 1, "", "replace_symbols"], [24, 2, 1, "", "repr_node_constraint"], [25, 2, 1, "", "repr_node_value"], [26, 3, 1, "", "representation_prompt"], [27, 2, 1, "", "step"], [28, 2, 1, "", "summarize"], [29, 4, 1, "", "trace_graph"], [30, 2, 1, "", "update"], [31, 3, 1, "", "user_prompt_template"], [32, 2, 1, "", "zero_feedback"]], "opto.optimizers.optimizer": [[34, 1, 1, "", "AbstractOptimizer"], [38, 1, 1, "", "Optimizer"]], "opto.optimizers.optimizer.AbstractOptimizer": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "__new__"], [35, 4, 1, "", "propagator"], [36, 2, 1, "", "step"], [37, 2, 1, "", "zero_feedback"]], "opto.optimizers.optimizer.Optimizer": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__new__"], [39, 2, 1, "", "backward"], [40, 2, 1, "", "default_propagator"], [41, 4, 1, "", "propagator"], [42, 2, 1, "", "propose"], [43, 2, 1, "", "step"], [44, 4, 1, "", "trace_graph"], [45, 2, 1, "", "update"], [46, 2, 1, "", "zero_feedback"]], "opto.optimizers.optoprime": [[48, 1, 1, "", "FunctionFeedback"], [55, 1, 1, "", "OptoPrime"], [81, 1, 1, "", "ProblemInstance"], [92, 5, 1, "", "get_fun_name"], [93, 5, 1, "", "node_to_function_feedback"], [94, 5, 1, "", "repr_function_call"]], "opto.optimizers.optoprime.FunctionFeedback": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "__new__"], [49, 3, 1, "", "documentation"], [50, 3, 1, "", "graph"], [51, 3, 1, "", "others"], [52, 3, 1, "", "output"], [53, 3, 1, "", "roots"], [54, 3, 1, "", "user_feedback"]], "opto.optimizers.optoprime.OptoPrime": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "__new__"], [56, 2, 1, "", "backward"], [57, 2, 1, "", "call_llm"], [58, 2, 1, "", "construct_prompt"], [59, 2, 1, "", "construct_update_dict"], [60, 3, 1, "", "default_objective"], [61, 3, 1, "", "default_prompt_symbols"], [62, 2, 1, "", "default_propagator"], [63, 3, 1, "", "example_problem_template"], [64, 3, 1, "", "example_prompt"], [65, 2, 1, "", "extract_llm_suggestion"], [66, 3, 1, "", "final_prompt"], [67, 3, 1, "", "output_format_prompt"], [68, 2, 1, "", "problem_instance"], [69, 4, 1, "", "propagator"], [70, 2, 1, "", "propose"], [71, 2, 1, "", "replace_symbols"], [72, 2, 1, "", "repr_node_constraint"], [73, 2, 1, "", "repr_node_value"], [74, 3, 1, "", "representation_prompt"], [75, 2, 1, "", "step"], [76, 2, 1, "", "summarize"], [77, 4, 1, "", "trace_graph"], [78, 2, 1, "", "update"], [79, 3, 1, "", "user_prompt_template"], [80, 2, 1, "", "zero_feedback"]], "opto.optimizers.optoprime.ProblemInstance": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"], [82, 3, 1, "", "code"], [83, 3, 1, "", "constraints"], [84, 3, 1, "", "documentation"], [85, 3, 1, "", "feedback"], [86, 3, 1, "", "inputs"], [87, 3, 1, "", "instruction"], [88, 3, 1, "", "others"], [89, 3, 1, "", "outputs"], [90, 3, 1, "", "problem_template"], [91, 3, 1, "", "variables"]], "opto.optimizers.optoprimemulti": [[96, 1, 1, "", "OptoPrimeMulti"]], "opto.optimizers.optoprimemulti.OptoPrimeMulti": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "__new__"], [97, 2, 1, "", "backward"], [98, 2, 1, "", "call_llm"], [99, 2, 1, "", "construct_prompt"], [100, 2, 1, "", "construct_update_dict"], [101, 3, 1, "", "default_objective"], [102, 3, 1, "", "default_prompt_symbols"], [103, 2, 1, "", "default_propagator"], [104, 3, 1, "", "example_problem_template"], [105, 3, 1, "", "example_prompt"], [106, 2, 1, "", "extract_llm_suggestion"], [107, 3, 1, "", "final_prompt"], [108, 2, 1, "", "generate_candidates"], [109, 3, 1, "", "output_format_prompt"], [110, 2, 1, "", "problem_instance"], [111, 4, 1, "", "propagator"], [112, 2, 1, "", "propose"], [113, 2, 1, "", "replace_symbols"], [114, 2, 1, "", "repr_node_constraint"], [115, 2, 1, "", "repr_node_value"], [116, 3, 1, "", "representation_prompt"], [117, 2, 1, "", "select_candidate"], [118, 2, 1, "", "step"], [119, 2, 1, "", "summarize"], [120, 4, 1, "", "trace_graph"], [121, 2, 1, "", "update"], [122, 3, 1, "", "user_prompt_template"], [123, 2, 1, "", "zero_feedback"]], "opto.optimizers.textgrad": [[125, 6, 1, "", "GRADIENT_MULTIPART_TEMPLATE"], [126, 6, 1, "", "GRADIENT_OF_RESULTS_INSTRUCTION"], [127, 1, 1, "", "GradientInfo"], [130, 1, 1, "", "TextGrad"], [140, 5, 1, "", "construct_reduce_prompt"], [141, 5, 1, "", "construct_tgd_prompt"], [142, 5, 1, "", "get_short_value"], [143, 5, 1, "", "rm_node_attrs"]], "opto.optimizers.textgrad.GradientInfo": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "__new__"], [128, 3, 1, "", "gradient"], [129, 3, 1, "", "gradient_context"]], "opto.optimizers.textgrad.TextGrad": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "__new__"], [131, 2, 1, "", "backward"], [132, 2, 1, "", "call_llm"], [133, 2, 1, "", "default_propagator"], [134, 4, 1, "", "propagator"], [135, 2, 1, "", "propose"], [136, 2, 1, "", "step"], [137, 4, 1, "", "trace_graph"], [138, 2, 1, "", "update"], [139, 2, 1, "", "zero_feedback"]], "opto.optimizers.utils": [[145, 5, 1, "", "print_color"]], "opto.trace": [[147, 0, 0, "-", "broadcast"], [150, 0, 0, "-", "bundle"], [151, 0, 0, "-", "containers"], [185, 0, 0, "-", "errors"], [188, 0, 0, "-", "iterators"], [192, 0, 0, "-", "modules"], [200, 0, 0, "-", "nodes"], [407, 0, 0, "-", "operators"], [409, 0, 0, "-", "propagators"], [434, 1, 1, "", "stop_tracing"], [435, 0, 0, "-", "utils"]], "opto.trace.broadcast": [[148, 5, 1, "", "apply_op"], [149, 5, 1, "", "recursive_conversion"]], "opto.trace.containers": [[152, 1, 1, "", "Map"], [166, 1, 1, "", "NodeContainer"], [167, 1, 1, "", "ParameterContainer"], [170, 1, 1, "", "Seq"], [184, 5, 1, "", "trainable_method"]], "opto.trace.containers.Map": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "__new__"], [153, 2, 1, "", "clear"], [154, 2, 1, "", "copy"], [155, 2, 1, "", "fromkeys"], [156, 2, 1, "", "get"], [157, 2, 1, "", "items"], [158, 2, 1, "", "keys"], [159, 2, 1, "", "parameters"], [160, 2, 1, "", "parameters_dict"], [161, 2, 1, "", "pop"], [162, 2, 1, "", "popitem"], [163, 2, 1, "", "setdefault"], [164, 2, 1, "", "update"], [165, 2, 1, "", "values"]], "opto.trace.containers.NodeContainer": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "__new__"]], "opto.trace.containers.ParameterContainer": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "__new__"], [168, 2, 1, "", "parameters"], [169, 2, 1, "", "parameters_dict"]], "opto.trace.containers.Seq": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "__new__"], [171, 2, 1, "", "append"], [172, 2, 1, "", "clear"], [173, 2, 1, "", "copy"], [174, 2, 1, "", "count"], [175, 2, 1, "", "extend"], [176, 2, 1, "", "index"], [177, 2, 1, "", "insert"], [178, 2, 1, "", "parameters"], [179, 2, 1, "", "parameters_dict"], [180, 2, 1, "", "pop"], [181, 2, 1, "", "remove"], [182, 2, 1, "", "reverse"], [183, 2, 1, "", "sort"]], "opto.trace.errors": [[186, 7, 1, "", "ExecutionError"], [187, 7, 1, "", "TraceMissingInputsError"]], "opto.trace.errors.ExecutionError": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "__new__"]], "opto.trace.errors.TraceMissingInputsError": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "__new__"]], "opto.trace.iterators": [[189, 1, 1, "", "DictIterable"], [190, 1, 1, "", "SeqIterable"], [191, 5, 1, "", "iterate"]], "opto.trace.iterators.DictIterable": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "__new__"]], "opto.trace.iterators.SeqIterable": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "__new__"]], "opto.trace.modules": [[193, 1, 1, "", "Module"], [199, 5, 1, "", "model"]], "opto.trace.modules.Module": [[193, 2, 1, "", "__init__"], [193, 2, 1, "", "__new__"], [194, 2, 1, "", "forward"], [195, 2, 1, "", "load"], [196, 2, 1, "", "parameters"], [197, 2, 1, "", "parameters_dict"], [198, 2, 1, "", "save"]], "opto.trace.nodes": [[201, 1, 1, "", "AbstractNode"], [213, 1, 1, "", "ExceptionNode"], [258, 1, 1, "", "Graph"], [264, 1, 1, "", "MessageNode"], [308, 1, 1, "", "Node"], [350, 1, 1, "", "NodeVizStyleGuide"], [356, 1, 1, "", "NodeVizStyleGuideColorful"], [363, 1, 1, "", "ParameterNode"], [405, 5, 1, "", "get_op_name"], [406, 5, 1, "", "node"]], "opto.trace.nodes.AbstractNode": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "__new__"], [202, 4, 1, "", "children"], [203, 4, 1, "", "data"], [204, 2, 1, "", "gt"], [205, 4, 1, "", "id"], [206, 4, 1, "", "is_leaf"], [207, 4, 1, "", "is_root"], [208, 4, 1, "", "level"], [209, 2, 1, "", "lt"], [210, 4, 1, "", "name"], [211, 4, 1, "", "parents"], [212, 4, 1, "", "py_name"]], "opto.trace.nodes.ExceptionNode": [[213, 2, 1, "", "__init__"], [213, 2, 1, "", "__new__"], [214, 2, 1, "", "append"], [215, 2, 1, "", "backward"], [216, 2, 1, "", "call"], [217, 2, 1, "", "capitalize"], [218, 4, 1, "", "children"], [219, 2, 1, "", "clone"], [220, 2, 1, "", "create_feedback"], [221, 4, 1, "", "data"], [222, 4, 1, "", "description"], [223, 2, 1, "", "detach"], [224, 2, 1, "", "eq"], [225, 4, 1, "", "expandable_dependencies"], [226, 4, 1, "", "feedback"], [227, 2, 1, "", "format"], [228, 2, 1, "", "getattr"], [229, 2, 1, "", "gt"], [230, 4, 1, "", "hidden_dependencies"], [231, 4, 1, "", "id"], [232, 4, 1, "", "info"], [233, 4, 1, "", "inputs"], [234, 4, 1, "", "is_leaf"], [235, 4, 1, "", "is_root"], [236, 2, 1, "", "items"], [237, 2, 1, "", "join"], [238, 2, 1, "", "keys"], [239, 2, 1, "", "len"], [240, 4, 1, "", "level"], [241, 2, 1, "", "lower"], [242, 2, 1, "", "lt"], [243, 4, 1, "", "name"], [244, 2, 1, "", "neq"], [245, 4, 1, "", "parameter_dependencies"], [246, 4, 1, "", "parents"], [247, 2, 1, "", "pop"], [248, 4, 1, "", "py_name"], [249, 2, 1, "", "replace"], [250, 2, 1, "", "split"], [251, 2, 1, "", "strip"], [252, 2, 1, "", "swapcase"], [253, 2, 1, "", "title"], [254, 4, 1, "", "type"], [255, 2, 1, "", "upper"], [256, 2, 1, "", "values"], [257, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.Graph": [[259, 3, 1, "", "TRACE"], [258, 2, 1, "", "__init__"], [258, 2, 1, "", "__new__"], [258, 3, 1, "", "_nodes"], [260, 2, 1, "", "clear"], [261, 2, 1, "", "get"], [262, 2, 1, "", "register"], [263, 4, 1, "", "roots"]], "opto.trace.nodes.MessageNode": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "__new__"], [265, 2, 1, "", "append"], [266, 2, 1, "", "backward"], [267, 2, 1, "", "call"], [268, 2, 1, "", "capitalize"], [269, 4, 1, "", "children"], [270, 2, 1, "", "clone"], [271, 4, 1, "", "data"], [272, 4, 1, "", "description"], [273, 2, 1, "", "detach"], [274, 2, 1, "", "eq"], [275, 4, 1, "", "expandable_dependencies"], [276, 4, 1, "", "feedback"], [277, 2, 1, "", "format"], [278, 2, 1, "", "getattr"], [279, 2, 1, "", "gt"], [280, 4, 1, "", "hidden_dependencies"], [281, 4, 1, "", "id"], [282, 4, 1, "", "info"], [283, 4, 1, "", "inputs"], [284, 4, 1, "", "is_leaf"], [285, 4, 1, "", "is_root"], [286, 2, 1, "", "items"], [287, 2, 1, "", "join"], [288, 2, 1, "", "keys"], [289, 2, 1, "", "len"], [290, 4, 1, "", "level"], [291, 2, 1, "", "lower"], [292, 2, 1, "", "lt"], [293, 4, 1, "", "name"], [294, 2, 1, "", "neq"], [295, 4, 1, "", "parameter_dependencies"], [296, 4, 1, "", "parents"], [297, 2, 1, "", "pop"], [298, 4, 1, "", "py_name"], [299, 2, 1, "", "replace"], [300, 2, 1, "", "split"], [301, 2, 1, "", "strip"], [302, 2, 1, "", "swapcase"], [303, 2, 1, "", "title"], [304, 4, 1, "", "type"], [305, 2, 1, "", "upper"], [264, 3, 1, "", "value"], [306, 2, 1, "", "values"], [307, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.Node": [[308, 2, 1, "", "__init__"], [308, 2, 1, "", "__new__"], [308, 3, 1, "", "_backwarded"], [308, 3, 1, "", "_constraint"], [308, 3, 1, "", "_dependencies"], [308, 3, 1, "", "_description"], [308, 3, 1, "", "_feedback"], [308, 3, 1, "", "_info"], [309, 2, 1, "", "append"], [310, 2, 1, "", "backward"], [311, 2, 1, "", "call"], [312, 2, 1, "", "capitalize"], [313, 4, 1, "", "children"], [314, 2, 1, "", "clone"], [315, 4, 1, "", "data"], [316, 4, 1, "", "description"], [317, 2, 1, "", "detach"], [318, 2, 1, "", "eq"], [319, 4, 1, "", "expandable_dependencies"], [320, 4, 1, "", "feedback"], [321, 2, 1, "", "format"], [322, 2, 1, "", "getattr"], [323, 2, 1, "", "gt"], [324, 4, 1, "", "id"], [325, 4, 1, "", "info"], [326, 4, 1, "", "is_leaf"], [327, 4, 1, "", "is_root"], [328, 2, 1, "", "items"], [329, 2, 1, "", "join"], [330, 2, 1, "", "keys"], [331, 2, 1, "", "len"], [332, 4, 1, "", "level"], [333, 2, 1, "", "lower"], [334, 2, 1, "", "lt"], [335, 4, 1, "", "name"], [336, 2, 1, "", "neq"], [337, 4, 1, "", "parameter_dependencies"], [338, 4, 1, "", "parents"], [339, 2, 1, "", "pop"], [340, 4, 1, "", "py_name"], [341, 2, 1, "", "replace"], [342, 2, 1, "", "split"], [343, 2, 1, "", "strip"], [344, 2, 1, "", "swapcase"], [345, 2, 1, "", "title"], [308, 3, 1, "", "trainable"], [346, 4, 1, "", "type"], [347, 2, 1, "", "upper"], [348, 2, 1, "", "values"], [349, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.NodeVizStyleGuide": [[350, 2, 1, "", "__init__"], [350, 2, 1, "", "__new__"], [351, 2, 1, "", "get_attrs"], [352, 2, 1, "", "get_color"], [353, 2, 1, "", "get_label"], [354, 2, 1, "", "get_node_shape"], [355, 2, 1, "", "get_style"], [350, 3, 1, "", "print_limit"], [350, 3, 1, "", "style"]], "opto.trace.nodes.NodeVizStyleGuideColorful": [[356, 2, 1, "", "__init__"], [356, 2, 1, "", "__new__"], [357, 2, 1, "", "get_attrs"], [358, 2, 1, "", "get_border_color"], [359, 2, 1, "", "get_color"], [360, 2, 1, "", "get_label"], [361, 2, 1, "", "get_node_shape"], [362, 2, 1, "", "get_style"], [356, 3, 1, "", "print_limit"], [356, 3, 1, "", "style"]], "opto.trace.nodes.ParameterNode": [[363, 2, 1, "", "__init__"], [363, 2, 1, "", "__new__"], [364, 2, 1, "", "append"], [365, 2, 1, "", "backward"], [366, 2, 1, "", "call"], [367, 2, 1, "", "capitalize"], [368, 4, 1, "", "children"], [369, 2, 1, "", "clone"], [370, 4, 1, "", "data"], [371, 4, 1, "", "description"], [372, 2, 1, "", "detach"], [373, 2, 1, "", "eq"], [374, 4, 1, "", "expandable_dependencies"], [375, 4, 1, "", "feedback"], [376, 2, 1, "", "format"], [377, 2, 1, "", "getattr"], [378, 2, 1, "", "gt"], [379, 4, 1, "", "id"], [380, 4, 1, "", "info"], [381, 4, 1, "", "is_leaf"], [382, 4, 1, "", "is_root"], [383, 2, 1, "", "items"], [384, 2, 1, "", "join"], [385, 2, 1, "", "keys"], [386, 2, 1, "", "len"], [387, 4, 1, "", "level"], [388, 2, 1, "", "lower"], [389, 2, 1, "", "lt"], [390, 4, 1, "", "name"], [391, 2, 1, "", "neq"], [392, 4, 1, "", "parameter_dependencies"], [393, 4, 1, "", "parents"], [394, 2, 1, "", "pop"], [395, 4, 1, "", "py_name"], [396, 2, 1, "", "replace"], [397, 2, 1, "", "split"], [398, 2, 1, "", "strip"], [399, 2, 1, "", "swapcase"], [400, 2, 1, "", "title"], [401, 4, 1, "", "type"], [402, 2, 1, "", "upper"], [403, 2, 1, "", "values"], [404, 2, 1, "", "zero_feedback"]], "opto.trace.operators": [[408, 5, 1, "", "identity"]], "opto.trace.propagators": [[410, 0, 0, "-", "graph_propagator"], [422, 0, 0, "-", "propagators"]], "opto.trace.propagators.graph_propagator": [[411, 1, 1, "", "GraphPropagator"], [416, 1, 1, "", "TraceGraph"]], "opto.trace.propagators.graph_propagator.GraphPropagator": [[411, 2, 1, "", "__init__"], [411, 2, 1, "", "__new__"], [412, 2, 1, "", "aggregate"], [413, 2, 1, "", "init_feedback"], [414, 2, 1, "", "propagate"], [415, 2, 1, "", "register"]], "opto.trace.propagators.graph_propagator.TraceGraph": [[416, 2, 1, "", "__init__"], [416, 2, 1, "", "__new__"], [417, 2, 1, "", "empty"], [418, 2, 1, "", "expand"], [419, 3, 1, "", "graph"], [420, 3, 1, "", "user_feedback"], [421, 2, 1, "", "visualize"]], "opto.trace.propagators.propagators": [[423, 1, 1, "", "AbstractFeedback"], [424, 1, 1, "", "AbstractPropagator"], [426, 1, 1, "", "Propagator"], [430, 1, 1, "", "SumPropagator"]], "opto.trace.propagators.propagators.AbstractFeedback": [[423, 2, 1, "", "__init__"], [423, 2, 1, "", "__new__"]], "opto.trace.propagators.propagators.AbstractPropagator": [[424, 2, 1, "", "__init__"], [424, 2, 1, "", "__new__"], [425, 2, 1, "", "propagate"]], "opto.trace.propagators.propagators.Propagator": [[426, 2, 1, "", "__init__"], [426, 2, 1, "", "__new__"], [427, 2, 1, "", "init_feedback"], [428, 2, 1, "", "propagate"], [429, 2, 1, "", "register"]], "opto.trace.propagators.propagators.SumPropagator": [[430, 2, 1, "", "__init__"], [430, 2, 1, "", "__new__"], [431, 2, 1, "", "init_feedback"], [432, 2, 1, "", "propagate"], [433, 2, 1, "", "register"]], "opto.trace.stop_tracing": [[434, 2, 1, "", "__init__"], [434, 2, 1, "", "__new__"]], "opto.trace.utils": [[436, 5, 1, "", "contain"], [437, 5, 1, "", "escape_json_nested_quotes"], [438, 5, 1, "", "for_all_methods"], [439, 5, 1, "", "parse_eqs_to_dict"], [440, 5, 1, "", "remove_non_ascii"], [441, 5, 1, "", "render_opt_step"], [442, 5, 1, "", "sum_feedback"], [443, 5, 1, "", "test_json_quote_escaper"]], "opto.utils": [[445, 0, 0, "-", "llm"]], "opto.utils.llm": [[446, 1, 1, "", "AbstractModel"], [448, 1, 1, "", "AutoGenLLM"], [451, 1, 1, "", "CustomLLM"], [454, 3, 1, "", "LLM"], [456, 1, 1, "", "LiteLLM"], [458, 5, 1, "", "auto_construct_oai_config_list_from_env"]], "opto.utils.llm.AbstractModel": [[446, 2, 1, "", "__init__"], [446, 2, 1, "", "__new__"], [447, 4, 1, "", "model"]], "opto.utils.llm.AutoGenLLM": [[448, 2, 1, "", "__init__"], [448, 2, 1, "", "__new__"], [449, 2, 1, "", "create"], [450, 4, 1, "", "model"]], "opto.utils.llm.CustomLLM": [[451, 2, 1, "", "__init__"], [451, 2, 1, "", "__new__"], [452, 2, 1, "", "create"], [453, 4, 1, "", "model"]], "opto.utils.llm.LLM": [[455, 4, 1, "", "model"]], "opto.utils.llm.LiteLLM": [[456, 2, 1, "", "__init__"], [456, 2, 1, "", "__new__"], [457, 4, 1, "", "model"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data", "7": "py:exception"}, "terms": {"": [26, 74, 116, 152, 157, 158, 159, 165, 168, 170, 171, 172, 175, 177, 178, 181, 182, 196, 201, 204, 205, 209, 210, 215, 229, 231, 242, 243, 266, 279, 281, 292, 293, 310, 323, 324, 334, 335, 351, 353, 357, 360, 365, 378, 379, 389, 390, 448, 449, 451, 460, 461, 462, 463, 464, 465, 468, 470, 471, 472, 473, 474], "0": [55, 98, 201, 208, 240, 262, 290, 332, 387, 447, 450, 453, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "00": [462, 474], "005": 474, "0050": 474, "01": [449, 474], "0100": 474, "0125": [461, 463], "01701570386908862": 460, "02": 449, "037500000000001": 473, "04": 463, "04321208107251127": 460, "04434824362397194": 471, "046178679913282394": 471, "05": [463, 474], "0500": 474, "06": 464, "06207482910694713": 463, "06279093772172928": 471, "0648590698838234": 471, "065": 474, "0650": 474, "07": [463, 474], "0700": 474, "072": 474, "0720": 474, "075": 474, "0750": 474, "08542013551374739": 463, "09292582122656425": 463, "0m": 463, "0x7f4bd428a410": 462, "0x7f6d1d53d810": 460, "0x7f991e677d00": 470, "0x7f99340f9cc0": 470, "0x7f99340fa770": 470, "0x7f99341e7760": 470, "1": [67, 98, 109, 247, 249, 250, 264, 297, 299, 300, 339, 341, 342, 394, 396, 397, 437, 439, 460, 461, 462, 463, 467, 468, 469, 470, 472, 473, 474], "10": [142, 461, 462, 463, 464, 468, 469, 471, 472, 473, 474], "100": [215, 266, 310, 350, 356, 365, 421, 462, 463, 474], "1000": 474, "10000": 474, "101": 472, "1024": 462, "105": 469, "1060161998875906": 463, "10650121803495348": 463, "109": 469, "11": [461, 463, 469, 470, 472, 473], "12": [461, 463, 472, 473, 474], "120": 473, "1200000047683716": 471, "122": 473, "13": [461, 463, 473], "131": 463, "14": [463, 473], "143": 461, "15": [461, 463, 468, 470, 473], "150000000000002": 473, "15523541800098087": 460, "159": 463, "16": 463, "17": [462, 463, 469, 473, 474], "172": 469, "18": [463, 473], "19": 463, "19735687971115112": 471, "2": [67, 109, 162, 437, 439, 460, 461, 462, 463, 464, 467, 468, 469, 470, 472, 473, 474], "20": [461, 463, 468, 473, 474], "200": 461, "20000": 474, "2022": 473, "2024": [449, 464, 469, 473], "21": [462, 463], "210": 469, "2100000000000002": 472, "2122009999999999": 472, "216": 469, "22": [461, 463], "23": [460, 463, 473], "2321000000000002": 472, "24": [460, 463, 473, 474], "240": 463, "25": [460, 463, 467], "250": [461, 462], "2544000000000002": 472, "26": [463, 473], "267": 469, "268": 469, "27": [463, 473, 474], "28": [461, 463, 474], "29": 463, "2f": 474, "3": [67, 109, 458, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "30": [463, 464, 473, 474], "311": 463, "3125": 473, "32": [463, 473], "33": 461, "3333333333333333": 470, "33mwarn": 463, "35": 461, "36": 463, "36093443632125854": 471, "37": [463, 473], "38": 463, "3x": 464, "4": [458, 460, 461, 462, 463, 467, 468, 470, 471, 472, 473, 474], "40": 458, "40783": 462, "4096": [9, 55, 57, 98, 130], "42": [461, 463], "427": 473, "44": 472, "449999999999999": 473, "45833333": 460, "47826087": 460, "4788647342995169": 460, "4888888888888889": 460, "4f": 474, "5": [96, 458, 460, 461, 462, 463, 468, 470, 471, 472, 473, 474], "50": [469, 474], "51": 474, "52": 473, "54": 461, "55": 460, "56": 474, "5628820061683655": 471, "57894737": 460, "6": [462, 463, 468, 470, 471, 472, 473, 474], "60": 468, "62": 474, "6344540280467054": 460, "64": 474, "66": 473, "68": 463, "7": [461, 463, 468, 469, 470, 471, 472, 473, 474], "712": 469, "72": 474, "73": [461, 474], "75": 469, "76": 474, "77": 469, "79": 469, "8": [462, 463, 468, 469, 470, 471, 472, 473, 474], "80": [469, 473], "81": 474, "8122000098228455": 471, "8125": 473, "83": 474, "84": 474, "84615385": 460, "85": [473, 474], "86": 474, "866826140399557": 463, "87": 474, "88": [461, 463, 474], "9": [463, 471, 472, 473, 474], "92": 474, "94": 474, "95": 474, "97": 474, "A": [148, 167, 213, 215, 219, 222, 223, 224, 228, 239, 244, 261, 263, 264, 266, 270, 272, 273, 274, 278, 289, 294, 308, 310, 314, 316, 317, 318, 322, 331, 336, 350, 356, 363, 365, 369, 371, 372, 373, 377, 386, 391, 405, 406, 411, 434, 437, 446, 448, 449, 451, 456, 461, 462, 463, 465, 467, 469, 470, 473, 474], "As": [462, 463, 468, 469], "Be": 469, "But": [463, 467], "By": [462, 468, 471, 474], "For": [126, 215, 266, 310, 365, 448, 456, 465, 467, 468, 469, 470, 473], "IN": 182, "If": [161, 164, 201, 203, 215, 221, 224, 244, 262, 266, 271, 274, 294, 310, 315, 318, 336, 353, 360, 365, 370, 373, 391, 405, 406, 446, 448, 449, 451, 456, 458, 460, 461, 462, 463, 467, 468, 469, 470, 472, 473, 474], "In": [164, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "It": [210, 243, 257, 258, 293, 307, 308, 335, 349, 390, 404, 423, 448, 449, 460, 462, 463, 464, 465, 467, 468, 470, 474], "Its": 470, "No": [449, 461, 462, 463, 470], "Not": 472, "Of": 468, "One": 474, "Such": 451, "THESE": 461, "The": [26, 74, 108, 116, 117, 125, 141, 142, 160, 169, 179, 197, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 218, 221, 224, 225, 226, 228, 229, 231, 240, 242, 243, 244, 245, 246, 248, 254, 258, 260, 261, 262, 264, 266, 267, 269, 271, 274, 275, 276, 278, 279, 281, 290, 292, 293, 294, 295, 296, 298, 304, 308, 310, 311, 313, 315, 318, 319, 320, 322, 323, 324, 332, 334, 335, 336, 337, 338, 340, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 370, 373, 374, 375, 377, 378, 379, 387, 389, 390, 391, 392, 393, 395, 401, 405, 406, 446, 448, 449, 451, 456, 460, 461, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474], "Then": [463, 467, 468], "These": [141, 465], "To": [353, 360, 456, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474], "With": 469, "_": [460, 468, 469, 471, 472], "__add__": 470, "__bool__": 470, "__call__": [460, 465, 468, 469], "__code": [460, 462, 467, 468, 473, 474], "__code0": [460, 462, 463, 467, 468], "__code1": [460, 462, 468, 473], "__deepcopy__": 201, "__init__": [4, 7, 34, 38, 48, 55, 81, 96, 127, 130, 152, 166, 167, 170, 186, 187, 189, 190, 193, 201, 213, 258, 264, 308, 350, 356, 363, 411, 416, 423, 424, 426, 430, 434, 446, 448, 451, 456, 460, 462, 463, 465, 469, 470, 471], "__main__": [460, 470], "__new__": [4, 7, 34, 38, 48, 55, 81, 96, 127, 130, 152, 166, 167, 170, 186, 187, 189, 190, 193, 201, 213, 258, 264, 308, 350, 356, 363, 411, 416, 423, 424, 426, 430, 434, 446, 448, 451, 456], "__str__": 201, "_add_child": 201, "_add_par": 201, "_backward": 308, "_constraint": 308, "_data": [201, 203, 221, 271, 315, 370], "_depend": [225, 245, 275, 295, 308, 319, 337, 374, 392], "_descript": 308, "_factori": 448, "_feedback": 308, "_info": 308, "_level": [204, 209, 229, 242, 279, 292, 323, 334, 378, 389], "_name": [201, 262], "_node": [210, 243, 258, 260, 261, 262, 293, 335, 390], "_node__index": [247, 297, 339, 394], "_propag": 471, "_step": 471, "a1": [467, 468], "a10": 468, "a2": 468, "a3": 468, "a4": 468, "a5": 468, "a6": 468, "a7": 468, "a8": 468, "a9": 468, "ab": [463, 471], "abc_test1": 439, "abcdefgh": 468, "abil": [466, 474], "about": [26, 67, 74, 109, 116, 213, 232, 264, 282, 308, 325, 363, 380, 460, 462, 463, 464, 468, 469, 472, 473, 474], "abov": [125, 467, 469, 471, 474], "absolut": 463, "abstract": [201, 446, 470], "abstractmodel": [55, 130], "abstractnod": 308, "accept": [461, 472], "accept_trad": 461, "access": [201, 202, 218, 269, 313, 368, 460, 462, 463, 468, 469, 470, 474], "accomplish": [463, 469], "accomplishinh": 463, "accord": [12, 60, 101, 460, 462, 463, 468, 469, 470, 471, 472, 473, 474], "accordingli": 474, "account": 463, "accumul": [126, 471], "accur": [462, 463, 468], "accuraci": [462, 474], "achiev": [463, 467, 468, 469, 474], "across": [463, 469, 470], "act": [460, 468, 469], "action": [460, 461, 462, 463, 469], "action_spac": 463, "activ": [463, 468], "actual": [449, 463, 464, 467, 468, 469, 474], "acycl": [258, 470], "ad": 470, "adapt": [463, 465], "add": [201, 203, 221, 262, 264, 271, 315, 370, 463, 469, 470, 474], "add0": 474, "addit": [141, 213, 232, 264, 282, 308, 325, 363, 380, 423, 449, 462, 463, 468, 470], "addition": [463, 469], "address": [462, 472], "adequ": 463, "adjac": [460, 468], "adjust": [460, 462, 463, 468, 474], "adopt": 465, "advanc": 460, "advantag": [460, 468], "advic": 463, "affect": 260, "after": [205, 215, 231, 257, 260, 262, 266, 281, 307, 310, 324, 349, 365, 379, 404, 446, 448, 451, 456, 462, 463, 465, 468, 469, 471, 474], "again": [468, 474], "against": [204, 209, 229, 242, 279, 292, 323, 334, 378, 389, 467], "agent": [449, 465], "agent1": 469, "agent2": 469, "agent_1": 469, "agent_2": 469, "agent_goal_desc": 469, "agent_goal_spec": 469, "agent_info": 469, "agent_ob": 469, "agent_obs_desc": 469, "agentchat": 473, "aggreg": [29, 44, 77, 120, 137, 308, 442, 471], "aggress": 468, "agre": 467, "ai": [456, 465], "aim": [462, 463, 468], "al": 469, "algorithm": [26, 74, 116, 460, 462, 463, 464, 468, 471, 472, 473, 474], "alia": 454, "alic": 461, "align": [462, 463, 468], "all": [29, 44, 77, 120, 137, 153, 159, 160, 168, 169, 172, 178, 179, 196, 197, 258, 260, 263, 308, 411, 438, 449, 461, 463, 467, 468, 469, 470, 473], "allow": [201, 202, 218, 262, 269, 313, 368, 449, 464, 465, 467, 468, 470], "allow_external_depend": [462, 470], "allow_format_str_templ": 449, "along": 463, "alongsid": 463, "alpha": 465, "alreadi": [215, 266, 310, 365, 406, 463, 467, 468, 469, 473], "also": [163, 201, 462, 463, 464, 467, 469, 470], "alter": [462, 468], "altern": [461, 467, 473], "although": 469, "alwai": [362, 447, 450, 453, 463, 470, 474], "amend": 468, "an": [15, 34, 63, 67, 104, 109, 117, 148, 165, 166, 170, 191, 201, 203, 211, 213, 215, 221, 224, 225, 244, 246, 258, 260, 264, 266, 271, 274, 275, 294, 296, 308, 310, 315, 318, 319, 336, 338, 353, 355, 360, 363, 365, 370, 373, 374, 391, 393, 405, 449, 456, 458, 460, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474], "analog": 308, "analysi": [460, 468], "analysis_result": 460, "analyz": [460, 462, 463, 468, 474], "ani": [11, 30, 45, 48, 51, 52, 53, 59, 78, 100, 121, 138, 148, 191, 203, 215, 221, 260, 262, 266, 271, 308, 310, 315, 365, 370, 406, 408, 413, 414, 416, 420, 425, 427, 428, 431, 432, 449, 452, 460, 462, 463, 465, 466, 467, 468, 469, 470, 474], "annot": 473, "anoth": [204, 209, 224, 229, 242, 244, 274, 279, 292, 294, 318, 323, 334, 336, 373, 378, 389, 391, 460, 461, 467, 468, 469, 471], "answer": [19, 26, 67, 74, 109, 116, 460, 462, 463, 467, 472, 473, 474], "anyio": 473, "anyth": 462, "apart": 463, "api": [446, 449, 451, 458, 460, 462, 463, 464, 465, 466, 467, 468, 471], "api_kei": [458, 460, 461, 462, 463, 467, 468], "api_key_input": [460, 462, 463, 467, 468], "api_vers": 449, "apierror": 449, "appear": [460, 462, 463, 468], "append": [175, 201, 353, 360, 460, 461, 462, 463, 467, 473, 474], "appl": 469, "appli": [148, 149, 438, 463, 468, 470, 474], "applic": [465, 468], "apply_op": 470, "approach": [462, 463, 465, 468, 469, 472], "appropri": [463, 468], "ar": [16, 19, 26, 31, 64, 67, 74, 93, 105, 109, 116, 149, 225, 230, 258, 262, 275, 280, 319, 351, 352, 354, 357, 358, 359, 361, 374, 414, 425, 428, 432, 437, 449, 451, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474], "area": [463, 468, 469], "arena": 469, "arg": [7, 8, 10, 22, 27, 34, 38, 39, 42, 43, 55, 56, 58, 70, 75, 96, 97, 99, 112, 118, 130, 131, 135, 136, 148, 170, 183, 194, 214, 216, 227, 264, 265, 267, 277, 309, 311, 321, 364, 366, 376, 460, 462, 463, 467, 470, 471, 473], "arg1": 470, "arg2": 470, "args_0": 473, "args_1": 473, "args_2": 473, "args_3": 473, "argument": [141, 176, 216, 267, 311, 366, 446, 448, 449, 451, 456, 460, 462, 467, 473], "aris": [460, 462, 468], "arithmet": 470, "arm": 463, "around": [437, 448, 460, 464, 468, 469, 470], "arrai": [460, 463], "as_fram": 474, "ascend": [467, 473], "ask": [67, 109, 460, 462, 463, 467, 468, 469, 472, 473, 474], "aspect": [460, 464], "assert": [463, 470], "assertionerror": 470, "assess": 462, "assign": [201, 213, 264, 308, 351, 352, 357, 358, 359, 363, 462], "assist": [462, 465, 469], "associ": 463, "assum": [203, 210, 221, 243, 258, 261, 262, 271, 293, 315, 335, 370, 390], "aswaminathan": [462, 473], "attach": [460, 462, 463, 467, 468], "attack": 468, "attempt": [460, 462, 463, 467, 468], "attr": 470, "attribut": [7, 34, 38, 48, 55, 81, 96, 124, 127, 130, 143, 201, 203, 205, 213, 221, 225, 228, 231, 245, 258, 260, 261, 262, 263, 264, 271, 275, 278, 281, 295, 308, 315, 319, 322, 324, 337, 351, 357, 363, 370, 374, 377, 379, 392, 416, 446, 448, 451, 456, 469, 470, 472, 474], "attributeerror": [203, 215, 221, 266, 271, 310, 315, 365, 370, 470], "auto": 462, "autogen": [448, 460, 461, 462, 463, 466, 467, 468, 473, 474], "autograd": [125, 465, 471], "automat": [460, 464, 465, 467, 468, 470], "autonotebook": 462, "avail": [447, 449, 450, 453, 460, 468, 469], "available_act": 469, "avoid": [205, 225, 231, 245, 257, 275, 281, 295, 307, 319, 324, 337, 349, 353, 360, 374, 379, 392, 404, 473], "awai": 461, "awar": 469, "award": 468, "azur": 456, "azure_token_provider_scop": 456, "b": [264, 460, 462, 463, 467, 468, 469, 470], "back": [308, 467, 468], "backend": 456, "background": 463, "backpropag": 471, "backpropagationgradientdesc": 471, "backslash": 468, "backward": [21, 35, 41, 69, 111, 134, 308, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "ball": 462, "bar": 474, "bar0": 474, "bard": 467, "barter": 461, "base": [22, 27, 34, 36, 38, 42, 43, 70, 75, 112, 117, 118, 135, 136, 186, 201, 215, 266, 310, 351, 352, 354, 357, 358, 359, 361, 365, 460, 461, 462, 463, 465, 467, 468, 469, 474], "baselin": 469, "basemodul": 470, "baseutil": 469, "basic": [308, 468, 469, 472], "batch_loss": 473, "batched_feedback": 473, "batched_output": 473, "bathroom": 469, "battl": 468, "battleshipboard": 468, "beat": 462, "becasu": 474, "becaus": [460, 462, 463, 467, 468, 469, 474], "becom": [260, 467, 468], "bedroom": 469, "been": [215, 257, 260, 262, 266, 307, 308, 310, 349, 365, 404, 460, 462, 463, 467, 468, 469], "befor": [177, 225, 245, 261, 275, 295, 319, 337, 374, 392, 462, 467, 469, 474], "begin": [142, 264, 405], "behav": [467, 471], "behavior": [467, 468, 470, 471], "behind": 462, "being": [201, 460, 463, 467, 468, 472, 474], "below": [465, 467, 469, 471, 472, 474], "bench": 463, "benchmark": 462, "benefici": [461, 468], "besid": 449, "best": [117, 469, 474], "best_opt": 460, "best_scor": 460, "bestregular": 474, "bestscor": 474, "bett": 462, "better": [16, 64, 105, 460, 461, 462, 463, 467, 468, 474], "between": [260, 461, 463, 464, 467, 470, 473], "beyond": 460, "bias": 469, "bigbenchhard": 462, "birdsey": 469, "black": 358, "blackbox": [468, 474], "blob": 125, "block": [460, 462, 463, 467, 468, 473], "blow": 467, "board": [460, 468], "board_siz": 460, "bob": 461, "bodi": [467, 468], "book": 469, "bool": [9, 55, 57, 98, 108, 132, 141, 201, 204, 206, 207, 209, 229, 234, 235, 242, 279, 284, 285, 292, 308, 323, 326, 327, 334, 378, 381, 382, 389, 406, 467, 470, 473], "boolean": [213, 224, 244, 264, 274, 294, 308, 318, 336, 363, 373, 391, 449, 467, 470], "border": [357, 358], "both": [160, 169, 179, 197, 460, 461, 462, 463, 464, 467, 468, 469], "bound": 470, "box": [354, 361, 463], "bp": 471, "brace": 468, "bracket": [143, 405, 468], "break": [460, 461, 463, 467, 468, 469, 472], "brief": 468, "brown": 465, "build": [462, 465, 467, 468], "built": 474, "bundl": [460, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474], "button": [460, 462, 463, 467, 468], "buy_resourc": 461, "buzzer": 462, "bypass": 469, "c": [460, 461, 469, 474], "cabinet": 469, "cach": [449, 451, 456], "cache_se": 449, "calcul": [460, 461, 463, 468], "call": [9, 57, 98, 132, 201, 225, 245, 260, 261, 262, 275, 295, 308, 319, 337, 351, 357, 374, 392, 447, 449, 450, 453, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474], "call_llm": [462, 465, 469], "call_llm0": 462, "call_llm1": 462, "call_llm2": 462, "call_llm3": 462, "callabl": [96, 148, 149, 446, 448, 451, 456], "callback": [460, 462, 463, 467, 468], "came": [467, 469], "can": [21, 26, 35, 41, 67, 69, 74, 109, 111, 116, 134, 201, 308, 353, 360, 437, 440, 448, 449, 456, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474], "can_place_ship": 460, "candid": [108, 117], "cannot": [199, 437, 460, 462, 463, 467, 468, 469, 470, 474], "capabl": [469, 473], "captur": [465, 466, 469], "care": 469, "carefulli": 308, "carlson": 462, "carri": 469, "carrier": [460, 468], "case": [164, 260, 449, 460, 463, 467, 469, 473], "cast": 463, "catch_execution_error": 462, "caus": [353, 360, 460, 463], "caveat": 469, "cd": [463, 466], "cell": [460, 461, 462, 468, 474], "certif": 446, "certifi": 473, "challeng": 468, "chanc": 468, "chang": [19, 26, 60, 67, 74, 101, 109, 116, 460, 462, 463, 465, 467, 468, 469, 472, 473, 474], "changeabl": [26, 74, 116, 460, 462, 472, 473, 474], "char": [251, 301, 343, 398], "charact": [201, 212, 215, 248, 266, 298, 310, 340, 350, 356, 365, 395, 437, 468, 474], "character1": 469, "character2": 469, "charset": 473, "chat": 467, "chatgpt": 467, "check": [204, 206, 207, 209, 215, 224, 229, 234, 235, 242, 244, 262, 266, 274, 279, 284, 285, 292, 294, 310, 318, 323, 326, 327, 334, 336, 365, 373, 378, 381, 382, 389, 391, 437, 460, 463, 467, 468, 469, 470, 473], "check_hit": 460, "check_input": 472, "check_random_st": 474, "check_shot": [460, 468], "check_termin": [460, 468], "child": [94, 201, 202, 215, 218, 266, 269, 310, 313, 365, 368, 414, 425, 428, 432, 471], "children": [201, 206, 226, 234, 276, 284, 308, 320, 326, 375, 381, 412], "chinganc": 463, "choic": [447, 450, 453, 460, 461, 462, 469], "choos": [461, 465, 468, 469], "chose": 467, "chosen": 468, "cl": 199, "clarifi": 463, "class": [3, 4, 6, 7, 33, 34, 38, 47, 48, 55, 81, 95, 96, 124, 127, 130, 146, 151, 152, 166, 167, 170, 186, 188, 189, 190, 192, 193, 199, 200, 201, 213, 223, 258, 264, 273, 308, 317, 350, 356, 363, 372, 410, 411, 416, 422, 423, 424, 426, 430, 434, 438, 445, 446, 448, 451, 456, 463, 465, 467, 468, 469, 470, 471], "classic": [467, 468, 471], "classifi": 474, "classmethod": [155, 418], "claud": [458, 467], "clean": 260, "clear": [258, 460, 462, 467, 468, 470, 472, 473, 474], "clearli": 462, "click": [460, 462, 463, 467, 468, 469], "client": [449, 461], "clip": 463, "clone": [463, 466, 470], "close": [463, 468], "closer": 463, "code": [13, 19, 26, 61, 67, 74, 81, 90, 102, 109, 116, 142, 186, 460, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474], "code_optim": 467, "coef_": 474, "coeffici": 474, "coffeet": 469, "col": 460, "collabor": 469, "collect": [199, 411, 458, 471], "colon": [205, 231, 281, 324, 353, 360, 379, 462], "color": [145, 351, 352, 356, 357, 358, 359], "com": [125, 463, 466, 468], "combin": [210, 243, 293, 335, 353, 360, 390, 468], "come": [12, 467], "command": 463, "commentari": 462, "common": 468, "commonli": 462, "commun": [462, 469], "commut": 308, "compar": [201, 204, 209, 224, 229, 242, 244, 274, 279, 292, 294, 318, 323, 334, 336, 373, 378, 389, 391, 467, 469, 470, 473], "comparison": [201, 224, 244, 274, 294, 318, 336, 373, 391, 463, 464, 470], "compat": [451, 467, 468], "complet": [260, 449, 455, 456, 457, 460, 461, 463, 469], "complex": 467, "compon": 463, "compos": [26, 74, 116, 460, 462, 465, 472, 473, 474], "composit": 474, "comput": [215, 266, 308, 310, 363, 365, 414, 425, 428, 432, 463, 464, 467, 470, 471, 472, 473], "compute_loss": 473, "concat": 473, "concat1": 473, "concaten": 473, "concept": 464, "concern": 463, "concis": 462, "condit": [463, 468], "conduct": 469, "confer": 462, "config": [449, 452, 461, 463], "config_list": [448, 461, 462, 463], "config_list_from_json": [460, 461, 462, 463], "configur": 474, "confirm": 463, "connect": [470, 474], "consecut": 463, "consid": [16, 64, 67, 105, 109, 460, 462, 463, 468, 470, 472, 473, 474], "consider": [463, 468], "consist": [461, 463, 468, 474], "constant": 463, "constrain": 472, "constraint": [13, 26, 61, 74, 81, 90, 93, 102, 116, 141, 213, 264, 308, 363, 406, 460, 462, 463, 467, 472, 473], "construct": [10, 58, 99, 140, 141, 351, 353, 357, 360, 462, 465, 467, 469], "contain": [26, 48, 74, 116, 143, 148, 149, 197, 205, 213, 224, 225, 228, 231, 239, 244, 245, 264, 274, 275, 278, 281, 289, 294, 295, 308, 318, 319, 322, 324, 331, 336, 337, 363, 373, 374, 377, 379, 386, 391, 392, 405, 406, 416, 423, 449, 460, 462, 463, 467, 469, 470, 472, 473, 474], "container_of_nod": 436, "content": [215, 266, 310, 350, 353, 356, 360, 365, 447, 450, 453, 455, 457, 461, 462, 467, 469, 470], "context": [141, 201, 203, 221, 271, 315, 370, 449, 460, 462, 464, 468], "contextmanag": 434, "continu": [462, 463, 468, 469, 471], "contrast": 473, "contribut": [463, 466, 468], "control": [437, 449, 463, 468, 470, 474], "control_mod": 463, "controller_input": 463, "conveni": [456, 467], "convent": [467, 469, 470], "convers": [125, 461], "conversation_histori": 461, "convert": [11, 59, 93, 100, 152, 170, 467, 470, 474], "convert_english_to_numb": 474, "coord": [460, 468], "coordin": [460, 463, 468, 469], "copi": [201, 223, 264, 273, 317, 372, 462, 467, 470, 474], "copy_node_a": 264, "core": [463, 470, 473], "corner": 467, "correct": [215, 266, 308, 310, 365, 462, 463, 465, 467, 473, 474], "correctli": [261, 460, 462, 463, 467, 468, 473], "correspond": [161, 205, 225, 231, 245, 261, 275, 281, 295, 319, 324, 337, 374, 379, 392, 463, 467, 469, 473], "cost": 469, "could": [460, 467, 468], "count": [249, 299, 341, 396, 460, 468, 469], "cours": 468, "cover": 470, "craft": 462, "creat": [26, 74, 116, 201, 219, 223, 270, 273, 314, 317, 369, 372, 406, 413, 427, 431, 448, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "create_and_fill_battleship_board": 460, "create_battleship_board": 460, "create_feedback": [463, 472], "create_messag": 461, "create_prompt": 462, "creation": [460, 470], "credenti": 456, "credit": [468, 469], "criteria": 462, "crucial": 468, "cruiser": [460, 468], "cum_reward": 468, "current": [16, 64, 105, 201, 204, 209, 215, 219, 223, 225, 229, 230, 242, 260, 266, 270, 273, 275, 279, 280, 292, 308, 310, 314, 317, 319, 323, 334, 365, 369, 372, 374, 378, 389, 460, 462, 463, 464, 467, 468, 469, 472, 473, 474], "current_dict": 461, "current_inventori": 461, "current_messag": 461, "current_play": 461, "current_prompt": 461, "curv": 465, "custom": [449, 451, 474], "cutleryfork": 469, "d": [153, 156, 157, 158, 161, 162, 163, 164, 165, 460, 469], "dag": [201, 202, 204, 209, 218, 229, 242, 258, 269, 279, 292, 313, 323, 334, 368, 378, 389, 471], "dall": 468, "data": [11, 22, 30, 42, 45, 59, 70, 78, 93, 100, 112, 121, 135, 138, 201, 215, 254, 257, 266, 304, 307, 308, 310, 346, 349, 365, 401, 404, 406, 460, 461, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474], "data_typ": [26, 74, 116, 460, 462, 472, 473, 474], "databas": 465, "dataset": [462, 467, 474], "deal": 472, "debug": [108, 467], "decid": [463, 465, 468, 469], "decide_lang": 465, "decis": [460, 463, 468], "declar": [449, 465, 468], "decor": [199, 438, 467, 468, 469, 470, 474], "decreas": [108, 474], "dedent": 462, "deem": 462, "deep": [201, 223, 273, 317, 372], "deepcopi": 470, "deeper": [460, 468], "def": [439, 449, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "default": [14, 40, 62, 103, 133, 156, 180, 201, 215, 266, 308, 310, 350, 356, 365, 406, 449, 456, 458, 460, 462, 463, 467, 468, 470, 471], "default_object": [463, 468], "default_propag": 471, "defaultdict": [258, 260, 471], "defens": 462, "defin": [26, 74, 116, 152, 170, 262, 350, 356, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474], "definit": [19, 26, 67, 74, 109, 116, 460, 462, 463, 467, 468, 472, 473, 474], "delai": 469, "delet": 260, "delimit": [205, 231, 281, 324, 379], "demand": 462, "demo": [462, 469], "demonstr": [462, 463, 467, 469, 471], "denot": [460, 468, 469], "depend": [225, 230, 245, 275, 280, 295, 308, 319, 337, 374, 392, 465, 466, 470], "deprec": 463, "deriv": [462, 463], "descent": 141, "describ": [26, 74, 116, 213, 264, 308, 363, 406, 460, 462, 467, 469, 472, 473, 474], "descript": [26, 74, 116, 141, 213, 215, 264, 266, 308, 310, 350, 353, 356, 360, 363, 365, 405, 406, 460, 462, 463, 467, 468, 469, 470, 472, 473, 474], "deshaun": 462, "design": [257, 307, 349, 404, 460, 463, 465, 467, 468, 471, 473], "desir": [463, 471], "despit": [463, 468], "destroy": [460, 468], "detach": [201, 469, 470], "detail": [264, 462, 467], "detect": 468, "determin": [208, 240, 290, 332, 351, 352, 354, 357, 358, 359, 361, 387, 461, 463, 469], "develop": 469, "dialogu": 469, "dict": [11, 23, 30, 45, 48, 49, 51, 52, 53, 59, 71, 78, 93, 100, 113, 117, 121, 127, 129, 138, 149, 152, 160, 169, 179, 191, 197, 213, 215, 233, 264, 266, 283, 308, 310, 351, 357, 365, 412, 414, 425, 428, 432, 448, 460, 463, 470], "dict_act": 469, "dict_info": 469, "dict_nod": 470, "dictat": 463, "dictionari": [30, 45, 78, 117, 121, 138, 160, 169, 179, 197, 210, 213, 243, 261, 262, 264, 293, 308, 335, 351, 357, 363, 390, 439, 460, 463, 468, 470], "did": [462, 463, 473], "differ": [461, 463, 465, 467, 468, 469, 470, 473], "differenti": [464, 471], "digraph": [215, 266, 310, 365], "dim": 463, "dimens": 463, "dimension": 463, "direct": [201, 258, 308, 463, 468, 469, 470], "direction_to_go": 463, "direction_to_puck": 463, "directli": [201, 462, 463, 469, 470, 471, 474], "disabl": 434, "disambigu": 473, "discord": 467, "discuss": [467, 469], "dishwash": 469, "diskcach": 473, "displai": [460, 462, 463, 467, 468], "distanc": 463, "distro": 473, "divid": [469, 470], "do": [26, 74, 116, 437, 460, 461, 462, 463, 467, 469, 471, 472, 473, 474], "do_constrain": 141, "do_in_context_exampl": 141, "do_momentum": 141, "doc": [449, 456], "docker": 473, "docstr": [26, 74, 116, 460, 462, 467, 472, 473, 474], "document": [13, 26, 48, 61, 67, 74, 81, 90, 102, 109, 116, 456, 460, 462, 463, 467, 470, 472, 473, 474], "doe": [164, 405, 437, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474], "doesn": [462, 468, 469], "don": [142, 467, 469], "done": [469, 470], "dotenv": 473, "doubl": [437, 462, 468], "down": [19, 67, 109, 460, 462, 463, 467, 468, 469, 471, 472, 473, 474], "download": 468, "downstream": 468, "dozen": 467, "dp": 462, "dtype": [462, 467, 470], "du": 472, "due": [462, 463, 468, 469], "duplic": [219, 270, 314, 369], "dure": [142, 201, 205, 231, 281, 324, 379, 461, 463, 468, 472], "dynam": [463, 468], "e": [164, 449, 460, 462, 463, 465, 466, 467, 468, 469, 470, 472, 473], "e_nod": 463, "each": [26, 74, 116, 210, 243, 260, 261, 293, 335, 390, 449, 460, 461, 462, 463, 465, 468, 469, 471, 472, 473, 474], "each_input": 473, "earlier": [467, 468, 473], "easi": 469, "easili": 467, "eastern": 462, "edg": [460, 470], "edit": 466, "editor": 467, "effect": [463, 468, 469], "effector": 463, "effici": [463, 468, 469], "effor": 467, "effort": 469, "eight": 474, "either": [164, 264, 460, 468, 469, 470], "elabor": 462, "element": [175, 210, 243, 258, 262, 293, 335, 390, 460, 462, 463, 467, 470, 473], "elia": 462, "elicit": 460, "elif": [460, 461, 463, 468], "ellips": [354, 361], "ellipsi": [353, 360], "els": [156, 460, 461, 462, 463, 467, 468, 469, 470, 471, 473, 474], "empti": [117, 162, 180, 260, 355, 460, 462, 463, 467, 468, 469, 473], "en": 462, "en_or_": 465, "enabl": [215, 266, 310, 365, 462, 465], "encapsul": 470, "enclos": 405, "encod": 463, "encount": 460, "encourag": [463, 467], "end": [142, 171, 461, 462, 463, 465, 467, 471, 474], "endpoint": 451, "engin": 469, "engine_nam": 126, "engligsh": 474, "english": 474, "enhanc": [462, 468], "enhanced_infer": 449, "enough": [462, 463, 474], "ensur": [205, 215, 225, 231, 245, 260, 261, 266, 275, 281, 295, 310, 319, 324, 337, 365, 374, 379, 392, 462, 463, 464, 468, 474], "enter": [460, 462, 463, 467, 468], "entir": [142, 464, 465, 468], "entri": 468, "enumer": [460, 462, 468, 471, 473, 474], "env": [460, 462, 463, 467, 468, 469, 473], "env_nam": [460, 462, 463, 467, 468], "env_name_input": [460, 462, 463, 467, 468], "environ": [456, 458, 461, 462, 467, 468, 469], "environment": 463, "episod": 460, "epoch": 467, "eq": [467, 470, 473], "eq0": 473, "eq1": [467, 473], "eq2": 473, "eq3": 473, "equal": [224, 244, 274, 294, 318, 336, 373, 391, 463, 467, 470], "equat": 439, "equival": [470, 474], "error": [19, 67, 109, 205, 213, 231, 281, 324, 379, 405, 460, 462, 463, 467, 468, 469, 473, 474], "escap": 437, "especi": [460, 462, 463], "essenc": 468, "essenti": [202, 211, 218, 246, 269, 296, 313, 338, 368, 393, 462, 468], "et": 469, "etc": [465, 474], "eval": [460, 462, 463, 467, 468, 473], "eval0": [460, 462], "eval1": [460, 462, 467], "eval10": 468, "eval11": 468, "eval145": 463, "eval146": 463, "eval147": 463, "eval148": 463, "eval2": 462, "eval3": 462, "eval4": [462, 468], "eval5": 462, "eval6": [462, 468], "eval7": 468, "eval84": 473, "eval85": 473, "eval86": 473, "eval87": 473, "eval_metr": 462, "eval_polici": 460, "evalu": [463, 464, 467, 468, 473], "even": [463, 467, 468], "ever": 463, "everi": [446, 460], "everyth": 462, "evid": 468, "evidenc": 463, "evolv": 468, "evvalu": 470, "exact": 474, "exactli": [437, 468], "examin": [463, 467], "exampl": [15, 16, 31, 63, 64, 104, 105, 141, 264, 437, 439, 440, 449, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473], "example_problem": [15, 63, 104], "example_respons": [15, 63, 104], "exce": [353, 360], "except": [185, 186, 187, 213, 225, 245, 275, 295, 319, 337, 374, 392, 460, 461, 462, 463, 465, 467, 468, 469, 470, 472, 473, 474], "exception_ev": 462, "exception_eval0": 462, "exception_eval1": 462, "exception_func_with_input_checking0": 472, "exception_nod": [186, 460, 462, 463, 465, 467, 468, 472, 473], "exception_step": 463, "exceptiongroup": 473, "exceptionnod": [186, 352, 358, 359, 460, 462, 463, 472], "exchang": 461, "exclud": 468, "exclude_ship": 460, "exec_modul": 468, "execpt": 472, "execut": [26, 74, 116, 186, 213, 460, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474], "executionerror": [460, 462, 463, 465, 467, 468, 469, 472, 473], "exert": 468, "exhaust": 467, "exhibit": 463, "exist": [117, 203, 221, 271, 315, 370, 462, 468], "expand": [225, 275, 308, 319, 374], "expect": [67, 109, 460, 462, 463, 467, 468, 472, 473, 474], "expected_output": 467, "experi": [462, 469], "explain": [67, 109, 460, 462, 470, 472, 473, 474], "explan": [26, 74, 116, 460, 462, 463, 472, 473, 474], "explicit": 467, "explicitli": [460, 462, 463, 467, 469, 470, 474], "explor": 469, "exponenti": 461, "expos": 468, "express": [405, 469, 470], "extend": [201, 308, 469, 472], "extens": 473, "extern": [465, 466], "extract": [17, 65, 106, 201, 405, 406, 462, 463, 465], "extract_act": 469, "extract_answ": 462, "extract_text_or_completion_object": 449, "f": [164, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "f0": [467, 468], "f1": 468, "f2": 468, "f3": 468, "f4": 468, "f5": 468, "f6": 468, "f7": 468, "f8": 468, "f9": 468, "f_feedback": 474, "facilit": 462, "fact": 467, "factori": [446, 448, 451, 456], "fail": [462, 463, 467, 469, 472, 473, 474], "fair": 464, "fallback": [460, 468], "fals": [9, 55, 57, 98, 108, 130, 132, 141, 201, 206, 207, 215, 234, 235, 266, 284, 285, 308, 310, 326, 327, 365, 381, 382, 406, 421, 441, 449, 460, 461, 462, 463, 467, 468, 469, 470, 473, 474], "false_func": 149, "far": 461, "fashion": 473, "fast": 464, "faster": [463, 464, 469], "fb": 474, "feasibl": [16, 64, 105], "featur": 465, "feed": 468, "feedback": [8, 12, 13, 21, 22, 26, 27, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 46, 48, 56, 60, 61, 67, 69, 70, 74, 75, 80, 81, 90, 97, 101, 102, 109, 111, 112, 116, 118, 123, 125, 126, 131, 134, 135, 136, 139, 211, 215, 246, 257, 266, 296, 307, 308, 310, 338, 349, 365, 393, 404, 412, 413, 414, 416, 423, 425, 427, 428, 431, 432, 442, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 474], "feedback_fn": 465, "feel": 449, "fetch_openml": 474, "few": [462, 465, 467, 469, 470], "field": 462, "figur": [465, 467, 469, 474], "file": [195, 198, 458, 461, 466, 468], "file_nam": [195, 198], "fill": [351, 355, 357, 359, 362], "filter": 449, "filter_dict": 448, "filter_func": 449, "final": [201, 262, 460, 461, 462, 463, 465, 470, 474], "find": [258, 460, 461, 462, 468, 469], "findal": 462, "finish": 469, "firebrick1": [352, 358, 359], "first": [176, 181, 460, 461, 462, 463, 465, 468, 469, 471, 473], "fit": 474, "fit_transform": 474, "five": 474, "fix": [462, 468, 469], "flag": 201, "flaml": 473, "flattn": [159, 168, 178, 196], "flaw": [460, 463], "flexibilti": 471, "flexibl": 465, "float": [96, 98, 108, 463, 470, 472, 474], "float0": [472, 474], "flow": [465, 467, 468, 470], "focu": [460, 465], "folder": 474, "follow": [19, 26, 67, 74, 109, 116, 126, 164, 262, 264, 449, 460, 462, 463, 464, 467, 468, 469, 470, 472, 473, 474], "foo": [470, 474], "foo_nod": 470, "foobar": 474, "foobar_text": 474, "food": 469, "footbal": 462, "forc": 467, "form": [201, 258, 468], "format": [19, 26, 67, 74, 109, 116, 141, 201, 205, 231, 261, 262, 281, 324, 379, 437, 449, 458, 460, 461, 462, 468, 469, 470, 472, 473, 474], "formul": 462, "forward": [193, 462, 465, 471], "found": [161, 405, 437, 440, 449, 460, 461, 462, 468, 469], "four": [461, 474], "fourth": 463, "frame": 467, "framework": [464, 465, 470, 471], "frequent": 463, "fridg": 469, "friend": 469, "friendli": [212, 248, 298, 340, 395], "from": [17, 65, 106, 126, 142, 143, 153, 164, 172, 175, 195, 201, 215, 226, 260, 261, 266, 276, 308, 310, 320, 365, 375, 405, 406, 412, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "fulfil": 463, "full": 469, "fun": [216, 267, 311, 366, 439, 470, 473], "fun_nod": 470, "func_with_input_check": 472, "function": [19, 26, 47, 67, 74, 109, 116, 124, 144, 147, 149, 151, 188, 192, 200, 201, 203, 215, 216, 221, 225, 245, 260, 261, 262, 266, 267, 271, 275, 295, 310, 311, 315, 319, 337, 365, 366, 370, 374, 392, 405, 407, 435, 437, 445, 446, 448, 449, 451, 456, 458, 464, 465, 468, 469, 470, 472, 473], "functionfeedback": 93, "functionoptim": 474, "functionpropag": 48, "fundament": 467, "further": [463, 468, 469], "g": [449, 460, 462, 463, 465, 467, 468, 471, 473], "g0": 467, "game": [460, 462, 467], "gameplai": 468, "gener": [108, 201, 351, 357, 460, 462, 463, 465, 467, 468, 469, 471, 473], "get": [163, 202, 205, 208, 210, 211, 212, 218, 228, 231, 240, 243, 246, 248, 262, 263, 269, 278, 281, 290, 293, 296, 298, 313, 322, 324, 332, 335, 338, 340, 351, 357, 368, 377, 379, 387, 390, 393, 395, 449, 460, 463, 465, 468, 470], "get_board": 460, "get_feedback": [467, 473], "get_game_statu": 460, "get_hit": 460, "get_life_point": 460, "get_miss": 460, "get_shot": [460, 468], "get_shots_overlay_board": 460, "get_wrapper_attr": 463, "getattr": 470, "getitem": [463, 470], "git": [463, 466], "github": [125, 463, 466], "githubusercont": 468, "give": [462, 463, 467, 468, 470, 471], "given": [30, 45, 78, 121, 138, 161, 215, 261, 266, 310, 365, 413, 427, 431, 449, 460, 462, 463, 467, 468, 469, 470, 473, 474], "global": [460, 461, 462, 463, 467, 468], "goal": [461, 462, 463, 468, 469], "goal_po": 463, "gocheck": 469, "goe": 462, "goexplor": 469, "gold": 461, "good": [463, 467], "got": [125, 126, 460, 462, 468], "gpt": [458, 461, 463], "grab": [463, 467], "grad": 471, "gradeint": 471, "gradient": [126, 127, 140, 141, 308, 465, 468], "gradient_context": 127, "gradientdesc": 471, "gradientinfo": 140, "grammat": 462, "graph": [29, 38, 44, 48, 77, 120, 137, 201, 203, 208, 210, 211, 215, 221, 225, 230, 240, 243, 246, 266, 271, 275, 280, 290, 293, 296, 308, 310, 315, 319, 332, 335, 338, 350, 353, 356, 360, 363, 365, 370, 374, 387, 390, 393, 416, 460, 462, 464, 465, 467, 469, 471, 472, 473, 474], "graphpropag": [215, 266, 310, 365, 416], "graphviz": [215, 266, 310, 353, 360, 365, 473], "grasp": 463, "great": [463, 467], "greater": [204, 229, 262, 279, 323, 378, 468, 472, 474], "greet": 465, "grip": 463, "gripper": 463, "gripper_distance_apart": 463, "gripper_open": 463, "ground": 467, "group": 125, "gt": 201, "guess": [468, 474], "guid": [351, 356, 357, 461, 462, 463, 467, 468, 474], "guidanc": [467, 468], "guo": 469, "gym": 463, "gymnasium": 463, "h": 469, "h11": 473, "ha": [164, 193, 201, 206, 207, 215, 234, 235, 257, 262, 266, 284, 285, 307, 308, 310, 326, 327, 349, 365, 381, 382, 404, 460, 461, 462, 463, 464, 465, 467, 468, 470, 471, 474], "had": [467, 471], "hand": [462, 463], "hand_po": 463, "handl": [215, 266, 308, 310, 365, 437, 460, 461, 462, 463, 469, 470], "happen": [467, 469, 473], "happi": [460, 461, 462], "hard": [142, 467, 469], "have": [170, 201, 260, 460, 461, 462, 463, 464, 467, 468, 469, 470, 473], "heart": 468, "heed": 463, "height": 460, "hello": [439, 470], "help": [16, 26, 64, 74, 105, 116, 199, 460, 462, 463, 465, 467, 469, 472, 473, 474], "helper": [351, 357, 463, 468, 474], "henc": [462, 463, 472], "here": [437, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474], "heterogen": 462, "heurist": 468, "hidden": [230, 280], "hide": 469, "hierarch": [202, 218, 269, 313, 368, 469], "high": [26, 74, 116, 460, 462, 463, 472, 473, 474], "higher": [461, 468, 474], "highlight": 463, "hint": [16, 64, 105, 463, 468, 474], "histori": [469, 474], "hit": [460, 468], "hockei": 462, "hola": 465, "hold": [463, 469], "home": [462, 463, 469, 473], "hood": 467, "horizon": [463, 469], "host": 462, "housework": 469, "how": [26, 67, 74, 109, 116, 460, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "howev": [460, 462, 463, 464, 466, 467, 468, 469, 474], "html": 462, "http": [125, 456, 462, 463, 466, 468, 473], "httpcore": 473, "httpx": 473, "huggingfac": 462, "human": [467, 468, 469], "hundr": 464, "hurri": 469, "hypothet": 468, "i": [15, 19, 26, 34, 63, 67, 74, 104, 109, 116, 125, 142, 152, 161, 162, 164, 170, 176, 177, 180, 181, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 218, 221, 224, 225, 229, 231, 234, 235, 240, 242, 243, 244, 245, 246, 257, 258, 260, 261, 262, 263, 264, 266, 269, 271, 274, 275, 279, 281, 284, 285, 290, 292, 293, 294, 295, 296, 307, 308, 310, 313, 315, 318, 319, 323, 324, 326, 327, 332, 334, 335, 336, 337, 338, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 368, 370, 373, 374, 378, 379, 381, 382, 387, 389, 390, 391, 392, 393, 404, 405, 406, 446, 447, 448, 449, 450, 451, 453, 456, 458, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474], "ic": 462, "id": [201, 261, 469, 473], "ideal": 471, "ident": [215, 264, 266, 310, 365, 463], "identifi": [166, 201, 205, 231, 258, 261, 262, 263, 281, 324, 379, 460, 462, 463, 468, 473], "idna": 473, "ignor": 449, "ignore_extraction_error": [55, 467], "illustr": 467, "imag": [468, 469], "immedi": 462, "impact": [468, 474], "implaus": 462, "implement": [201, 449, 460, 463, 464, 465, 467, 468, 469, 473], "impli": [460, 463, 468], "implicit": 468, "implicitli": 460, "import": [258, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "importlib": 468, "improv": [60, 101, 460, 462, 463, 467, 468, 472, 473, 474], "includ": [26, 74, 116, 141, 160, 169, 179, 197, 201, 308, 351, 357, 451, 460, 462, 463, 464, 465, 468, 469, 470, 472, 473, 474], "include_exampl": 55, "incomplet": [26, 74, 116, 460, 462, 472, 473, 474], "incorpor": 468, "incorrect": [463, 465, 468], "incorrectli": 463, "increas": [460, 461, 463, 468, 474], "increment": [210, 243, 293, 335, 390, 463], "ind": 473, "inde": 460, "index": [170, 177, 180, 205, 210, 231, 243, 261, 262, 281, 293, 324, 335, 379, 390, 460, 462, 470, 473], "indexerror": [180, 462], "indic": [213, 264, 308, 363, 449, 460, 462, 463, 467, 468, 469, 470, 472, 473], "individu": 469, "induc": 468, "infer": [26, 74, 116, 460, 462, 472, 473, 474], "infix": 463, "influenc": [462, 468], "info": [213, 264, 308, 363, 463, 469, 474], "inform": [108, 213, 232, 264, 282, 308, 325, 363, 380, 462, 463, 468, 474], "inher": 469, "inherit": 469, "ini": 468, "init": [460, 463], "init_feedback": 471, "init_scor": 460, "init_with_one_hit": 460, "initi": [201, 213, 225, 245, 258, 262, 264, 275, 295, 308, 319, 337, 350, 356, 363, 374, 392, 461, 463, 468, 472], "input": [13, 26, 61, 67, 74, 81, 90, 102, 109, 116, 143, 148, 213, 262, 264, 405, 456, 460, 462, 463, 465, 467, 468, 470, 472, 473, 474], "insid": [143, 437, 462, 467, 468, 470], "inspir": 465, "instal": [462, 464, 467, 468, 470, 471, 472, 473, 474], "instanc": [15, 16, 63, 64, 79, 104, 105, 108, 122, 201, 213, 223, 258, 264, 273, 308, 317, 363, 372, 448, 460, 462, 463, 470, 472, 473, 474], "instanti": [449, 468], "instead": [460, 467, 470, 471], "instruct": [13, 26, 31, 61, 67, 74, 81, 90, 102, 109, 116, 456, 460, 462, 463, 465, 467, 468, 472, 473, 474], "instruct1": 465, "instruct2": 465, "instrument": 462, "int": [4, 9, 48, 50, 57, 96, 98, 108, 142, 208, 240, 290, 332, 350, 356, 387, 416, 419, 446, 448, 449, 451, 456, 460, 468, 470, 474], "int0": 474, "integ": [174, 176, 449, 467, 473, 474], "integr": 258, "intellig": 467, "intend": [460, 463, 468], "interact": [448, 460, 462, 468, 469], "interest": 469, "interfac": 467, "interg": 474, "intermedi": [26, 74, 116, 460, 462, 472, 473, 474], "intern": [201, 203, 221, 271, 315, 370, 467], "interpret": [468, 474], "interrupt": 467, "intervent": 467, "introduc": 468, "intuit": 465, "invalid": 260, "inventori": 461, "inventory_messag": 461, "investig": 469, "invis": 468, "involv": [460, 462, 463, 465, 467, 468, 469], "io": 462, "iprogress": 462, "ipython": [460, 462, 463, 467, 468], "ipywidget": [460, 462, 463, 467, 468], "is_hit": 460, "is_leaf": 201, "is_root": [201, 263], "is_vert": 460, "isinst": [460, 463, 470], "isn": [460, 462], "issu": [353, 360, 460, 462, 463, 464, 468, 472], "item": [5, 153, 164, 171, 172, 177, 180, 181, 460, 469, 473, 474], "iter": [155, 164, 175, 260, 460, 461, 463, 468, 470, 471, 472, 473], "its": [93, 201, 208, 210, 215, 240, 243, 261, 262, 263, 266, 290, 293, 310, 332, 335, 352, 354, 358, 359, 361, 365, 387, 390, 462, 463, 467, 468, 469, 472], "itself": [201, 462, 466, 467], "j": [460, 468], "jiter": 473, "joblib": 473, "john": 462, "join": [460, 463], "json": [19, 67, 109, 437, 460, 461, 462, 463, 469, 472, 473, 474], "json_object": 461, "json_str": 437, "json_txt": 440, "juan": 465, "judici": [257, 307, 349, 404], "jupyt": 462, "just": [19, 26, 67, 74, 109, 116, 460, 462, 463, 467, 468, 470, 472, 473, 474], "k": [156, 161, 162, 163, 164, 474], "keep": [460, 463, 467], "kei": [152, 161, 162, 164, 225, 228, 245, 261, 262, 264, 275, 278, 295, 319, 322, 337, 374, 377, 392, 414, 425, 428, 432, 437, 449, 458, 460, 461, 462, 463, 467, 468], "kernel": 473, "keyerror": [161, 162, 225, 245, 275, 295, 319, 337, 374, 392, 462], "keyword": [141, 148, 216, 267, 311, 366], "kind": 468, "kitchen": 469, "kitchencabinet": 469, "kk": 474, "know": [467, 468, 469], "known": [460, 468], "kwarg": [4, 7, 8, 10, 22, 27, 34, 38, 39, 42, 43, 48, 55, 56, 58, 70, 75, 81, 96, 97, 99, 112, 118, 127, 130, 131, 135, 136, 148, 152, 166, 167, 170, 186, 187, 189, 190, 193, 194, 201, 213, 214, 216, 227, 258, 264, 265, 267, 277, 308, 309, 311, 321, 350, 356, 363, 364, 366, 376, 411, 416, 423, 424, 426, 430, 434, 446, 448, 449, 451, 456, 460, 462, 467, 471, 473], "kwd": 183, "l": 473, "l1": 474, "l_eval": 473, "label": [351, 353, 357, 360, 473], "lack": [164, 460], "lai": 468, "lambda": 471, "lang": 465, "langchain": 465, "languag": [125, 462, 464, 465, 474], "larg": [464, 466, 474], "larger": [125, 469, 474], "largest": 473, "last": [180, 262, 463, 470, 471, 473], "later": 470, "latest": 463, "layout": 468, "lazi": 458, "lead": [460, 461, 462, 463, 468, 474], "leaf": [206, 234, 284, 326, 381], "learn": [308, 465, 467, 469, 473, 474], "least": [468, 473], "led": [463, 467], "left": [260, 469], "legaci": 449, "legitim": 460, "len": [460, 461, 462, 467, 468, 469, 470, 471, 473, 474], "len_": 470, "length": [170, 239, 262, 289, 331, 386, 464], "less": [209, 242, 292, 334, 389, 461, 467, 468], "let": [460, 463, 467, 468, 469, 471], "level": [26, 74, 108, 116, 201, 204, 209, 225, 229, 230, 242, 258, 275, 279, 280, 292, 308, 319, 323, 334, 374, 378, 389, 460, 462, 472, 473, 474], "leverag": [462, 464, 467, 468], "li": [460, 462, 463], "lib": [462, 463, 473], "librari": [456, 460, 461, 462, 463, 465, 467, 468], "lightgrai": [352, 359], "like": [141, 143, 157, 158, 353, 360, 458, 460, 462, 463, 465, 467, 468, 469, 470, 474], "likelihood": 468, "limit": [108, 353, 360, 468, 474], "lindholm": 462, "line": [467, 468, 474], "linear": 473, "linear_model": 474, "link": 467, "list": [34, 38, 48, 50, 55, 96, 98, 108, 117, 130, 140, 149, 159, 168, 170, 178, 180, 191, 196, 201, 202, 210, 211, 213, 218, 233, 243, 246, 258, 260, 261, 262, 263, 264, 269, 283, 293, 296, 313, 335, 338, 368, 390, 393, 412, 416, 419, 442, 448, 458, 460, 462, 463, 467, 468, 469, 470, 471, 473], "list0": [460, 468, 473], "list1": [467, 473], "list2": 473, "list3": 473, "litellm": [451, 454, 455], "live": 469, "livingroom": 469, "ll": [461, 462], "llf": 463, "llfbench": 463, "llm": [9, 55, 57, 98, 108, 130, 132, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474], "llm_op": 125, "llmcallabl": [462, 469], "load": [461, 463, 468, 469], "load_dataset": 462, "loader": 468, "local": [462, 463, 468], "local_fil": 468, "locat": [463, 468, 469], "log": [55, 130, 460, 462, 474], "logger": [145, 463], "logic": [224, 244, 274, 294, 318, 336, 373, 391, 460, 462, 463, 468, 470], "logisticregress": 474, "long": [142, 446], "look": [460, 462, 467, 468, 473], "lookup": 258, "loop": [460, 461, 468], "loss": [257, 307, 349, 404, 467, 471, 473], "low": 463, "lower": [461, 462, 469, 474], "lst": [467, 473], "lst0": 473, "lst1": [467, 473], "lst2": 473, "lst3": 473, "lt": 201, "m": 469, "machin": [308, 467, 474], "made": [460, 462, 463, 468], "magic": [239, 289, 331, 386, 470], "magnitud": 474, "magnitutd": 468, "mai": [26, 74, 116, 143, 446, 460, 462, 463, 466, 467, 469, 472, 473, 474], "main": [125, 448, 460, 468], "maintain": [258, 308, 468], "major": 468, "make": [449, 460, 463, 465, 466, 467, 468, 469, 471, 472, 474], "manag": [258, 446, 463, 467, 468], "maneuv": 463, "mani": [467, 468, 469], "manipul": [202, 218, 269, 313, 368, 463, 468], "manual": [467, 470, 471], "map": [460, 465, 468], "map0": 460, "map1": 460, "map2": 468, "map3": 468, "map4": 468, "map6": 468, "marcelo": 462, "mark": [308, 437, 468, 470], "mask": [10, 20, 58, 68, 99, 108, 110], "master": 468, "match": [405, 462, 467, 469, 471, 473], "math": 471, "matplotlib": [463, 473], "maveriq": 462, "max": 467, "max_index": 467, "max_temperatur": 108, "max_token": [9, 55, 57, 98, 108, 130, 461, 462], "maxim": [461, 468, 474], "maximum": [108, 208, 215, 240, 266, 290, 310, 332, 350, 356, 365, 387, 463, 467, 473], "maxsplit": [250, 300, 342, 397], "me": 469, "mean": [26, 67, 74, 109, 116, 460, 462, 463, 468, 472, 473, 474], "meaning": 460, "meant": [201, 462, 463, 468], "mechan": [308, 465, 468, 469], "meet": [463, 469], "memori": [446, 469], "memory_s": [55, 460, 461, 463, 472], "mention": [463, 468], "mere": 462, "messag": [145, 187, 213, 405, 447, 449, 450, 453, 455, 457, 461, 462, 463, 468, 469], "message_prompt": 461, "messagenod": [92, 94, 224, 239, 244, 318, 331, 336, 373, 386, 391, 414, 418, 425, 428, 432, 462, 467, 472], "met": 463, "meta": 469, "metaworld": 463, "method": [4, 7, 34, 38, 48, 55, 81, 96, 127, 130, 152, 164, 166, 167, 170, 184, 189, 190, 193, 201, 204, 209, 213, 229, 239, 242, 258, 264, 279, 289, 292, 308, 323, 331, 334, 350, 351, 356, 357, 363, 378, 386, 389, 411, 416, 423, 424, 426, 430, 434, 438, 446, 448, 451, 456, 462, 463, 467, 468, 470, 472], "method_nam": 470, "metric": 467, "microsoft": [462, 463, 466, 468], "microwav": 469, "might": [26, 74, 116, 460, 462, 463, 464, 467, 468, 469, 472, 473, 474], "min": 467, "min_index": 467, "min_temperatur": 108, "mind": 467, "miniconda3": [462, 463, 473], "minim": [446, 465, 466, 472, 473], "minimum": [463, 467, 473], "minor": 469, "minu": 474, "miscount": 468, "mishandl": 468, "misjudg": 463, "misrepres": 468, "misrepresent": 468, "miss": [460, 468, 469], "mistak": 463, "misunderstand": 463, "mnist_784": 474, "mode": 466, "model": [125, 159, 160, 168, 169, 178, 179, 195, 196, 197, 198, 446, 448, 449, 451, 456, 458, 461, 462, 463, 464, 465, 468, 469], "model_select": 474, "modelwrapp": 462, "modif": [463, 468, 469], "modifi": [262, 462, 463, 468, 472], "modul": [124, 460, 462, 468], "module_from_spec": 468, "momentum": 141, "monitor": 463, "mooki": 462, "more": [449, 460, 462, 463, 464, 467, 468, 469, 473, 474], "moreov": [463, 468], "most": [460, 463, 465, 468, 474], "motion": 463, "move": [460, 463, 468], "movement": [463, 469], "much": 468, "multi": 463, "multipl": [98, 108, 201, 412, 461, 463, 467, 468, 469, 473], "multipli": 474, "multiply0": 474, "must": [461, 463, 468, 469, 472, 474], "my": 469, "my_api_kei": [460, 462, 463, 467, 468], "my_fun": 474, "n": [15, 16, 18, 19, 26, 31, 63, 64, 66, 67, 74, 79, 90, 104, 105, 107, 109, 116, 122, 125, 126, 437, 439, 460, 461, 462, 463, 468, 470, 472, 473, 474], "n1": 474, "n2": 474, "n3": 474, "n_eval_episod": 460, "n_optimization_step": 463, "n_words_offset": 142, "nafter": 474, "name": [19, 67, 93, 109, 201, 205, 212, 213, 231, 248, 258, 261, 262, 264, 281, 298, 308, 324, 340, 353, 360, 363, 379, 395, 406, 437, 456, 460, 461, 462, 463, 465, 467, 468, 469, 470, 472, 473, 474], "name_scop": 262, "nameerror": [463, 468], "nanswer": 462, "natur": [462, 467, 469], "navig": [463, 469], "nbelow": 31, "nd": 463, "nearbi": 460, "nearest": 469, "nearing": 463, "necessari": [260, 460, 461, 462, 463, 468, 469], "necessarili": 460, "need": [19, 26, 60, 67, 74, 101, 109, 116, 423, 449, 460, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "neg": [463, 467, 474], "negat": [204, 209, 229, 242, 279, 292, 323, 334, 378, 389, 474], "negoti": 469, "neighbor": 468, "net": [462, 473], "netflix": 473, "network": 468, "neural": 468, "never": [210, 243, 258, 262, 293, 335, 390, 446, 448, 451, 456], "nevertheless": 460, "new": [12, 19, 22, 30, 42, 45, 67, 70, 78, 109, 112, 121, 135, 138, 210, 243, 249, 260, 293, 299, 335, 341, 390, 396, 406, 460, 462, 470, 471, 472, 473, 474], "new_map": [460, 468], "new_test_input": 467, "new_test_output": 467, "next": [460, 461, 462, 463, 471, 472], "next_agent_obs_desc": 469, "next_ob": 463, "nformat": 19, "nfunction": 19, "ngiven": [463, 474], "nhere": [15, 16, 63, 64, 104, 105, 125], "nhistori": 474, "nif": [19, 26, 67, 74, 109, 116], "nin": [26, 67, 74, 109, 116], "nine": 474, "niter": 472, "nmost": 474, "nnow": [79, 122], "no_improv": 441, "no_trace_graph": [441, 468], "node": [8, 39, 56, 92, 97, 131, 143, 148, 149, 166, 167, 191, 411, 412, 413, 414, 416, 418, 419, 425, 427, 428, 432, 436, 442, 460, 461, 462, 463, 465, 467, 468, 469, 471, 472, 474], "node_a": 264, "node_b": 264, "node_dict": [24, 25, 72, 73, 114, 115], "node_feedback": 93, "node_getattr": 470, "node_i": 470, "node_to_function_feedback": 474, "node_x": 470, "nodecontain": [149, 470], "noisi": 473, "non": [160, 169, 179, 197, 215, 266, 308, 310, 365, 463, 474], "non_nod": 470, "non_trace_fun": 470, "none": [10, 20, 38, 48, 55, 58, 68, 81, 96, 99, 108, 110, 127, 129, 130, 145, 153, 155, 156, 164, 172, 201, 213, 215, 250, 251, 264, 266, 300, 301, 308, 310, 342, 343, 363, 365, 397, 398, 406, 416, 446, 448, 449, 451, 456, 460, 461, 462, 463, 467, 468, 469, 474], "nonetyp": [460, 468], "normal": [468, 470, 473], "note": [201, 202, 203, 204, 205, 208, 209, 210, 211, 215, 218, 221, 224, 225, 229, 231, 239, 240, 242, 243, 244, 245, 246, 257, 258, 260, 261, 262, 266, 269, 271, 274, 275, 279, 281, 289, 290, 292, 293, 294, 295, 296, 307, 308, 310, 313, 315, 318, 319, 323, 324, 331, 332, 334, 335, 336, 337, 338, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 368, 370, 373, 374, 378, 379, 386, 387, 389, 390, 391, 392, 393, 404, 405, 406, 449, 458, 461, 462, 467, 468, 469, 472, 473], "notebook": [460, 461, 462], "notebook_tqdm": 462, "noth": [463, 469], "notic": [467, 474], "noutput_format": [19, 67, 109], "noveral": 461, "now": [460, 461, 462, 463, 467, 468, 469, 472, 473, 474], "np": [460, 463, 473, 474], "nparent": 470, "npleas": 462, "nprint": 439, "nquestion": 462, "nregular": 474, "nreturn": 463, "nscore": 474, "nsparsiti": 474, "nspecif": [26, 74, 116], "nsuccess": 472, "ntest": 462, "nthe": [19, 462, 463], "nthi": 125, "null": 460, "num": 460, "num_each_typ": 460, "num_respons": [96, 98, 108], "number": [108, 142, 174, 201, 215, 266, 310, 350, 356, 365, 446, 448, 451, 456, 462, 464, 467, 468, 469, 472, 474], "numer": [463, 473], "numpi": [460, 463, 473, 474], "nwhen": 19, "nyou": [26, 74, 116], "nyour": [15, 18, 63, 66, 104, 107], "o": [460, 461, 462, 463, 467, 468], "oai_config_list": [458, 461, 462, 463, 474], "oai_config_list_sampl": 474, "ob": [460, 463, 468, 469], "obei": 406, "object": [14, 21, 35, 40, 41, 55, 62, 69, 103, 111, 130, 133, 134, 149, 157, 158, 165, 191, 201, 203, 215, 219, 221, 258, 262, 266, 270, 271, 310, 314, 315, 365, 369, 370, 406, 413, 427, 431, 449, 460, 461, 462, 463, 465, 467, 468, 469, 470, 472, 474], "observ": [460, 463, 468, 469], "obsrvaiton": 463, "obtain": [462, 463, 468], "occur": [462, 463, 468], "occurr": [174, 181], "often": [460, 463, 465, 473], "oh": 467, "old": [249, 299, 341, 396, 474], "old_vari": 474, "on_button_click": [460, 462, 463, 467, 468], "on_click": [460, 462, 463, 467, 468], "onc": [463, 468, 474], "one": [208, 240, 290, 332, 387, 461, 462, 467, 468, 469, 470, 471, 473, 474], "onli": [67, 109, 215, 262, 266, 310, 365, 449, 460, 461, 462, 463, 466, 468, 469, 472, 473, 474], "onlin": [460, 473], "onto": 469, "op": [148, 470, 471], "open": [463, 468], "openai": [449, 451, 461, 467, 468, 473], "openai_api_kei": [460, 462, 463, 467, 468], "openaiwrapp": [448, 462], "oper": [148, 205, 211, 215, 224, 231, 233, 244, 246, 264, 266, 274, 281, 283, 294, 296, 308, 310, 318, 324, 336, 338, 365, 373, 379, 391, 393, 405, 460, 462, 463, 464, 465, 467, 471, 472, 473, 474], "operator_nam": [264, 415, 429, 433], "oppon": 468, "opportun": 460, "oppos": 462, "opro": 464, "opt": [460, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474], "optim": [159, 168, 178, 196, 199, 437, 440, 441, 448, 460, 464, 465, 466, 470, 472], "optimize_polici": 463, "optimizer1": [464, 469], "optimizer2": [464, 469], "optimizer3": 464, "optimizer_kwarg": 141, "optimz": 471, "optimzi": 471, "option": [108, 127, 141, 176, 201, 213, 215, 264, 266, 308, 310, 350, 356, 363, 365, 406, 460, 468], "opto": [460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474], "optoprim": [460, 461, 462, 463, 464, 465, 467, 468, 469, 472, 473, 474], "order": [215, 266, 308, 310, 365, 467, 468, 470, 471, 473, 474], "organ": 258, "organiz": 469, "orient": 463, "origin": [201, 462, 463, 468, 470, 472], "other": [13, 26, 48, 61, 67, 74, 81, 90, 93, 102, 109, 116, 175, 204, 209, 224, 229, 242, 244, 274, 279, 292, 294, 318, 323, 334, 336, 351, 354, 357, 361, 373, 378, 389, 391, 437, 449, 460, 462, 463, 465, 467, 468, 469, 472, 473, 474], "otherwis": [161, 201, 206, 207, 215, 224, 234, 235, 244, 266, 274, 284, 285, 294, 310, 318, 326, 327, 336, 355, 365, 373, 381, 382, 391, 405, 406, 466, 470], "our": [461, 462, 464, 465, 467, 468, 469], "out": [180, 257, 307, 349, 404, 462, 463, 465, 467, 468, 469, 474], "outcom": [460, 463, 468], "outlin": 463, "output": [13, 19, 26, 48, 60, 61, 67, 74, 81, 90, 93, 101, 102, 109, 116, 125, 148, 264, 460, 462, 463, 467, 468, 469, 470, 472, 473, 474], "output_format": [460, 462, 472, 473, 474], "outsid": [437, 468], "over": [260, 460, 461, 463, 465, 467, 468, 470], "overal": [461, 463], "overfit": 474, "overload": [239, 289, 331, 386, 470, 471], "overrid": [201, 448, 449, 471], "overridden": 449, "own": [458, 468, 469], "p": [462, 468, 470, 471, 474], "p1_inventori": 461, "p1_name": 461, "p1_prompt": 461, "p1_valu": 461, "p2_inventori": 461, "p2_name": 461, "p2_prompt": 461, "p2_valu": 461, "packag": [460, 461, 462, 463, 466, 469, 473], "page": 469, "pair": [162, 467, 473], "panda": 474, "paper": [462, 464], "param": [108, 117, 142, 471, 472], "paramet": [22, 27, 29, 30, 34, 36, 38, 42, 43, 44, 45, 55, 70, 75, 77, 78, 112, 118, 120, 121, 130, 135, 136, 137, 138, 141, 143, 148, 149, 160, 167, 169, 179, 195, 197, 198, 199, 201, 204, 209, 213, 215, 216, 224, 225, 228, 229, 242, 244, 245, 261, 262, 264, 266, 267, 274, 275, 278, 279, 292, 294, 295, 308, 310, 311, 318, 319, 322, 323, 334, 336, 337, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 373, 374, 377, 378, 389, 391, 392, 405, 406, 437, 446, 448, 449, 451, 456, 460, 462, 463, 464, 465, 467, 468, 471, 472, 473], "parametercontain": [160, 179, 193, 197], "parameternod": [11, 30, 34, 38, 45, 55, 59, 78, 100, 121, 130, 138, 143, 160, 169, 179, 197, 352, 354, 358, 359, 361, 406, 462, 467, 470, 474], "parameters_dict": [159, 168, 178, 196], "parent": [201, 207, 208, 215, 235, 240, 257, 266, 285, 290, 307, 310, 327, 332, 349, 365, 382, 387, 404, 414, 425, 428, 432, 470, 471, 472], "parent_feedback": [215, 266, 310, 365], "parenthes": 468, "parm": 470, "pars": [439, 461, 462, 463], "parse_ob": 463, "parsed_answ": 462, "part": [26, 74, 116, 125, 205, 211, 231, 246, 281, 296, 324, 338, 379, 393, 460, 462, 463, 468, 471, 472, 473, 474], "particular": 463, "particularli": 463, "pass": [215, 216, 266, 267, 310, 311, 365, 366, 448, 460, 462, 467, 473, 474], "pass_through": 470, "passive_env_check": 463, "password": [460, 462, 463, 467, 468], "past": [141, 463, 467, 468], "path": [411, 463, 468], "pattern": [463, 473], "penalti": 474, "per": [460, 461, 463, 467, 468], "perceiv": 468, "percentag": 474, "perform": [215, 266, 310, 365, 460, 462, 463, 464, 467, 468, 469, 470, 471, 473, 474], "perhap": 460, "period": 462, "permut": 474, "perspect": [467, 469], "pg": 471, "phase": [463, 465], "philosophi": [467, 468], "phrase": 462, "pick": 463, "pickl": 199, "piec": 460, "pip": [460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474], "pkl": 467, "place": [182, 460, 463, 468], "place_ship": 460, "placehold": [460, 462, 463, 467, 468], "placement": 460, "plai": [461, 468], "plan": [460, 468, 469], "plate": 469, "plausibl": 462, "player": [460, 461, 462], "player_prompt": 461, "pleas": [437, 458, 462, 469, 474], "plot": [215, 266, 310, 365, 463, 473], "plt": [463, 473], "plu": [208, 240, 290, 332, 387], "point": [463, 468, 474], "polici": [463, 468], "poor": 474, "pop": 473, "popular": 465, "portion": [205, 231, 281, 324, 379], "pose": [462, 463], "posit": [148, 460, 463, 467, 468, 474], "possibl": [463, 468, 469], "possibli": [462, 463, 468], "post": [462, 465], "post1": 473, "potenti": [125, 225, 245, 275, 295, 319, 337, 374, 392, 460, 468], "power": 465, "ppo": 468, "pre": [463, 465], "precis": [462, 463], "pred": 462, "predefin": [463, 468, 473], "predict": [462, 467, 473], "predictor": 473, "prefix": [262, 449, 463], "prepar": [462, 469], "preprocess": 474, "presenc": 468, "present": [164, 176, 181, 203, 221, 271, 315, 370, 460, 468, 469, 474], "prevent": [460, 463, 468, 472], "preview": [461, 463], "previou": [260, 463, 468, 469], "previous": 260, "previous_messag": 461, "primari": 460, "primarili": 468, "primit": [465, 467, 468], "print": [108, 215, 266, 310, 350, 353, 356, 360, 365, 439, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "print_limit": [215, 266, 310, 350, 356, 365, 421, 467, 468, 470], "print_nod": 470, "prior": [463, 469], "priorit": 460, "prioriti": [215, 266, 310, 365], "privat": 461, "probabl": 468, "problem": [15, 16, 26, 63, 64, 67, 74, 79, 104, 105, 108, 109, 116, 122, 142, 353, 360, 460, 462, 463, 467, 468, 471, 472, 473, 474], "problem_inst": [79, 122], "problemat": 460, "proce": 469, "procedur": [467, 468, 469, 474], "process": [257, 307, 349, 404, 460, 461, 462, 465], "produc": [460, 461, 462, 463, 464, 465, 468, 469], "product": 474, "program": [462, 465, 466, 468], "progress": [108, 460, 463, 469], "project": 469, "prompt": [9, 10, 57, 58, 98, 99, 108, 132, 140, 141, 449, 460, 462, 465, 472, 473, 474], "prompt_symbol": 55, "prompt_templ": 462, "propag": [8, 14, 38, 39, 40, 55, 56, 62, 97, 103, 130, 131, 133, 211, 215, 246, 257, 266, 296, 307, 308, 310, 338, 349, 365, 393, 404, 474], "propagate_funct": [415, 429, 433], "propagated_grad": 471, "propagt": 471, "proper": [463, 468], "properli": [225, 245, 262, 275, 295, 319, 337, 374, 392, 437, 460, 463, 468], "properti": [21, 29, 35, 41, 44, 69, 77, 111, 120, 134, 137, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 218, 221, 222, 225, 226, 230, 231, 232, 233, 234, 235, 240, 243, 245, 246, 248, 254, 263, 269, 271, 272, 275, 276, 280, 281, 282, 283, 284, 285, 290, 293, 295, 296, 298, 304, 313, 315, 316, 319, 320, 324, 325, 326, 327, 332, 335, 337, 338, 340, 346, 351, 357, 368, 370, 371, 374, 375, 379, 380, 381, 382, 387, 390, 392, 393, 395, 401, 447, 450, 453, 455, 457], "propos": [461, 463, 464, 467, 471], "proposed_end": 461, "proposed_trad": 461, "provid": [157, 158, 165, 201, 215, 258, 266, 310, 350, 356, 365, 406, 449, 456, 458, 460, 461, 462, 463, 464, 467, 468, 469, 472, 473, 474], "proxi": 451, "proxim": [460, 463], "puck": 463, "puck_path": 463, "puck_po": 463, "pud": 469, "pure": [465, 473], "purpos": 469, "purppos": 471, "put": [463, 469], "py": [125, 437, 440, 462, 463, 468], "py_nam": 201, "pydant": 473, "pypi": 473, "pyplot": [463, 473], "python": [19, 26, 67, 74, 109, 116, 152, 170, 212, 248, 298, 340, 353, 360, 395, 460, 461, 462, 463, 464, 465, 466, 468, 469, 472, 473, 474], "python3": [462, 463, 473], "pytorch": [465, 467, 470], "quantiti": 461, "question": [26, 74, 116, 460, 462, 472, 473, 474], "question0": 462, "question1": 462, "question2": 462, "question3": 462, "question4": 462, "question5": 462, "question6": 462, "question7": 462, "question8": 462, "queue": [215, 266, 310, 365], "quot": [437, 462], "quotat": 437, "r": [460, 462], "r1": [467, 468], "r10": 468, "r2": 468, "r3": 468, "r4": 468, "r5": 468, "r6": 468, "r7": 468, "r8": 468, "r9": 468, "rais": [161, 162, 176, 180, 181, 203, 215, 221, 266, 271, 310, 315, 365, 370, 405, 449, 461, 462, 463, 472], "ran": 464, "randint": [460, 473], "random": [449, 460, 463, 469, 473], "random_st": 474, "randomli": 469, "rang": [180, 460, 461, 462, 463, 467, 468, 469, 471, 472, 473, 474], "rather": [460, 462, 468, 470], "rational": 467, "raw": [413, 427, 431, 468], "raw_url": 468, "re": [26, 74, 116, 460, 462, 469, 472, 473, 474], "reach": 463, "react": [468, 469], "reactiv": 468, "read": 469, "readi": 260, "readthedoc": 462, "realiz": 469, "reanalyz": 468, "reason": [67, 109, 460, 462, 463, 467, 468, 469, 472, 473, 474], "receiv": [460, 462, 463, 468, 471, 473], "recent": [463, 474], "recent_hit": 468, "recogn": [460, 462], "recognit": 468, "recommend": [176, 463], "reconsid": 468, "record": [465, 468], "recov": 471, "recurs": [149, 413, 427, 431, 470], "reduc": [126, 140, 142, 465, 469], "refer": [201, 260, 264, 468, 471], "referenc": 468, "refin": [462, 463], "reflect": 463, "reformul": 462, "refresh": [446, 448, 451, 456], "regard": 463, "regex": 473, "regist": [201, 210, 243, 258, 293, 335, 390, 449], "registri": 258, "regress": 473, "regular": [405, 474], "regularization_paramet": 474, "reinforc": 463, "reiniti": 260, "reject": 461, "rel": 463, "relat": [463, 470], "relev": 462, "reli": [460, 462, 463, 466], "reliabl": 462, "remain": [463, 467, 473], "rememb": [67, 109, 460, 462, 472, 473, 474], "remind": 463, "remov": [143, 153, 161, 162, 172, 180, 201, 210, 212, 243, 248, 258, 260, 262, 293, 298, 335, 340, 390, 395, 463, 467, 470, 473, 474], "renam": 474, "render_html": 468, "render_opt_step": [467, 468], "repeat": [142, 463, 469], "repeatedli": [463, 474], "replac": [437, 463, 469, 474], "replic": 462, "repo": 464, "repopul": 260, "report": 464, "repositori": [466, 474], "repres": [201, 264, 308, 354, 361, 460, 462, 463, 464, 465, 467, 468, 469], "represent": [201, 437, 467, 474], "request": [108, 228, 261, 278, 322, 377, 462, 463, 468, 473], "requir": [215, 266, 310, 365, 446, 462, 463, 464, 466, 468, 469, 473, 474], "requires_grad": 471, "resembl": 468, "reset": [32, 37, 46, 80, 123, 139, 260, 463, 469, 471], "reset_freq": [446, 448, 451, 456], "reshap": 474, "resolv": [460, 472], "resourc": 461, "respect": [461, 468], "respond": [462, 463, 469], "respons": [9, 15, 17, 18, 34, 57, 63, 65, 66, 98, 104, 106, 107, 108, 117, 132, 447, 449, 450, 453, 455, 457, 460, 461, 462, 463, 465, 469, 472, 473, 474], "response_desc": 125, "response_format": 461, "response_json": 461, "rest": 149, "restart": 473, "restrict": 460, "restructur": 468, "result": [26, 67, 74, 109, 116, 126, 215, 216, 224, 244, 266, 267, 274, 294, 310, 311, 318, 336, 365, 366, 373, 391, 460, 462, 463, 464, 467, 468, 470, 472, 473, 474], "result_valu": 461, "results_gradi": 126, "retain": [215, 266, 310, 365], "retain_graph": [215, 266, 310, 365, 467], "retri": [460, 468], "retriev": [203, 221, 258, 261, 271, 315, 370, 468], "return": [9, 14, 21, 35, 40, 41, 57, 62, 69, 98, 103, 108, 111, 117, 132, 133, 134, 141, 142, 143, 159, 160, 161, 162, 168, 169, 174, 176, 178, 179, 180, 191, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 221, 223, 224, 228, 229, 230, 231, 234, 235, 239, 240, 242, 243, 244, 246, 248, 261, 263, 266, 267, 269, 270, 271, 273, 274, 278, 279, 280, 281, 284, 285, 289, 290, 292, 293, 294, 296, 298, 310, 311, 313, 314, 315, 317, 318, 322, 323, 324, 326, 327, 331, 332, 334, 335, 336, 338, 340, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 372, 373, 377, 378, 379, 381, 382, 386, 387, 389, 390, 391, 393, 395, 405, 406, 414, 418, 425, 428, 432, 437, 446, 448, 449, 451, 456, 458, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "return_feedback": 474, "return_x_i": 474, "reveal": [462, 468, 469], "revers": [215, 266, 310, 365, 471], "reverse_plot": [215, 266, 310, 365, 421], "review": [463, 468], "revis": 468, "revolv": 460, "reward": [460, 463, 468, 469], "rewrit": 468, "right": [11, 59, 100, 262, 462, 463, 467, 469], "rl": [463, 468, 469], "rlhf": 468, "robot": 463, "role": [455, 457, 461, 462], "room": 469, "root": [48, 93, 207, 208, 215, 235, 240, 258, 266, 285, 290, 310, 327, 332, 365, 382, 387, 474], "rotat": 463, "round": [460, 469], "routin": 471, "row": [460, 468], "rule": [461, 468, 471], "run": [260, 446, 461, 462, 463, 466, 467, 468, 469, 471, 474], "runtim": 467, "runtimeerror": 449, "saga": 474, "sai": 463, "said": 461, "sale": 465, "same": [201, 210, 243, 262, 293, 335, 390, 461, 463, 464, 467, 469, 470, 472], "sampl": [460, 473], "satisf": 472, "satisfi": [19, 67, 109, 308, 460, 462, 463, 468, 472, 473, 474], "save": [142, 458, 460, 462, 463, 468, 474], "save_env_vari": [460, 462, 463, 467, 468], "sawyer": 463, "scale": [461, 474], "scaler": 474, "scenario": [460, 462], "scikit": [473, 474], "scipi": 473, "scope": [262, 456, 468], "score": [460, 461, 462, 463, 474], "scorer": 474, "script": [462, 466, 469], "scroll": 468, "seamlessli": [462, 464], "search": [126, 405, 463, 469], "second": [205, 231, 281, 324, 379, 446, 448, 451, 456, 460, 462, 465, 471], "secret": 470, "section": [463, 467, 469], "see": [26, 74, 79, 116, 122, 142, 460, 462, 467, 468, 469, 471, 472, 473, 474], "seed": [461, 463, 473], "seek": [462, 468], "seem": [460, 462, 463, 467, 468], "seemingli": 468, "seen": 411, "segment": 462, "select": [117, 460, 461, 468, 473], "select_coordin": [460, 468], "select_coordinate0": 468, "selector": 96, "self": [204, 209, 229, 242, 279, 292, 323, 334, 378, 389, 447, 450, 453, 455, 457, 460, 462, 463, 465, 468, 469, 470, 471], "self0": [460, 462], "self1": [460, 462], "self10": 462, "self11": 462, "self12": 462, "self2": 462, "self3": 462, "self4": 462, "self5": 462, "self6": 462, "self7": 462, "self8": 462, "self9": 462, "sell_resourc": 461, "send": [467, 469, 470], "send_messag": 469, "sent": [463, 474], "sentenc": [449, 462], "sep": [250, 300, 342, 397], "separ": 201, "seq": [237, 287, 329, 384], "sequenc": [171, 175, 462, 463, 465, 471], "sequenti": [463, 469], "seri": [463, 469], "serv": [201, 469], "server": 451, "set": [149, 157, 158, 163, 191, 201, 210, 230, 243, 258, 262, 280, 293, 335, 350, 351, 355, 356, 357, 362, 390, 456, 460, 461, 462, 463, 467, 468, 470, 472, 474], "setter": 470, "setup": 468, "seven": 474, "sever": [201, 469], "shape": [351, 354, 357, 361, 474], "share": 469, "ship": [460, 468], "ship_symbol": 460, "short": [142, 467], "shot": [460, 465, 468], "shots_overlay_board": 460, "should": [19, 26, 67, 74, 109, 116, 257, 261, 262, 264, 307, 308, 349, 404, 406, 446, 447, 448, 450, 451, 453, 456, 460, 462, 463, 467, 468, 469, 470, 472, 473, 474], "show": [142, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474], "show_ship": 468, "shown": 468, "shut": 463, "side": 468, "signal": [467, 468], "signatur": [19, 67, 109, 460, 462, 472, 473, 474], "signifi": 463, "signific": 460, "significantli": 460, "similar": [467, 469, 474], "simpel": 471, "simpl": [220, 462, 467, 468, 471, 473, 474], "simple_visu": [215, 266, 310, 365, 421], "simpli": [467, 468, 472], "simplic": 473, "simplifi": [215, 266, 310, 365, 467, 468], "simul": [463, 468, 469, 474], "sinc": [462, 463, 468, 469, 470, 473], "singl": 473, "site": [462, 463, 473], "situat": [460, 468, 469], "six": 474, "size": [4, 460, 468], "skate": 462, "skip": [215, 266, 310, 365], "sklearn": 474, "slate": 260, "slow": 464, "slower": 464, "small": [462, 473, 474], "smallest": 473, "sniffio": 473, "snippet": 468, "so": [308, 461, 462, 463, 465, 467, 468, 471, 473], "soccer": 462, "soi": 465, "solid": [355, 362, 463], "solut": [16, 64, 105, 142, 467], "solv": [26, 74, 116, 460, 462, 463, 469, 472, 473, 474], "solver": 474, "some": [16, 31, 64, 105, 162, 467, 468, 469], "sometim": [142, 463, 473], "somewhat": 463, "sonnet": 458, "soon": 469, "sophist": 460, "sort": [467, 471, 473], "sorted_lst": 467, "sota": 462, "sourc": [4, 5, 7, 10, 26, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 55, 57, 58, 59, 62, 65, 68, 71, 72, 73, 74, 76, 81, 92, 93, 94, 96, 98, 108, 116, 117, 127, 130, 132, 140, 141, 142, 143, 145, 148, 149, 152, 160, 166, 167, 168, 169, 170, 179, 184, 186, 187, 189, 190, 191, 193, 194, 195, 198, 199, 201, 204, 209, 213, 220, 258, 260, 261, 262, 264, 308, 309, 310, 311, 312, 314, 317, 318, 321, 322, 328, 329, 330, 331, 333, 336, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 405, 406, 408, 411, 412, 413, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 449, 451, 452, 456, 458, 460, 462, 465, 472, 473, 474], "space": 463, "sparsiti": 474, "spec": 468, "spec_from_file_loc": 468, "special": [465, 468, 472], "specif": [201, 257, 307, 349, 404, 405, 437, 460, 462, 463, 465, 467, 468, 472, 473, 474], "specifi": [161, 216, 228, 267, 278, 311, 322, 366, 377, 458, 460, 462, 463, 468, 469], "speed": 464, "speical": 474, "split": [205, 231, 262, 281, 324, 379, 462, 463], "sport": 462, "sports_understand": 462, "spot": 460, "squar": [143, 405, 465, 468, 471, 473], "stabl": 462, "standard": [350, 462], "standardscal": 474, "start": [176, 460, 461, 462, 463, 471, 473], "state": [260, 460, 461, 463, 468, 469, 472, 474], "statement": [224, 244, 274, 294, 318, 336, 373, 391, 462, 463, 467, 470], "static": [24, 25, 72, 73, 114, 115], "statu": 463, "std": 460, "stem": 468, "step": [460, 461, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474], "step93": 463, "step94": 463, "step_idx": 441, "step_info": 469, "stepsiz": 471, "sticki": 469, "still": [467, 469], "stockpil": 461, "stone": 461, "stop": [176, 469], "storag": 466, "store": [201, 203, 221, 254, 258, 260, 271, 304, 308, 315, 346, 370, 401, 460, 462, 463, 467, 468, 469], "stove": 469, "str": [9, 11, 17, 23, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 65, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 100, 106, 108, 113, 127, 128, 129, 130, 132, 141, 142, 143, 187, 201, 205, 210, 212, 213, 216, 231, 233, 243, 248, 261, 264, 267, 281, 283, 293, 298, 308, 311, 324, 335, 340, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 366, 379, 390, 395, 405, 406, 437, 451, 456, 460, 461, 462, 463, 467, 468, 470, 472, 473], "str0": 462, "str_rep": 460, "straightforward": [467, 468], "strang": [467, 473], "strange_sort_list": [464, 467, 473], "strateg": [460, 468], "strategi": [460, 463, 468, 469], "streak": 468, "string": [108, 143, 201, 205, 213, 231, 261, 264, 281, 308, 324, 353, 355, 360, 362, 363, 379, 405, 406, 437, 449, 460, 462, 463, 464, 467, 470, 473], "stringent": 468, "strip": [460, 462, 463, 467, 468], "structur": [201, 202, 211, 218, 246, 269, 296, 308, 313, 338, 368, 393, 437, 460, 462, 474], "style": [220, 350, 351, 355, 356, 357, 362, 468, 469], "subclass": [201, 448, 470], "subgraph": 418, "subject": 462, "submarin": [460, 468], "submit": [460, 462, 463, 467, 468], "submit_button": [460, 462, 463, 467, 468], "suboptim": 463, "subscript": [460, 468], "subsequ": [461, 462, 463, 468], "substr": 462, "succe": 463, "success": [463, 467, 468, 472, 474], "successfulli": [257, 307, 349, 404, 463, 468], "suffici": 461, "suffix": 463, "suggest": [11, 17, 19, 59, 65, 67, 100, 106, 109, 460, 462, 463, 468, 472, 473, 474], "suggested_value_1": [19, 67, 109, 460, 462, 472, 473, 474], "suggested_value_2": [19, 67, 109, 460, 462, 472, 473, 474], "suitabl": 463, "sum": [126, 460, 462, 463, 468, 469, 471, 473, 474], "summar": 108, "summari": [10, 20, 58, 68, 99, 108, 110, 464], "sunk": 460, "super": [462, 469, 471], "support": [176, 308, 423, 448, 456, 464, 467, 471], "suppos": [460, 463, 467], "surround": 468, "swiftli": 469, "switch": 464, "symbol": [23, 71, 113], "syntax": [19, 67, 109, 460, 462, 468, 472, 473, 474], "syntaxerror": 468, "synthet": 467, "system": [10, 58, 99, 108, 125, 461, 462, 463, 465, 468], "system_prompt": [9, 57, 98, 108, 132, 461, 462, 465], "t": [142, 437, 460, 462, 463, 467, 468, 469], "tabl": [258, 464, 469], "tactic": 468, "tailor": 462, "take": [215, 266, 310, 365, 405, 446, 448, 449, 451, 456, 461, 462, 463, 465, 467, 468, 469, 474], "taken": [463, 467], "talli": 461, "tape": 465, "target": [460, 462, 463, 467, 468, 472, 473], "task": [26, 74, 116, 460, 462, 463, 468, 469, 472, 473, 474], "task_id": 469, "tell": [468, 473], "temperatur": [98, 108, 461], "temperature_rang": [96, 108], "templat": [449, 462, 470], "ten": 474, "tend": 462, "tensor": 471, "tenth": 474, "termcolor": 473, "termin": [19, 67, 109, 460, 461, 462, 463, 468, 472, 473, 474], "test": [260, 439, 462, 467, 473, 474], "test_accuraci": 462, "test_ground_truth": [467, 473], "test_ground_truth_input": 467, "test_input": [467, 473], "test_output": [467, 473], "test_siz": 474, "text": [11, 23, 59, 71, 100, 113, 142, 143, 439, 447, 449, 450, 453, 460, 462, 463, 464, 467, 468, 469, 473, 474], "textgrad": [437, 440], "textual": [141, 222, 272, 316, 371], "textwrap": 462, "tgd": 141, "than": [204, 209, 229, 242, 262, 279, 292, 323, 334, 378, 389, 460, 461, 462, 464, 468, 470, 472, 474], "thei": [460, 461, 462, 468, 469, 470, 474], "them": [463, 464, 469, 470, 473], "therebi": 468, "therefor": [204, 209, 229, 242, 279, 292, 323, 334, 378, 389, 460, 463, 464, 467, 468, 469, 470, 472, 474], "thi": [16, 64, 105, 142, 164, 199, 201, 202, 203, 204, 205, 209, 210, 211, 213, 215, 218, 221, 229, 231, 239, 242, 243, 246, 260, 261, 262, 264, 266, 269, 271, 279, 281, 289, 292, 293, 296, 308, 310, 313, 315, 323, 324, 331, 334, 335, 338, 363, 365, 368, 370, 378, 379, 386, 389, 390, 393, 437, 446, 448, 449, 451, 456, 458, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474], "thing": [26, 74, 116, 141, 460, 462, 472, 473, 474], "think": [461, 467], "third": 462, "those": [26, 74, 116, 225, 275, 319, 374, 460, 462, 463, 472, 473, 474], "though": [463, 467, 468], "thought": 469, "threadpoolctl": 473, "three": [460, 461, 463, 464, 467, 469, 474], "through": [26, 74, 116, 215, 266, 308, 310, 365, 456, 460, 461, 462, 463, 468, 469, 471, 472, 473, 474], "throughout": 463, "thrown": 472, "thu": [460, 463, 468, 473], "tial": 468, "tiktoken": 473, "till": 467, "time": [210, 243, 293, 335, 390, 462, 463, 464, 469, 473], "titl": 463, "todai": 449, "togeth": [463, 469], "toi": [469, 473], "token": [108, 142, 456], "tol": 474, "too": [463, 467], "tool": [353, 360, 465], "top": 469, "topolog": 471, "torch": 471, "total": [461, 469], "toward": [462, 463, 468, 469], "tqdm": [462, 473], "tqdmwarn": 462, "trace": [38, 143, 448, 460, 461, 464, 466, 469, 470, 472, 473, 474], "trace_fun": 470, "trace_graph": 471, "trace_litellm_model": 456, "trace_nod": [203, 221, 271, 315, 370], "traceabl": 470, "tracedenv": 463, "tracegraph": [93, 412], "track": 308, "trade": 461, "train": [462, 467, 469, 474], "train_classifi": 474, "train_sampl": 474, "train_set": 462, "train_siz": 474, "train_test_split": 474, "trainabl": [30, 45, 78, 121, 138, 160, 169, 179, 197, 201, 213, 264, 308, 355, 362, 363, 406, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "traj": 463, "transcript": 461, "transform": [468, 474], "transit": [463, 469], "translat": 463, "transpar": 471, "transport": 463, "travers": [202, 211, 218, 246, 269, 296, 313, 338, 368, 393], "treat": 460, "tri": [463, 467], "trial": 468, "trigger": 472, "trivial": 474, "true": [55, 201, 203, 204, 206, 207, 209, 215, 221, 229, 234, 235, 242, 259, 266, 271, 279, 284, 285, 292, 310, 315, 323, 326, 327, 334, 363, 365, 370, 378, 381, 382, 389, 406, 421, 451, 456, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "true_fun": 473, "true_func": 149, "truncat": [353, 360, 463], "truth": [462, 467], "try": [460, 462, 463, 465, 467, 468, 469, 470, 472, 473, 474], "tupl": [48, 50, 149, 162, 170, 191, 416, 419, 460, 467, 470], "turn": [461, 468, 471, 474], "tutori": [460, 463, 467, 468, 469, 471], "tweak": 462, "two": [201, 204, 209, 229, 242, 279, 292, 323, 334, 378, 389, 437, 460, 461, 467, 468, 469, 470, 471, 474], "type": [11, 19, 26, 59, 67, 74, 100, 108, 109, 116, 117, 125, 126, 141, 142, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 221, 223, 224, 228, 229, 231, 233, 234, 235, 239, 240, 242, 243, 244, 246, 248, 258, 261, 263, 266, 267, 269, 270, 271, 273, 274, 278, 279, 281, 283, 284, 285, 289, 290, 292, 293, 294, 296, 298, 308, 310, 311, 313, 314, 315, 317, 318, 322, 323, 324, 326, 327, 331, 332, 334, 335, 336, 338, 340, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 372, 373, 377, 378, 379, 381, 382, 386, 387, 389, 390, 391, 393, 395, 405, 406, 437, 460, 461, 462, 463, 472, 473, 474], "typic": [465, 468], "typo": 463, "u": [465, 467], "un": 467, "unabl": 466, "unchang": 463, "uncheck": 469, "unclear": 462, "undefin": 463, "under": [460, 462, 463, 467, 469], "underfit": 474, "underli": [406, 468], "understand": [16, 64, 105, 467, 473], "unexpect": 468, "unexplor": 469, "unfortun": 469, "unhelp": 462, "uniform": 463, "uniformli": 463, "unify_and_match_act": 469, "unintend": [257, 307, 349, 404], "union": [233, 283, 308], "unit": [260, 467], "uniti": 469, "unknown": [460, 468], "unless": 467, "unnecessari": 469, "unpack": 470, "unwrap": 463, "up": [12, 258, 461, 462, 463, 467, 468, 469, 473], "updat": [27, 34, 36, 43, 75, 118, 136, 141, 148, 201, 215, 266, 310, 365, 406, 460, 462, 463, 464, 465, 467, 468, 469, 471, 473], "update_dict": [30, 45, 78, 121, 138], "upon": 463, "url": 468, "urllib": 468, "urllib3": 473, "urlretriev": 468, "us": [21, 26, 35, 41, 48, 67, 69, 74, 109, 111, 116, 125, 134, 142, 159, 168, 178, 196, 201, 204, 205, 209, 211, 215, 224, 229, 231, 242, 244, 246, 257, 258, 262, 264, 266, 274, 279, 281, 292, 294, 296, 307, 310, 318, 323, 324, 334, 336, 338, 349, 350, 352, 353, 354, 356, 358, 359, 360, 361, 365, 373, 378, 379, 389, 391, 393, 404, 405, 416, 423, 437, 446, 448, 449, 456, 460, 462, 464, 465, 466, 469, 471, 472, 473, 474], "usag": [437, 440, 468], "used_nod": [203, 221, 271, 315, 370], "user": [10, 58, 99, 108, 448, 455, 457, 460, 461, 462, 464, 465, 467, 468, 474], "user_fb_for_placing_shot": [460, 468], "user_feedback": [48, 416, 471, 474], "user_instal": 462, "user_nam": 465, "user_prompt": [9, 57, 98, 108, 132, 462], "user_queri": 465, "userwarn": 463, "usual": [462, 465], "util": [462, 463, 467, 468, 470, 474], "v": [161, 162, 164, 463, 468, 471, 474], "v1": 463, "v2": 463, "vagu": [463, 474], "val": 470, "valid": [261, 449, 460, 461, 462, 463, 464, 467, 468, 474], "valu": [19, 26, 60, 67, 74, 101, 109, 116, 141, 142, 152, 155, 161, 162, 171, 174, 176, 177, 181, 201, 213, 224, 225, 239, 244, 245, 261, 264, 274, 275, 289, 294, 295, 308, 318, 319, 331, 336, 337, 363, 373, 374, 386, 391, 392, 414, 425, 428, 432, 437, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 474], "value_scal": 461, "valueerror": [176, 181, 405, 472], "vanilla": 471, "vari": [463, 468], "variabl": [12, 13, 19, 26, 31, 60, 61, 67, 74, 81, 90, 93, 101, 102, 109, 116, 141, 142, 262, 456, 460, 461, 462, 463, 465, 467, 468, 471, 472, 473, 474], "variable_1": [19, 67, 109, 460, 462, 472, 473, 474], "variable_2": [19, 67, 109, 460, 462, 472, 473, 474], "variable_desc": 125, "variable_nam": [26, 74, 116, 460, 462, 472, 473, 474], "variou": [211, 246, 296, 338, 393, 458, 463, 468], "ve": [463, 468], "vector": 463, "verb": 462, "verbos": [9, 57, 98, 108, 132, 460, 461, 462, 463, 468, 469, 472, 473, 474], "veri": [142, 464, 467, 469], "verifier_optim": 467, "verifier_pass": 467, "version": [142, 201, 449, 460, 463, 466, 468, 474], "via": [456, 464, 469, 474], "viabl": 460, "video": 469, "view": [157, 158, 165, 469], "virtual": 469, "virtualhomeenv": 469, "visibl": [225, 230, 275, 280, 308, 319, 374], "visual": [215, 266, 310, 350, 351, 353, 356, 357, 360, 365, 461, 467, 471, 474], "visualize_board": 460, "visualize_own_board": 460, "visualize_shot": 460, "vv": 474, "wa": [460, 462, 463, 464, 468, 473], "wai": [350, 461, 468, 470, 471, 472, 473, 474], "walk": [461, 462, 469], "walktoward": 469, "want": [142, 458, 466, 470, 474], "warn": [406, 463], "watch": 467, "watson": 462, "we": [125, 126, 142, 239, 289, 331, 386, 449, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474], "well": [462, 463, 467], "were": [463, 468, 469], "what": [67, 109, 437, 460, 462, 471, 472, 473, 474], "when": [67, 109, 142, 210, 243, 264, 293, 335, 390, 447, 449, 450, 453, 456, 460, 461, 462, 463, 465, 467, 468, 469, 470, 472, 473, 474], "where": [201, 261, 414, 425, 428, 432, 460, 462, 463, 465, 467, 468, 469, 470, 473], "whether": [108, 141, 201, 213, 264, 308, 363, 406, 449, 462, 463, 464, 467, 468, 469], "which": [26, 74, 116, 193, 201, 205, 231, 258, 281, 324, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 379, 446, 448, 451, 456, 460, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474], "while": [354, 361, 460, 461, 462, 463, 467, 468, 469, 470, 471, 473, 474], "whitespac": 468, "who": [225, 275, 319, 374, 462], "whose": [470, 474], "why": 467, "widget": [460, 462, 463, 467, 468], "width": [357, 460], "wikipedia": 465, "wine": 469, "within": [201, 203, 221, 257, 261, 271, 307, 315, 349, 370, 404, 418, 463, 467, 468, 470, 471], "without": [19, 67, 109, 201, 460, 462, 463, 467, 468, 469, 472, 473, 474], "wolfram": 465, "wonder": 467, "wood": 461, "word": [142, 462], "work": [26, 74, 116, 460, 462, 463, 467, 469, 470, 472, 473, 474], "workflow": [462, 464, 465, 467, 471], "world": [469, 470], "would": [439, 460, 461, 468, 470, 471, 474], "wouldn": 468, "wow": 467, "wrap": [199, 216, 267, 311, 366, 462, 464, 465, 467, 468, 470], "wrapped_dict": 189, "wrapped_list": 190, "wrapper": [448, 463, 468, 472], "write": [19, 67, 109, 460, 462, 464, 465, 467, 468, 471, 472, 473, 474], "written": [462, 465, 474], "wrong": [462, 467], "wrote": 467, "x": [191, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 408, 460, 463, 467, 468, 470, 471, 473, 474], "x0": 439, "x1": 439, "x2": 439, "x3": 439, "x_clone": 470, "x_detach": 470, "x_plus_i": 470, "x_train": 474, "x_valid": 474, "xgboost": 473, "xlabel": [463, 473], "xxx": 458, "xy": 470, "y": [460, 463, 467, 470, 471, 473, 474], "y2": 470, "y_hat": 473, "y_train": 474, "y_valid": 474, "ye": [449, 462, 467], "yes_or_no_choic": 449, "yes_or_no_filt": 449, "yield": [469, 474], "ylabel": [463, 473], "you": [16, 19, 26, 60, 64, 67, 74, 79, 101, 105, 109, 116, 122, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474], "your": [19, 67, 109, 458, 460, 461, 462, 463, 467, 468, 469, 472, 473, 474], "z": [462, 463, 470], "z2": 470, "zero": [257, 307, 349, 404, 460, 463, 470, 474], "zero_feedback": [460, 461, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474], "zip": [470, 471, 473], "zou": 125}, "titles": ["&lt;no title&gt;", "opto", "opto.optimizers", "opto.optimizers.buffers", "opto.optimizers.buffers.FIFOBuffer", "opto.optimizers.buffers.FIFOBuffer.add", "opto.optimizers.opro", "opto.optimizers.opro.OPRO", "opto.optimizers.opro.OPRO.backward", "opto.optimizers.opro.OPRO.call_llm", "opto.optimizers.opro.OPRO.construct_prompt", "opto.optimizers.opro.OPRO.construct_update_dict", "opto.optimizers.opro.OPRO.default_objective", "opto.optimizers.opro.OPRO.default_prompt_symbols", "opto.optimizers.opro.OPRO.default_propagator", "opto.optimizers.opro.OPRO.example_problem_template", "opto.optimizers.opro.OPRO.example_prompt", "opto.optimizers.opro.OPRO.extract_llm_suggestion", "opto.optimizers.opro.OPRO.final_prompt", "opto.optimizers.opro.OPRO.output_format_prompt", "opto.optimizers.opro.OPRO.problem_instance", "opto.optimizers.opro.OPRO.propagator", "opto.optimizers.opro.OPRO.propose", "opto.optimizers.opro.OPRO.replace_symbols", "opto.optimizers.opro.OPRO.repr_node_constraint", "opto.optimizers.opro.OPRO.repr_node_value", "opto.optimizers.opro.OPRO.representation_prompt", "opto.optimizers.opro.OPRO.step", "opto.optimizers.opro.OPRO.summarize", "opto.optimizers.opro.OPRO.trace_graph", "opto.optimizers.opro.OPRO.update", "opto.optimizers.opro.OPRO.user_prompt_template", "opto.optimizers.opro.OPRO.zero_feedback", "opto.optimizers.optimizer", "opto.optimizers.optimizer.AbstractOptimizer", "opto.optimizers.optimizer.AbstractOptimizer.propagator", "opto.optimizers.optimizer.AbstractOptimizer.step", "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", "opto.optimizers.optimizer.Optimizer", "opto.optimizers.optimizer.Optimizer.backward", "opto.optimizers.optimizer.Optimizer.default_propagator", "opto.optimizers.optimizer.Optimizer.propagator", "opto.optimizers.optimizer.Optimizer.propose", "opto.optimizers.optimizer.Optimizer.step", "opto.optimizers.optimizer.Optimizer.trace_graph", "opto.optimizers.optimizer.Optimizer.update", "opto.optimizers.optimizer.Optimizer.zero_feedback", "opto.optimizers.optoprime", "opto.optimizers.optoprime.FunctionFeedback", "opto.optimizers.optoprime.FunctionFeedback.documentation", "opto.optimizers.optoprime.FunctionFeedback.graph", "opto.optimizers.optoprime.FunctionFeedback.others", "opto.optimizers.optoprime.FunctionFeedback.output", "opto.optimizers.optoprime.FunctionFeedback.roots", "opto.optimizers.optoprime.FunctionFeedback.user_feedback", "opto.optimizers.optoprime.OptoPrime", "opto.optimizers.optoprime.OptoPrime.backward", "opto.optimizers.optoprime.OptoPrime.call_llm", "opto.optimizers.optoprime.OptoPrime.construct_prompt", "opto.optimizers.optoprime.OptoPrime.construct_update_dict", "opto.optimizers.optoprime.OptoPrime.default_objective", "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", "opto.optimizers.optoprime.OptoPrime.default_propagator", "opto.optimizers.optoprime.OptoPrime.example_problem_template", "opto.optimizers.optoprime.OptoPrime.example_prompt", "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", "opto.optimizers.optoprime.OptoPrime.final_prompt", "opto.optimizers.optoprime.OptoPrime.output_format_prompt", "opto.optimizers.optoprime.OptoPrime.problem_instance", "opto.optimizers.optoprime.OptoPrime.propagator", "opto.optimizers.optoprime.OptoPrime.propose", "opto.optimizers.optoprime.OptoPrime.replace_symbols", "opto.optimizers.optoprime.OptoPrime.repr_node_constraint", "opto.optimizers.optoprime.OptoPrime.repr_node_value", "opto.optimizers.optoprime.OptoPrime.representation_prompt", "opto.optimizers.optoprime.OptoPrime.step", "opto.optimizers.optoprime.OptoPrime.summarize", "opto.optimizers.optoprime.OptoPrime.trace_graph", "opto.optimizers.optoprime.OptoPrime.update", "opto.optimizers.optoprime.OptoPrime.user_prompt_template", "opto.optimizers.optoprime.OptoPrime.zero_feedback", "opto.optimizers.optoprime.ProblemInstance", "opto.optimizers.optoprime.ProblemInstance.code", "opto.optimizers.optoprime.ProblemInstance.constraints", "opto.optimizers.optoprime.ProblemInstance.documentation", "opto.optimizers.optoprime.ProblemInstance.feedback", "opto.optimizers.optoprime.ProblemInstance.inputs", "opto.optimizers.optoprime.ProblemInstance.instruction", "opto.optimizers.optoprime.ProblemInstance.others", "opto.optimizers.optoprime.ProblemInstance.outputs", "opto.optimizers.optoprime.ProblemInstance.problem_template", "opto.optimizers.optoprime.ProblemInstance.variables", "opto.optimizers.optoprime.get_fun_name", "opto.optimizers.optoprime.node_to_function_feedback", "opto.optimizers.optoprime.repr_function_call", "opto.optimizers.optoprimemulti", "opto.optimizers.optoprimemulti.OptoPrimeMulti", "opto.optimizers.optoprimemulti.OptoPrimeMulti.backward", "opto.optimizers.optoprimemulti.OptoPrimeMulti.call_llm", "opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_prompt", "opto.optimizers.optoprimemulti.OptoPrimeMulti.construct_update_dict", "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_objective", "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_prompt_symbols", "opto.optimizers.optoprimemulti.OptoPrimeMulti.default_propagator", "opto.optimizers.optoprimemulti.OptoPrimeMulti.example_problem_template", "opto.optimizers.optoprimemulti.OptoPrimeMulti.example_prompt", "opto.optimizers.optoprimemulti.OptoPrimeMulti.extract_llm_suggestion", "opto.optimizers.optoprimemulti.OptoPrimeMulti.final_prompt", "opto.optimizers.optoprimemulti.OptoPrimeMulti.generate_candidates", "opto.optimizers.optoprimemulti.OptoPrimeMulti.output_format_prompt", "opto.optimizers.optoprimemulti.OptoPrimeMulti.problem_instance", "opto.optimizers.optoprimemulti.OptoPrimeMulti.propagator", "opto.optimizers.optoprimemulti.OptoPrimeMulti.propose", "opto.optimizers.optoprimemulti.OptoPrimeMulti.replace_symbols", "opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_constraint", "opto.optimizers.optoprimemulti.OptoPrimeMulti.repr_node_value", "opto.optimizers.optoprimemulti.OptoPrimeMulti.representation_prompt", "opto.optimizers.optoprimemulti.OptoPrimeMulti.select_candidate", "opto.optimizers.optoprimemulti.OptoPrimeMulti.step", "opto.optimizers.optoprimemulti.OptoPrimeMulti.summarize", "opto.optimizers.optoprimemulti.OptoPrimeMulti.trace_graph", "opto.optimizers.optoprimemulti.OptoPrimeMulti.update", "opto.optimizers.optoprimemulti.OptoPrimeMulti.user_prompt_template", "opto.optimizers.optoprimemulti.OptoPrimeMulti.zero_feedback", "opto.optimizers.textgrad", "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", "opto.optimizers.textgrad.GradientInfo", "opto.optimizers.textgrad.GradientInfo.gradient", "opto.optimizers.textgrad.GradientInfo.gradient_context", "opto.optimizers.textgrad.TextGrad", "opto.optimizers.textgrad.TextGrad.backward", "opto.optimizers.textgrad.TextGrad.call_llm", "opto.optimizers.textgrad.TextGrad.default_propagator", "opto.optimizers.textgrad.TextGrad.propagator", "opto.optimizers.textgrad.TextGrad.propose", "opto.optimizers.textgrad.TextGrad.step", "opto.optimizers.textgrad.TextGrad.trace_graph", "opto.optimizers.textgrad.TextGrad.update", "opto.optimizers.textgrad.TextGrad.zero_feedback", "opto.optimizers.textgrad.construct_reduce_prompt", "opto.optimizers.textgrad.construct_tgd_prompt", "opto.optimizers.textgrad.get_short_value", "opto.optimizers.textgrad.rm_node_attrs", "opto.optimizers.utils", "opto.optimizers.utils.print_color", "opto.trace", "opto.trace.broadcast", "opto.trace.broadcast.apply_op", "opto.trace.broadcast.recursive_conversion", "opto.trace.bundle", "opto.trace.containers", "opto.trace.containers.Map", "opto.trace.containers.Map.clear", "opto.trace.containers.Map.copy", "opto.trace.containers.Map.fromkeys", "opto.trace.containers.Map.get", "opto.trace.containers.Map.items", "opto.trace.containers.Map.keys", "opto.trace.containers.Map.parameters", "opto.trace.containers.Map.parameters_dict", "opto.trace.containers.Map.pop", "opto.trace.containers.Map.popitem", "opto.trace.containers.Map.setdefault", "opto.trace.containers.Map.update", "opto.trace.containers.Map.values", "opto.trace.containers.NodeContainer", "opto.trace.containers.ParameterContainer", "opto.trace.containers.ParameterContainer.parameters", "opto.trace.containers.ParameterContainer.parameters_dict", "opto.trace.containers.Seq", "opto.trace.containers.Seq.append", "opto.trace.containers.Seq.clear", "opto.trace.containers.Seq.copy", "opto.trace.containers.Seq.count", "opto.trace.containers.Seq.extend", "opto.trace.containers.Seq.index", "opto.trace.containers.Seq.insert", "opto.trace.containers.Seq.parameters", "opto.trace.containers.Seq.parameters_dict", "opto.trace.containers.Seq.pop", "opto.trace.containers.Seq.remove", "opto.trace.containers.Seq.reverse", "opto.trace.containers.Seq.sort", "opto.trace.containers.trainable_method", "opto.trace.errors", "opto.trace.errors.ExecutionError", "opto.trace.errors.TraceMissingInputsError", "opto.trace.iterators", "opto.trace.iterators.DictIterable", "opto.trace.iterators.SeqIterable", "opto.trace.iterators.iterate", "opto.trace.modules", "opto.trace.modules.Module", "opto.trace.modules.Module.forward", "opto.trace.modules.Module.load", "opto.trace.modules.Module.parameters", "opto.trace.modules.Module.parameters_dict", "opto.trace.modules.Module.save", "opto.trace.modules.model", "opto.trace.nodes", "opto.trace.nodes.AbstractNode", "opto.trace.nodes.AbstractNode.children", "opto.trace.nodes.AbstractNode.data", "opto.trace.nodes.AbstractNode.gt", "opto.trace.nodes.AbstractNode.id", "opto.trace.nodes.AbstractNode.is_leaf", "opto.trace.nodes.AbstractNode.is_root", "opto.trace.nodes.AbstractNode.level", "opto.trace.nodes.AbstractNode.lt", "opto.trace.nodes.AbstractNode.name", "opto.trace.nodes.AbstractNode.parents", "opto.trace.nodes.AbstractNode.py_name", "opto.trace.nodes.ExceptionNode", "opto.trace.nodes.ExceptionNode.append", "opto.trace.nodes.ExceptionNode.backward", "opto.trace.nodes.ExceptionNode.call", "opto.trace.nodes.ExceptionNode.capitalize", "opto.trace.nodes.ExceptionNode.children", "opto.trace.nodes.ExceptionNode.clone", "opto.trace.nodes.ExceptionNode.create_feedback", "opto.trace.nodes.ExceptionNode.data", "opto.trace.nodes.ExceptionNode.description", "opto.trace.nodes.ExceptionNode.detach", "opto.trace.nodes.ExceptionNode.eq", "opto.trace.nodes.ExceptionNode.expandable_dependencies", "opto.trace.nodes.ExceptionNode.feedback", "opto.trace.nodes.ExceptionNode.format", "opto.trace.nodes.ExceptionNode.getattr", "opto.trace.nodes.ExceptionNode.gt", "opto.trace.nodes.ExceptionNode.hidden_dependencies", "opto.trace.nodes.ExceptionNode.id", "opto.trace.nodes.ExceptionNode.info", "opto.trace.nodes.ExceptionNode.inputs", "opto.trace.nodes.ExceptionNode.is_leaf", "opto.trace.nodes.ExceptionNode.is_root", "opto.trace.nodes.ExceptionNode.items", "opto.trace.nodes.ExceptionNode.join", "opto.trace.nodes.ExceptionNode.keys", "opto.trace.nodes.ExceptionNode.len", "opto.trace.nodes.ExceptionNode.level", "opto.trace.nodes.ExceptionNode.lower", "opto.trace.nodes.ExceptionNode.lt", "opto.trace.nodes.ExceptionNode.name", "opto.trace.nodes.ExceptionNode.neq", "opto.trace.nodes.ExceptionNode.parameter_dependencies", "opto.trace.nodes.ExceptionNode.parents", "opto.trace.nodes.ExceptionNode.pop", "opto.trace.nodes.ExceptionNode.py_name", "opto.trace.nodes.ExceptionNode.replace", "opto.trace.nodes.ExceptionNode.split", "opto.trace.nodes.ExceptionNode.strip", "opto.trace.nodes.ExceptionNode.swapcase", "opto.trace.nodes.ExceptionNode.title", "opto.trace.nodes.ExceptionNode.type", "opto.trace.nodes.ExceptionNode.upper", "opto.trace.nodes.ExceptionNode.values", "opto.trace.nodes.ExceptionNode.zero_feedback", "opto.trace.nodes.Graph", "opto.trace.nodes.Graph.TRACE", "opto.trace.nodes.Graph.clear", "opto.trace.nodes.Graph.get", "opto.trace.nodes.Graph.register", "opto.trace.nodes.Graph.roots", "opto.trace.nodes.MessageNode", "opto.trace.nodes.MessageNode.append", "opto.trace.nodes.MessageNode.backward", "opto.trace.nodes.MessageNode.call", "opto.trace.nodes.MessageNode.capitalize", "opto.trace.nodes.MessageNode.children", "opto.trace.nodes.MessageNode.clone", "opto.trace.nodes.MessageNode.data", "opto.trace.nodes.MessageNode.description", "opto.trace.nodes.MessageNode.detach", "opto.trace.nodes.MessageNode.eq", "opto.trace.nodes.MessageNode.expandable_dependencies", "opto.trace.nodes.MessageNode.feedback", "opto.trace.nodes.MessageNode.format", "opto.trace.nodes.MessageNode.getattr", "opto.trace.nodes.MessageNode.gt", "opto.trace.nodes.MessageNode.hidden_dependencies", "opto.trace.nodes.MessageNode.id", "opto.trace.nodes.MessageNode.info", "opto.trace.nodes.MessageNode.inputs", "opto.trace.nodes.MessageNode.is_leaf", "opto.trace.nodes.MessageNode.is_root", "opto.trace.nodes.MessageNode.items", "opto.trace.nodes.MessageNode.join", "opto.trace.nodes.MessageNode.keys", "opto.trace.nodes.MessageNode.len", "opto.trace.nodes.MessageNode.level", "opto.trace.nodes.MessageNode.lower", "opto.trace.nodes.MessageNode.lt", "opto.trace.nodes.MessageNode.name", "opto.trace.nodes.MessageNode.neq", "opto.trace.nodes.MessageNode.parameter_dependencies", "opto.trace.nodes.MessageNode.parents", "opto.trace.nodes.MessageNode.pop", "opto.trace.nodes.MessageNode.py_name", "opto.trace.nodes.MessageNode.replace", "opto.trace.nodes.MessageNode.split", "opto.trace.nodes.MessageNode.strip", "opto.trace.nodes.MessageNode.swapcase", "opto.trace.nodes.MessageNode.title", "opto.trace.nodes.MessageNode.type", "opto.trace.nodes.MessageNode.upper", "opto.trace.nodes.MessageNode.values", "opto.trace.nodes.MessageNode.zero_feedback", "opto.trace.nodes.Node", "opto.trace.nodes.Node.append", "opto.trace.nodes.Node.backward", "opto.trace.nodes.Node.call", "opto.trace.nodes.Node.capitalize", "opto.trace.nodes.Node.children", "opto.trace.nodes.Node.clone", "opto.trace.nodes.Node.data", "opto.trace.nodes.Node.description", "opto.trace.nodes.Node.detach", "opto.trace.nodes.Node.eq", "opto.trace.nodes.Node.expandable_dependencies", "opto.trace.nodes.Node.feedback", "opto.trace.nodes.Node.format", "opto.trace.nodes.Node.getattr", "opto.trace.nodes.Node.gt", "opto.trace.nodes.Node.id", "opto.trace.nodes.Node.info", "opto.trace.nodes.Node.is_leaf", "opto.trace.nodes.Node.is_root", "opto.trace.nodes.Node.items", "opto.trace.nodes.Node.join", "opto.trace.nodes.Node.keys", "opto.trace.nodes.Node.len", "opto.trace.nodes.Node.level", "opto.trace.nodes.Node.lower", "opto.trace.nodes.Node.lt", "opto.trace.nodes.Node.name", "opto.trace.nodes.Node.neq", "opto.trace.nodes.Node.parameter_dependencies", "opto.trace.nodes.Node.parents", "opto.trace.nodes.Node.pop", "opto.trace.nodes.Node.py_name", "opto.trace.nodes.Node.replace", "opto.trace.nodes.Node.split", "opto.trace.nodes.Node.strip", "opto.trace.nodes.Node.swapcase", "opto.trace.nodes.Node.title", "opto.trace.nodes.Node.type", "opto.trace.nodes.Node.upper", "opto.trace.nodes.Node.values", "opto.trace.nodes.Node.zero_feedback", "opto.trace.nodes.NodeVizStyleGuide", "opto.trace.nodes.NodeVizStyleGuide.get_attrs", "opto.trace.nodes.NodeVizStyleGuide.get_color", "opto.trace.nodes.NodeVizStyleGuide.get_label", "opto.trace.nodes.NodeVizStyleGuide.get_node_shape", "opto.trace.nodes.NodeVizStyleGuide.get_style", "opto.trace.nodes.NodeVizStyleGuideColorful", "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", "opto.trace.nodes.NodeVizStyleGuideColorful.get_color", "opto.trace.nodes.NodeVizStyleGuideColorful.get_label", "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", "opto.trace.nodes.NodeVizStyleGuideColorful.get_style", "opto.trace.nodes.ParameterNode", "opto.trace.nodes.ParameterNode.append", "opto.trace.nodes.ParameterNode.backward", "opto.trace.nodes.ParameterNode.call", "opto.trace.nodes.ParameterNode.capitalize", "opto.trace.nodes.ParameterNode.children", "opto.trace.nodes.ParameterNode.clone", "opto.trace.nodes.ParameterNode.data", "opto.trace.nodes.ParameterNode.description", "opto.trace.nodes.ParameterNode.detach", "opto.trace.nodes.ParameterNode.eq", "opto.trace.nodes.ParameterNode.expandable_dependencies", "opto.trace.nodes.ParameterNode.feedback", "opto.trace.nodes.ParameterNode.format", "opto.trace.nodes.ParameterNode.getattr", "opto.trace.nodes.ParameterNode.gt", "opto.trace.nodes.ParameterNode.id", "opto.trace.nodes.ParameterNode.info", "opto.trace.nodes.ParameterNode.is_leaf", "opto.trace.nodes.ParameterNode.is_root", "opto.trace.nodes.ParameterNode.items", "opto.trace.nodes.ParameterNode.join", "opto.trace.nodes.ParameterNode.keys", "opto.trace.nodes.ParameterNode.len", "opto.trace.nodes.ParameterNode.level", "opto.trace.nodes.ParameterNode.lower", "opto.trace.nodes.ParameterNode.lt", "opto.trace.nodes.ParameterNode.name", "opto.trace.nodes.ParameterNode.neq", "opto.trace.nodes.ParameterNode.parameter_dependencies", "opto.trace.nodes.ParameterNode.parents", "opto.trace.nodes.ParameterNode.pop", "opto.trace.nodes.ParameterNode.py_name", "opto.trace.nodes.ParameterNode.replace", "opto.trace.nodes.ParameterNode.split", "opto.trace.nodes.ParameterNode.strip", "opto.trace.nodes.ParameterNode.swapcase", "opto.trace.nodes.ParameterNode.title", "opto.trace.nodes.ParameterNode.type", "opto.trace.nodes.ParameterNode.upper", "opto.trace.nodes.ParameterNode.values", "opto.trace.nodes.ParameterNode.zero_feedback", "opto.trace.nodes.get_op_name", "opto.trace.nodes.node", "opto.trace.operators", "opto.trace.operators.identity", "opto.trace.propagators", "opto.trace.propagators.graph_propagator", "opto.trace.propagators.graph_propagator.GraphPropagator", "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", "opto.trace.propagators.graph_propagator.GraphPropagator.propagate", "opto.trace.propagators.graph_propagator.GraphPropagator.register", "opto.trace.propagators.graph_propagator.TraceGraph", "opto.trace.propagators.graph_propagator.TraceGraph.empty", "opto.trace.propagators.graph_propagator.TraceGraph.expand", "opto.trace.propagators.graph_propagator.TraceGraph.graph", "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", "opto.trace.propagators.graph_propagator.TraceGraph.visualize", "opto.trace.propagators.propagators", "opto.trace.propagators.propagators.AbstractFeedback", "opto.trace.propagators.propagators.AbstractPropagator", "opto.trace.propagators.propagators.AbstractPropagator.propagate", "opto.trace.propagators.propagators.Propagator", "opto.trace.propagators.propagators.Propagator.init_feedback", "opto.trace.propagators.propagators.Propagator.propagate", "opto.trace.propagators.propagators.Propagator.register", "opto.trace.propagators.propagators.SumPropagator", "opto.trace.propagators.propagators.SumPropagator.init_feedback", "opto.trace.propagators.propagators.SumPropagator.propagate", "opto.trace.propagators.propagators.SumPropagator.register", "opto.trace.stop_tracing", "opto.trace.utils", "opto.trace.utils.contain", "opto.trace.utils.escape_json_nested_quotes", "opto.trace.utils.for_all_methods", "opto.trace.utils.parse_eqs_to_dict", "opto.trace.utils.remove_non_ascii", "opto.trace.utils.render_opt_step", "opto.trace.utils.sum_feedback", "opto.trace.utils.test_json_quote_escaper", "opto.utils", "opto.utils.llm", "opto.utils.llm.AbstractModel", "opto.utils.llm.AbstractModel.model", "opto.utils.llm.AutoGenLLM", "opto.utils.llm.AutoGenLLM.create", "opto.utils.llm.AutoGenLLM.model", "opto.utils.llm.CustomLLM", "opto.utils.llm.CustomLLM.create", "opto.utils.llm.CustomLLM.model", "opto.utils.llm.LLM", "opto.utils.llm.LLM.model", "opto.utils.llm.LiteLLM", "opto.utils.llm.LiteLLM.model", "opto.utils.llm.auto_construct_oai_config_list_from_env", "opto.version", "Single Agent: Battleship", "Multi-Agent: Negotiation Arena", "BigBench-Hard", "Meta-World", "FAQ", "\ud83c\udfaf Trace", "\ud83c\udf10  Installation", "\u26a1\ufe0f First: 5-Minute Basics", "\ud83d\ude80 Next: Adaptive Agent", "\ud83e\udd2f Finally: Emergent Behaviors", "Basics", "Building Custom Optimizer", "Error Handling", "Batch Optimization", "Optimization"], "titleterms": {"": [467, 469], "1": 471, "2": 471, "5": 467, "A": 468, "The": [467, 468], "abstractfeedback": 423, "abstractmodel": [446, 447], "abstractnod": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "abstractoptim": [34, 35, 36, 37], "abstractpropag": [424, 425], "action": 468, "ad": 474, "adapt": 468, "add": 5, "ag2": 464, "agent": [460, 461, 468, 469], "aggreg": 412, "all": [460, 462], "an": 468, "append": [171, 214, 265, 309, 364], "apply_op": 148, "architectur": 469, "arena": 461, "auto_construct_oai_config_list_from_env": 458, "autogen": 464, "autogenllm": [448, 449, 450], "back": 471, "backpropag": 474, "backward": [8, 39, 56, 97, 131, 215, 266, 310, 365], "base": 471, "basic": [467, 470, 471], "batch": 473, "battleship": [460, 468], "battleshipboard": 460, "behavior": 469, "bigbench": 462, "broadcast": [147, 148, 149, 470], "buffer": [3, 4, 5], "build": 471, "bundl": [150, 461, 470], "call": [216, 267, 311, 366], "call_llm": [9, 57, 98, 132], "capit": [217, 268, 312, 367], "chat": 461, "children": [202, 218, 269, 313, 368], "class": [460, 462], "clear": [153, 172, 260], "clone": [219, 270, 314, 369], "code": 82, "coder": 467, "command": 466, "commut": 473, "compon": 461, "constraint": [83, 474], "construct_prompt": [10, 58, 99], "construct_reduce_prompt": 140, "construct_tgd_prompt": 141, "construct_update_dict": [11, 59, 100], "contain": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 436], "copi": [154, 173], "count": 174, "creat": [449, 452, 460], "create_feedback": 220, "custom": [470, 471], "customllm": [451, 452, 453], "data": [203, 221, 271, 315, 370, 470], "default_object": [12, 60, 101], "default_prompt_symbol": [13, 61, 102], "default_propag": [14, 40, 62, 103, 133], "defin": [460, 461, 462, 468], "descent": 471, "descript": [222, 272, 316, 371], "detach": [223, 273, 317, 372], "develop": 466, "dictiter": 189, "did": 468, "differ": 464, "document": [49, 84], "emerg": 469, "empti": 417, "end_gam": 461, "environ": [460, 463], "eq": [224, 274, 318, 373], "error": [185, 186, 187, 472], "escape_json_nested_quot": 437, "evalu": [460, 462], "exampl": 474, "example_problem_templ": [15, 63, 104], "example_prompt": [16, 64, 105], "exceptionnod": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "execut": 463, "executionerror": 186, "expand": 418, "expandable_depend": [225, 275, 319, 374], "extend": 175, "extract_llm_suggest": [17, 65, 106], "faq": 464, "feedback": [85, 226, 276, 320, 375, 467, 473], "fifobuff": [4, 5], "final": 469, "final_prompt": [18, 66, 107], "first": 467, "for_all_method": 438, "format": [227, 277, 321, 376], "forward": 194, "framework": 467, "fromkei": 155, "full": 474, "function": [460, 461, 462, 463, 467, 474], "functionfeedback": [48, 49, 50, 51, 52, 53, 54], "game": [461, 468], "generate_candid": 108, "get": [156, 261], "get_attr": [351, 357], "get_border_color": 358, "get_color": [352, 359], "get_fun_nam": 92, "get_label": [353, 360], "get_node_shap": [354, 361], "get_op_nam": 405, "get_short_valu": 142, "get_styl": [355, 362], "getattr": [228, 278, 322, 377], "gradient": [128, 471], "gradient_context": 129, "gradient_multipart_templ": 125, "gradient_of_results_instruct": 126, "gradientinfo": [127, 128, 129], "graph": [50, 258, 259, 260, 261, 262, 263, 419, 468, 470], "graph_propag": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "graphpropag": [411, 412, 413, 414, 415], "gt": [204, 229, 279, 323, 378], "handl": 472, "hard": 462, "helper": [460, 461, 462], "hidden_depend": [230, 280], "hyper": 474, "i": 467, "id": [205, 231, 281, 324, 379], "ident": 408, "implement": 471, "index": 176, "info": [232, 282, 325, 380], "init_feedback": [413, 427, 431], "initi": 460, "input": [86, 233, 283], "insert": 177, "instal": [460, 463, 466], "instruct": 87, "introduct": [460, 461, 462, 463], "is_leaf": [206, 234, 284, 326, 381], "is_root": [207, 235, 285, 327, 382], "item": [157, 236, 286, 328, 383], "iter": [188, 189, 190, 191], "join": [237, 287, 329, 384], "kei": [158, 238, 288, 330, 385], "learn": 468, "len": [239, 289, 331, 386], "level": [208, 240, 290, 332, 387], "librari": 464, "like": 464, "litellm": [456, 457], "llama": 464, "llm": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "load": [195, 467], "loop": 474, "lower": [241, 291, 333, 388], "lt": [209, 242, 292, 334, 389], "map": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "messagenod": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 470], "meta": 463, "minut": 467, "ml": 474, "model": [199, 447, 450, 453, 455, 457, 474], "modul": [192, 193, 194, 195, 196, 197, 198, 199], "multi": [461, 469], "multipl": 460, "name": [210, 243, 293, 335, 390], "negoti": 461, "neq": [244, 294, 336, 391], "next": [467, 468, 469], "node": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 470], "node_to_function_feedback": 93, "nodecontain": 166, "nodevizstyleguid": [350, 351, 352, 353, 354, 355], "nodevizstyleguidecolor": [356, 357, 358, 359, 360, 361, 362], "non": 473, "normal": 467, "object": 471, "openai": 464, "oper": [407, 408, 470], "opro": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "optim": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 461, 462, 463, 467, 468, 469, 471, 473, 474], "opto": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "optoprim": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "optoprimemulti": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "other": [51, 88], "output": [52, 89], "output_format_prompt": [19, 67, 109], "paramet": [159, 168, 178, 196, 474], "parameter_depend": [245, 295, 337, 392], "parametercontain": [167, 168, 169], "parameternod": [363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "parameters_dict": [160, 169, 179, 197], "parent": [211, 246, 296, 338, 393], "parse_eqs_to_dict": 439, "polici": 460, "pop": [161, 180, 247, 297, 339, 394], "popitem": 162, "print_color": 145, "pro": 469, "problem_inst": [20, 68, 110], "problem_templ": 90, "probleminst": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "process": [463, 468], "program": 467, "prompt": 461, "propag": [21, 35, 41, 69, 111, 134, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 471], "propos": [22, 42, 70, 112, 135], "put": [460, 462], "py_nam": [212, 248, 298, 340, 395], "python": [467, 470], "pytorch": 471, "record": 469, "recursive_convers": 149, "regist": [262, 415, 429, 433], "reinforc": 468, "remov": 181, "remove_non_ascii": 440, "render_opt_step": 441, "replac": [249, 299, 341, 396], "replace_symbol": [23, 71, 113], "repr_function_cal": 94, "repr_node_constraint": [24, 72, 114], "repr_node_valu": [25, 73, 115], "representation_prompt": [26, 74, 116], "result": 469, "revers": 182, "rm_node_attr": 143, "rollout": [460, 463], "root": [53, 263], "runnabl": 467, "save": [198, 467], "select_candid": 117, "seq": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "seqiter": 190, "set": 471, "setdefault": 163, "setup": [460, 461, 462, 463], "singl": 460, "social": 469, "sort": 183, "split": [250, 300, 342, 397], "stack": 464, "start": 467, "step": [27, 36, 43, 75, 118, 136], "stop_trac": 434, "string": 474, "strip": [251, 301, 343, 398], "structur": 470, "sum_feedback": 442, "summar": [28, 76, 119], "sumpropag": [430, 431, 432, 433], "swapcas": [252, 302, 344, 399], "swarm": 464, "synchron": 469, "test_json_quote_escap": 443, "textgrad": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 464], "thi": 467, "titl": [253, 303, 345, 400], "togeth": [460, 462], "trace": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 462, 463, 465, 467, 468, 471], "trace_graph": [29, 44, 77, 120, 137], "tracegraph": [416, 417, 418, 419, 420, 421], "tracemissinginputserror": 187, "trainabl": 460, "trainable_method": 184, "type": [254, 304, 346, 401], "up": 471, "updat": [30, 45, 78, 121, 138, 164], "upper": [255, 305, 347, 402], "us": [461, 463, 467, 468, 470], "user_feedback": [54, 420], "user_prompt_templ": [31, 79, 122], "util": [144, 145, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "valu": [165, 256, 306, 348, 403], "variabl": 91, "verifi": 467, "version": [459, 471], "virtualhom": 469, "visual": [421, 468, 470], "what": [467, 468, 469], "world": 463, "wrap": [460, 461], "write": 470, "zero_feedback": [32, 37, 46, 80, 123, 139, 257, 307, 349, 404]}})